/* Copyright 2023 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library. If not, see <http://www.gnu.org/licenses/>.
 */

#include <graphene.h>

namespace
{
graphene_point_t* gdkmm_graphene_point_copy(const graphene_point_t* other)
{
  return graphene_point_init_from_point(graphene_point_alloc(), other);
}
} // anonymous namespace

namespace Gdk
{
namespace Graphene
{

Point::Point(float x, float y)
{
  gobject_ = graphene_point_init(graphene_point_alloc(), x, y);
}

Point::operator bool() const
{
  return gobj();
}

} //namespace Graphene
} //namespace Gdk
