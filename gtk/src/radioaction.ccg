/* Copyright (C) 2003 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, see <https://www.gnu.org/licenses/>.
 */

#include <gtk/gtk.h>


typedef Gtk::RadioAction::Group Group; //So that the generate get_group return type is parsed.

namespace Gtk
{

_DEPRECATE_IFDEF_START
RadioAction::RadioAction(Group& group, const Glib::ustring& name, const Gtk::StockID& stock_id, const Glib::ustring& label, const Glib::ustring& tooltip)
:
  _CONSTRUCT("name", name.c_str(), "stock_id", stock_id.get_c_str(), "label", (label.empty() ? nullptr : label.c_str()), "tooltip", (tooltip.empty() ? nullptr : tooltip.c_str()))
{
  set_group(group);
}

RadioAction::RadioAction(Group& group, const Glib::ustring& name, const Glib::ustring& icon_name, const Glib::ustring& label, const Glib::ustring& tooltip)
:
  _CONSTRUCT("name", name.c_str(), "icon_name", icon_name.c_str(), "label", (label.empty() ? nullptr : label.c_str()), "tooltip", (tooltip.empty() ? nullptr : tooltip.c_str()))
{
  set_group(group);
}
_DEPRECATE_IFDEF_END

_DEPRECATE_IFDEF_START
Glib::RefPtr<RadioAction> RadioAction::create(Group& group, const Glib::ustring& name, const Glib::ustring& label, const Glib::ustring& tooltip)
{
  return Glib::RefPtr<RadioAction>( new RadioAction(group, name, Gtk::StockID(), label, tooltip) );
}

Glib::RefPtr<RadioAction> RadioAction::create(Group& group, const Glib::ustring& name, const Gtk::StockID& stock_id, const Glib::ustring& label, const Glib::ustring& tooltip)
{
  return Glib::RefPtr<RadioAction>( new RadioAction(group, name, stock_id, label, tooltip) );
}

Glib::RefPtr<RadioAction> RadioAction::create_with_icon_name(Group& group, const Glib::ustring& name, const Glib::ustring& icon_name, const Glib::ustring& label, const Glib::ustring& tooltip)
{
  return Glib::RefPtr<RadioAction>( new RadioAction(group, name, icon_name, label, tooltip) );
}

void RadioAction::set_group(Group& group)
{
  gtk_radio_action_set_group(gobj(), group.group_);

  //The group will be updated, ready for use with the next radio action:
  group = get_group();
}
_DEPRECATE_IFDEF_END

} // namespace Gtk
