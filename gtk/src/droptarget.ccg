/* Copyright (C) 2020 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library. If not, see <http://www.gnu.org/licenses/>.
 */

#include <glibmm/vectorutils.h>
#include <gtk/gtk.h>

namespace Gtk
{
void DropTarget::set_gtypes(const std::vector<GType>& types)
{
  gtk_drop_target_set_gtypes(gobj(), const_cast<GType*>(types.data()), types.size());
}

std::vector<GType> DropTarget::get_gtypes() const
{
  gsize n_gtypes = 0;
  const GType* gtype_array = gtk_drop_target_get_gtypes(const_cast<GtkDropTarget*>(gobj()), &n_gtypes);
  return Glib::ArrayHandler<GType>::array_to_vector(gtype_array, n_gtypes, Glib::OWNERSHIP_NONE);
}

Glib::ValueBase DropTarget::get_value() const
{
  const GValue* gvalue = gtk_drop_target_get_value(const_cast<GtkDropTarget*>(gobj()));

  Glib::ValueBase retvalue;
  if (gvalue)
    retvalue.init(gvalue);
  return retvalue;
}

} // namesoace Gtk
