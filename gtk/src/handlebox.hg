/* Copyright (C) 1998-2002 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, see <https://www.gnu.org/licenses/>.
 */

#include <gtkmm/eventbox.h>
_DEFS(gtkmm,gtk)
_PINCLUDE(gtkmm/private/bin_p.h)

#m4 _PUSH(SECTION_CC_PRE_INCLUDES)
#undef GTK_DISABLE_DEPRECATED
#define GDK_DISABLE_DEPRECATION_WARNINGS 1
#m4 _POP()

#m4 _CONVERSION(`int',`PositionType',`($2)$3')

namespace Gtk
{

/** A widget for detachable window portions.
 *
 * The Gtk::HandleBox widget allows a portion of a window to be "torn off".
 * It displays its child and a handle that the user can drag to tear off a separate window (the float window) containing the child widget. A thin ghost is drawn in the original location of the handlebox. By dragging the separate window back to its original location, it can be reattached.
 * When reattaching, the ghost and float window must be aligned along one of the edges, the snap edge. This can be specified by the application programmer explicitely, or GTK+ will pick a reasonable default based on the handle position.
 * To make detaching and reattaching the handlebox as minimally confusing as possible to the user, it is important to set the snap edge so that the snap edge does not move when the handlebox is deattached.
 * For instance, if the handlebox is packed at the bottom of a VBox, then when the handlebox is detached, the bottom edge of the handlebox's allocation will remain fixed as the height of the handlebox shrinks, so the snap edge should be set to GTK_POS_BOTTOM.
 *
 * @deprecated This is very specialized, lacks features
 * to make it useful and most importantly does not fit well into modern
 * application design. There is no replacement.
 *
 * @ingroup Widgets
 * @ingroup Containers
 */
class GTKMM_API HandleBox : public Bin
{
  _CLASS_GTKOBJECT(HandleBox,GtkHandleBox,GTK_HANDLE_BOX,Gtk::Bin,GtkBin,,,GTKMM_API)
  _IS_DEPRECATED
public:
  _CTOR_DEFAULT


  _WRAP_METHOD(void set_shadow_type(ShadowType type), gtk_handle_box_set_shadow_type)
  _WRAP_METHOD(ShadowType get_shadow_type() const, gtk_handle_box_get_shadow_type)
  _WRAP_METHOD(void set_handle_position(PositionType position), gtk_handle_box_set_handle_position)
  _WRAP_METHOD(PositionType get_handle_position() const, gtk_handle_box_get_handle_position)
  _WRAP_METHOD(void set_snap_edge(PositionType edge), gtk_handle_box_set_snap_edge)
  _WRAP_METHOD(PositionType get_snap_edge() const, gtk_handle_box_get_snap_edge)

  _WRAP_METHOD(bool is_child_detached() const, gtk_handle_box_get_child_detached)

  _WRAP_SIGNAL(void child_attached(Widget* child), "child_attached")
  _WRAP_SIGNAL(void child_detached(Widget* child), "child_detached")

  //_WRAP_PROPERTY("shadow", ShadowType); //deprecated.
  _WRAP_PROPERTY("shadow-type", ShadowType)
  _WRAP_PROPERTY("handle-position", PositionType)
  _WRAP_PROPERTY("snap-edge", PositionType)
  _WRAP_PROPERTY("snap-edge-set", bool)
  _WRAP_PROPERTY("child-detached", bool)
};

} //namespace Gtk
