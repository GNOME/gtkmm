/* Copyright (C) 2002 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, see <https://www.gnu.org/licenses/>.
 */

#include <gtk/gtk.h>

namespace Gtk
{

TextView::TextView(const Glib::RefPtr<TextBuffer>& buffer)
:
  _CONSTRUCT()
{
  set_buffer(buffer);
}

bool TextView::scroll_to(TextBuffer::iterator& iter, double within_margin)
{
  //The last 2 arguments are ignored if use_align is FALSE.
  return gtk_text_view_scroll_to_iter(gobj(), (iter).gobj(), within_margin, FALSE, 0.0, 0.0);
}

bool TextView::scroll_to(TextBuffer::iterator& iter, double within_margin, double xalign, double yalign)
{
  return gtk_text_view_scroll_to_iter(gobj(), (iter).gobj(), within_margin, TRUE /* use_align */, xalign, yalign);
}

void TextView::scroll_to(const Glib::RefPtr<TextBuffer::Mark>& mark, double within_margin)
{
  //The last 2 arguments are ignored if use_align is FALSE.
  gtk_text_view_scroll_to_mark(gobj(), Glib::unwrap(mark), within_margin, FALSE, 0.0, 0.0);
}

void TextView::scroll_to(const Glib::RefPtr<TextBuffer::Mark>& mark, double within_margin, double xalign, double yalign)
{
  gtk_text_view_scroll_to_mark(gobj(), Glib::unwrap(mark), within_margin, TRUE /* use_align */, xalign, yalign);
}

} // namespace Gtk
