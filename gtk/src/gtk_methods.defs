;; -*- scheme -*-
; object definitions ...
(define-object Adjustment
  (in-module "Gtk")
  (parent "GInitiallyUnowned")
  (c-name "GtkAdjustment")
  (gtype-id "GTK_TYPE_ADJUSTMENT")
)

(define-object Application
  (in-module "Gtk")
  (parent "GApplication")
  (c-name "GtkApplication")
  (gtype-id "GTK_TYPE_APPLICATION")
)

(define-object Buildable
  (in-module "Gtk")
  (c-name "GtkBuildable")
  (gtype-id "GTK_TYPE_BUILDABLE")
)

(define-object CellArea
  (in-module "Gtk")
  (parent "GInitiallyUnowned")
  (c-name "GtkCellArea")
  (gtype-id "GTK_TYPE_CELL_AREA")
)

(define-object CellAreaContext
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkCellAreaContext")
  (gtype-id "GTK_TYPE_CELL_AREA_CONTEXT")
)

(define-object CellEditable
  (in-module "Gtk")
  (c-name "GtkCellEditable")
  (gtype-id "GTK_TYPE_CELL_EDITABLE")
)

(define-object CellLayout
  (in-module "Gtk")
  (c-name "GtkCellLayout")
  (gtype-id "GTK_TYPE_CELL_LAYOUT")
)

(define-object CellRenderer
  (in-module "Gtk")
  (parent "GInitiallyUnowned")
  (c-name "GtkCellRenderer")
  (gtype-id "GTK_TYPE_CELL_RENDERER")
)

(define-object CellRendererText
  (in-module "Gtk")
  (parent "GtkCellRenderer")
  (c-name "GtkCellRendererText")
  (gtype-id "GTK_TYPE_CELL_RENDERER_TEXT")
)

(define-object EntryBuffer
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkEntryBuffer")
  (gtype-id "GTK_TYPE_ENTRY_BUFFER")
)

(define-object FontChooser
  (in-module "Gtk")
  (c-name "GtkFontChooser")
  (gtype-id "GTK_TYPE_FONT_CHOOSER")
)

(define-object IMContext
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkIMContext")
  (gtype-id "GTK_TYPE_IM_CONTEXT")
)

(define-object IMContextIME
  (in-module "Gtk")
  (parent "GtkIMContext")
  (c-name "GtkIMContextIME")
  (gtype-id "GTK_TYPE_IM_CONTEXT_IME")
)

(define-object IMContextSimple
  (in-module "Gtk")
  (parent "GtkIMContext")
  (c-name "GtkIMContextSimple")
  (gtype-id "GTK_TYPE_IM_CONTEXT_SIMPLE")
)

(define-object IMMulticontext
  (in-module "Gtk")
  (parent "GtkIMContext")
  (c-name "GtkIMMulticontext")
  (gtype-id "GTK_TYPE_IM_MULTICONTEXT")
)

(define-object ListStore
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkListStore")
  (gtype-id "GTK_TYPE_LIST_STORE")
)

(define-object MountOperation
  (in-module "Gtk")
  (parent "GMountOperation")
  (c-name "GtkMountOperation")
  (gtype-id "GTK_TYPE_MOUNT_OPERATION")
)

(define-object Orientable
  (in-module "Gtk")
  (c-name "GtkOrientable")
  (gtype-id "GTK_TYPE_ORIENTABLE")
)

(define-object PrintOperation
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkPrintOperation")
  (gtype-id "GTK_TYPE_PRINT_OPERATION")
)

(define-object PrintOperationPreview
  (in-module "Gtk")
  (c-name "GtkPrintOperationPreview")
  (gtype-id "GTK_TYPE_PRINT_OPERATION_PREVIEW")
)

(define-object PrinterOption
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkPrinterOption")
  (gtype-id "GTK_TYPE_PRINTER_OPTION")
)

(define-object PrinterOptionSet
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkPrinterOptionSet")
  (gtype-id "GTK_TYPE_PRINTER_OPTION_SET")
)

(define-object Query
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkQuery")
  (gtype-id "GTK_TYPE_QUERY")
)

(define-object RecentManager
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkRecentManager")
  (gtype-id "GTK_TYPE_RECENT_MANAGER")
)

(define-object SearchEngine
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkSearchEngine")
  (gtype-id "GTK_TYPE_SEARCH_ENGINE")
)

(define-object SearchEngineQuartz
  (in-module "Gtk")
  (parent "GtkSearchEngine")
  (c-name "GtkSearchEngineQuartz")
  (gtype-id "GTK_TYPE_SEARCH_ENGINE_QUARTZ")
)

(define-object StyleContext
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkStyleContext")
  (gtype-id "GTK_TYPE_STYLE_CONTEXT")
)

(define-object TextBuffer
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkTextBuffer")
  (gtype-id "GTK_TYPE_TEXT_BUFFER")
)

(define-object TextChildAnchor
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkTextChildAnchor")
  (gtype-id "GTK_TYPE_TEXT_CHILD_ANCHOR")
)

(define-object TextMark
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkTextMark")
  (gtype-id "GTK_TYPE_TEXT_MARK")
)

(define-object TextTag
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkTextTag")
  (gtype-id "GTK_TYPE_TEXT_TAG")
)

(define-object TreeDragDest
  (in-module "Gtk")
  (c-name "GtkTreeDragDest")
  (gtype-id "GTK_TYPE_TREE_DRAG_DEST")
)

(define-object TreeDragSource
  (in-module "Gtk")
  (c-name "GtkTreeDragSource")
  (gtype-id "GTK_TYPE_TREE_DRAG_SOURCE")
)

(define-object TreeModel
  (in-module "Gtk")
  (c-name "GtkTreeModel")
  (gtype-id "GTK_TYPE_TREE_MODEL")
)

(define-object TreeModelFilter
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkTreeModelFilter")
  (gtype-id "GTK_TYPE_TREE_MODEL_FILTER")
)

(define-object TreeModelSort
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkTreeModelSort")
  (gtype-id "GTK_TYPE_TREE_MODEL_SORT")
)

(define-object TreeSortable
  (in-module "Gtk")
  (c-name "GtkTreeSortable")
  (gtype-id "GTK_TYPE_TREE_SORTABLE")
)

(define-object TreeStore
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkTreeStore")
  (gtype-id "GTK_TYPE_TREE_STORE")
)

(define-object Widget
  (in-module "Gtk")
  (parent "GInitiallyUnowned")
  (c-name "GtkWidget")
  (gtype-id "GTK_TYPE_WIDGET")
)

(define-object TreeView
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkTreeView")
  (gtype-id "GTK_TYPE_TREE_VIEW")
)

(define-object TextView
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkTextView")
  (gtype-id "GTK_TYPE_TEXT_VIEW")
)

(define-object ScaleButton
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkScaleButton")
  (gtype-id "GTK_TYPE_SCALE_BUTTON")
)

(define-object Range
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkRange")
  (gtype-id "GTK_TYPE_RANGE")
)

(define-object Scale
  (in-module "Gtk")
  (parent "GtkRange")
  (c-name "GtkScale")
  (gtype-id "GTK_TYPE_SCALE")
)

(define-object Popover
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkPopover")
  (gtype-id "GTK_TYPE_POPOVER")
)

(define-object ListBoxRow
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkListBoxRow")
  (gtype-id "GTK_TYPE_LIST_BOX_ROW")
)

(define-object Grid
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkGrid")
  (gtype-id "GTK_TYPE_GRID")
)

(define-object GLArea
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkGLArea")
  (gtype-id "GTK_TYPE_GL_AREA")
)

(define-object Frame
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkFrame")
  (gtype-id "GTK_TYPE_FRAME")
)

(define-object FlowBoxChild
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkFlowBoxChild")
  (gtype-id "GTK_TYPE_FLOW_BOX_CHILD")
)

(define-object Fixed
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkFixed")
  (gtype-id "GTK_TYPE_FIXED")
)

(define-object Entry
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkEntry")
  (gtype-id "GTK_TYPE_ENTRY")
)

(define-object DrawingArea
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkDrawingArea")
  (gtype-id "GTK_TYPE_DRAWING_AREA")
)

(define-object ComboBox
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkComboBox")
  (gtype-id "GTK_TYPE_COMBO_BOX")
)

(define-object CheckButton
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkCheckButton")
  (gtype-id "GTK_TYPE_CHECK_BUTTON")
)

(define-object Button
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkButton")
  (gtype-id "GTK_TYPE_BUTTON")
)

(define-object ToggleButton
  (in-module "Gtk")
  (parent "GtkButton")
  (c-name "GtkToggleButton")
  (gtype-id "GTK_TYPE_TOGGLE_BUTTON")
)

(define-object Box
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkBox")
  (gtype-id "GTK_TYPE_BOX")
)

(define-object PrinterOptionWidget
  (in-module "Gtk")
  (parent "GtkBox")
  (c-name "GtkPrinterOptionWidget")
  (gtype-id "GTK_TYPE_PRINTER_OPTION_WIDGET")
)

(define-object Window
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkWindow")
  (gtype-id "GTK_TYPE_WINDOW")
)

(define-object Dialog
  (in-module "Gtk")
  (parent "GtkWindow")
  (c-name "GtkDialog")
  (gtype-id "GTK_TYPE_DIALOG")
)

(define-object ApplicationWindow
  (in-module "Gtk")
  (parent "GtkWindow")
  (c-name "GtkApplicationWindow")
  (gtype-id "GTK_TYPE_APPLICATION_WINDOW")
)

(define-object WindowGroup
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkWindowGroup")
  (gtype-id "GTK_TYPE_WINDOW_GROUP")
)

;; Enumerations and flags ...

(define-enum License
  (in-module "Gtk")
  (c-name "GtkLicense")
  (gtype-id "GTK_TYPE_LICENSE")
  (values
    '("unknown" "GTK_LICENSE_UNKNOWN")
    '("custom" "GTK_LICENSE_CUSTOM")
    '("gpl-2-0" "GTK_LICENSE_GPL_2_0")
    '("gpl-3-0" "GTK_LICENSE_GPL_3_0")
    '("lgpl-2-1" "GTK_LICENSE_LGPL_2_1")
    '("lgpl-3-0" "GTK_LICENSE_LGPL_3_0")
    '("bsd" "GTK_LICENSE_BSD")
    '("mit-x11" "GTK_LICENSE_MIT_X11")
    '("artistic" "GTK_LICENSE_ARTISTIC")
    '("gpl-2-0-only" "GTK_LICENSE_GPL_2_0_ONLY")
    '("gpl-3-0-only" "GTK_LICENSE_GPL_3_0_ONLY")
    '("lgpl-2-1-only" "GTK_LICENSE_LGPL_2_1_ONLY")
    '("lgpl-3-0-only" "GTK_LICENSE_LGPL_3_0_ONLY")
    '("agpl-3-0" "GTK_LICENSE_AGPL_3_0")
    '("agpl-3-0-only" "GTK_LICENSE_AGPL_3_0_ONLY")
    '("bsd-3" "GTK_LICENSE_BSD_3")
    '("apache-2-0" "GTK_LICENSE_APACHE_2_0")
    '("mpl-2-0" "GTK_LICENSE_MPL_2_0")
  )
)

(define-flags ApplicationInhibitFlags
  (in-module "Gtk")
  (c-name "GtkApplicationInhibitFlags")
  (gtype-id "GTK_TYPE_APPLICATION_INHIBIT_FLAGS")
  (values
    '("logout" "GTK_APPLICATION_INHIBIT_LOGOUT")
    '("switch" "GTK_APPLICATION_INHIBIT_SWITCH")
    '("suspend" "GTK_APPLICATION_INHIBIT_SUSPEND")
    '("idle" "GTK_APPLICATION_INHIBIT_IDLE")
  )
)

(define-enum AssistantPageType
  (in-module "Gtk")
  (c-name "GtkAssistantPageType")
  (gtype-id "GTK_TYPE_ASSISTANT_PAGE_TYPE")
  (values
    '("content" "GTK_ASSISTANT_PAGE_CONTENT")
    '("intro" "GTK_ASSISTANT_PAGE_INTRO")
    '("confirm" "GTK_ASSISTANT_PAGE_CONFIRM")
    '("summary" "GTK_ASSISTANT_PAGE_SUMMARY")
    '("progress" "GTK_ASSISTANT_PAGE_PROGRESS")
    '("custom" "GTK_ASSISTANT_PAGE_CUSTOM")
  )
)

(define-enum BuilderError
  (in-module "Gtk")
  (c-name "GtkBuilderError")
  (gtype-id "GTK_TYPE_BUILDER_ERROR")
  (values
    '("invalid-type-function" "GTK_BUILDER_ERROR_INVALID_TYPE_FUNCTION")
    '("unhandled-tag" "GTK_BUILDER_ERROR_UNHANDLED_TAG")
    '("missing-attribute" "GTK_BUILDER_ERROR_MISSING_ATTRIBUTE")
    '("invalid-attribute" "GTK_BUILDER_ERROR_INVALID_ATTRIBUTE")
    '("invalid-tag" "GTK_BUILDER_ERROR_INVALID_TAG")
    '("missing-property-value" "GTK_BUILDER_ERROR_MISSING_PROPERTY_VALUE")
    '("invalid-value" "GTK_BUILDER_ERROR_INVALID_VALUE")
    '("version-mismatch" "GTK_BUILDER_ERROR_VERSION_MISMATCH")
    '("duplicate-id" "GTK_BUILDER_ERROR_DUPLICATE_ID")
    '("object-type-refused" "GTK_BUILDER_ERROR_OBJECT_TYPE_REFUSED")
    '("template-mismatch" "GTK_BUILDER_ERROR_TEMPLATE_MISMATCH")
    '("invalid-property" "GTK_BUILDER_ERROR_INVALID_PROPERTY")
    '("invalid-signal" "GTK_BUILDER_ERROR_INVALID_SIGNAL")
    '("invalid-id" "GTK_BUILDER_ERROR_INVALID_ID")
    '("invalid-function" "GTK_BUILDER_ERROR_INVALID_FUNCTION")
  )
)

(define-flags BuilderClosureFlags
  (in-module "Gtk")
  (c-name "GtkBuilderClosureFlags")
  (gtype-id "GTK_TYPE_BUILDER_CLOSURE_FLAGS")
  (values
    '("swapped" "GTK_BUILDER_CLOSURE_SWAPPED")
  )
)

(define-enum CellRendererAccelMode
  (in-module "Gtk")
  (c-name "GtkCellRendererAccelMode")
  (gtype-id "GTK_TYPE_CELL_RENDERER_ACCEL_MODE")
  (values
    '("gtk" "GTK_CELL_RENDERER_ACCEL_MODE_GTK")
    '("other" "GTK_CELL_RENDERER_ACCEL_MODE_OTHER")
  )
)

(define-flags CellRendererState
  (in-module "Gtk")
  (c-name "GtkCellRendererState")
  (gtype-id "GTK_TYPE_CELL_RENDERER_STATE")
  (values
    '("selected" "GTK_CELL_RENDERER_SELECTED")
    '("prelit" "GTK_CELL_RENDERER_PRELIT")
    '("insensitive" "GTK_CELL_RENDERER_INSENSITIVE")
    '("sorted" "GTK_CELL_RENDERER_SORTED")
    '("focused" "GTK_CELL_RENDERER_FOCUSED")
    '("expandable" "GTK_CELL_RENDERER_EXPANDABLE")
    '("expanded" "GTK_CELL_RENDERER_EXPANDED")
  )
)

(define-enum CellRendererMode
  (in-module "Gtk")
  (c-name "GtkCellRendererMode")
  (gtype-id "GTK_TYPE_CELL_RENDERER_MODE")
  (values
    '("inert" "GTK_CELL_RENDERER_MODE_INERT")
    '("activatable" "GTK_CELL_RENDERER_MODE_ACTIVATABLE")
    '("editable" "GTK_CELL_RENDERER_MODE_EDITABLE")
  )
)

(define-flags DebugFlags
  (in-module "Gtk")
  (c-name "GtkDebugFlags")
  (gtype-id "GTK_TYPE_DEBUG_FLAGS")
  (values
    '("text" "GTK_DEBUG_TEXT")
    '("tree" "GTK_DEBUG_TREE")
    '("keybindings" "GTK_DEBUG_KEYBINDINGS")
    '("modules" "GTK_DEBUG_MODULES")
    '("geometry" "GTK_DEBUG_GEOMETRY")
    '("icontheme" "GTK_DEBUG_ICONTHEME")
    '("printing" "GTK_DEBUG_PRINTING")
    '("builder" "GTK_DEBUG_BUILDER")
    '("size-request" "GTK_DEBUG_SIZE_REQUEST")
    '("no-css-cache" "GTK_DEBUG_NO_CSS_CACHE")
    '("interactive" "GTK_DEBUG_INTERACTIVE")
    '("touchscreen" "GTK_DEBUG_TOUCHSCREEN")
    '("actions" "GTK_DEBUG_ACTIONS")
    '("layout" "GTK_DEBUG_LAYOUT")
    '("snapshot" "GTK_DEBUG_SNAPSHOT")
    '("constraints" "GTK_DEBUG_CONSTRAINTS")
    '("builder-objects" "GTK_DEBUG_BUILDER_OBJECTS")
    '("a11y" "GTK_DEBUG_A11Y")
  )
)

(define-flags DialogFlags
  (in-module "Gtk")
  (c-name "GtkDialogFlags")
  (gtype-id "GTK_TYPE_DIALOG_FLAGS")
  (values
    '("modal" "GTK_DIALOG_MODAL")
    '("destroy-with-parent" "GTK_DIALOG_DESTROY_WITH_PARENT")
    '("use-header-bar" "GTK_DIALOG_USE_HEADER_BAR")
  )
)

(define-enum ResponseType
  (in-module "Gtk")
  (c-name "GtkResponseType")
  (gtype-id "GTK_TYPE_RESPONSE_TYPE")
  (values
    '("none" "GTK_RESPONSE_NONE")
    '("reject" "GTK_RESPONSE_REJECT")
    '("accept" "GTK_RESPONSE_ACCEPT")
    '("delete-event" "GTK_RESPONSE_DELETE_EVENT")
    '("ok" "GTK_RESPONSE_OK")
    '("cancel" "GTK_RESPONSE_CANCEL")
    '("close" "GTK_RESPONSE_CLOSE")
    '("yes" "GTK_RESPONSE_YES")
    '("no" "GTK_RESPONSE_NO")
    '("apply" "GTK_RESPONSE_APPLY")
    '("help" "GTK_RESPONSE_HELP")
  )
)

(define-enum EditableProperties
  (in-module "Gtk")
  (c-name "GtkEditableProperties")
  (gtype-id "GTK_TYPE_EDITABLE_PROPERTIES")
  (values
    '("prop-text" "GTK_EDITABLE_PROP_TEXT")
    '("prop-cursor-position" "GTK_EDITABLE_PROP_CURSOR_POSITION")
    '("prop-selection-bound" "GTK_EDITABLE_PROP_SELECTION_BOUND")
    '("prop-editable" "GTK_EDITABLE_PROP_EDITABLE")
    '("prop-width-chars" "GTK_EDITABLE_PROP_WIDTH_CHARS")
    '("prop-max-width-chars" "GTK_EDITABLE_PROP_MAX_WIDTH_CHARS")
    '("prop-xalign" "GTK_EDITABLE_PROP_XALIGN")
    '("prop-enable-undo" "GTK_EDITABLE_PROP_ENABLE_UNDO")
    '("num-properties" "GTK_EDITABLE_NUM_PROPERTIES")
  )
)

(define-enum EntryIconPosition
  (in-module "Gtk")
  (c-name "GtkEntryIconPosition")
  (gtype-id "GTK_TYPE_ENTRY_ICON_POSITION")
  (values
    '("primary" "GTK_ENTRY_ICON_PRIMARY")
    '("secondary" "GTK_ENTRY_ICON_SECONDARY")
  )
)

(define-enum Align
  (in-module "Gtk")
  (c-name "GtkAlign")
  (gtype-id "GTK_TYPE_ALIGN")
  (values
    '("fill" "GTK_ALIGN_FILL")
    '("start" "GTK_ALIGN_START")
    '("end" "GTK_ALIGN_END")
    '("center" "GTK_ALIGN_CENTER")
    '("baseline" "GTK_ALIGN_BASELINE")
  )
)

(define-enum ArrowType
  (in-module "Gtk")
  (c-name "GtkArrowType")
  (gtype-id "GTK_TYPE_ARROW_TYPE")
  (values
    '("up" "GTK_ARROW_UP")
    '("down" "GTK_ARROW_DOWN")
    '("left" "GTK_ARROW_LEFT")
    '("right" "GTK_ARROW_RIGHT")
    '("none" "GTK_ARROW_NONE")
  )
)

(define-enum BaselinePosition
  (in-module "Gtk")
  (c-name "GtkBaselinePosition")
  (gtype-id "GTK_TYPE_BASELINE_POSITION")
  (values
    '("top" "GTK_BASELINE_POSITION_TOP")
    '("center" "GTK_BASELINE_POSITION_CENTER")
    '("bottom" "GTK_BASELINE_POSITION_BOTTOM")
  )
)

(define-enum DeleteType
  (in-module "Gtk")
  (c-name "GtkDeleteType")
  (gtype-id "GTK_TYPE_DELETE_TYPE")
  (values
    '("chars" "GTK_DELETE_CHARS")
    '("word-ends" "GTK_DELETE_WORD_ENDS")
    '("words" "GTK_DELETE_WORDS")
    '("display-lines" "GTK_DELETE_DISPLAY_LINES")
    '("display-line-ends" "GTK_DELETE_DISPLAY_LINE_ENDS")
    '("paragraph-ends" "GTK_DELETE_PARAGRAPH_ENDS")
    '("paragraphs" "GTK_DELETE_PARAGRAPHS")
    '("whitespace" "GTK_DELETE_WHITESPACE")
  )
)

(define-enum DirectionType
  (in-module "Gtk")
  (c-name "GtkDirectionType")
  (gtype-id "GTK_TYPE_DIRECTION_TYPE")
  (values
    '("tab-forward" "GTK_DIR_TAB_FORWARD")
    '("tab-backward" "GTK_DIR_TAB_BACKWARD")
    '("up" "GTK_DIR_UP")
    '("down" "GTK_DIR_DOWN")
    '("left" "GTK_DIR_LEFT")
    '("right" "GTK_DIR_RIGHT")
  )
)

(define-enum IconSize
  (in-module "Gtk")
  (c-name "GtkIconSize")
  (gtype-id "GTK_TYPE_ICON_SIZE")
  (values
    '("inherit" "GTK_ICON_SIZE_INHERIT")
    '("normal" "GTK_ICON_SIZE_NORMAL")
    '("large" "GTK_ICON_SIZE_LARGE")
  )
)

(define-enum SensitivityType
  (in-module "Gtk")
  (c-name "GtkSensitivityType")
  (gtype-id "GTK_TYPE_SENSITIVITY_TYPE")
  (values
    '("auto" "GTK_SENSITIVITY_AUTO")
    '("on" "GTK_SENSITIVITY_ON")
    '("off" "GTK_SENSITIVITY_OFF")
  )
)

(define-enum TextDirection
  (in-module "Gtk")
  (c-name "GtkTextDirection")
  (gtype-id "GTK_TYPE_TEXT_DIRECTION")
  (values
    '("none" "GTK_TEXT_DIR_NONE")
    '("ltr" "GTK_TEXT_DIR_LTR")
    '("rtl" "GTK_TEXT_DIR_RTL")
  )
)

(define-enum Justification
  (in-module "Gtk")
  (c-name "GtkJustification")
  (gtype-id "GTK_TYPE_JUSTIFICATION")
  (values
    '("left" "GTK_JUSTIFY_LEFT")
    '("right" "GTK_JUSTIFY_RIGHT")
    '("center" "GTK_JUSTIFY_CENTER")
    '("fill" "GTK_JUSTIFY_FILL")
  )
)

(define-enum MessageType
  (in-module "Gtk")
  (c-name "GtkMessageType")
  (gtype-id "GTK_TYPE_MESSAGE_TYPE")
  (values
    '("info" "GTK_MESSAGE_INFO")
    '("warning" "GTK_MESSAGE_WARNING")
    '("question" "GTK_MESSAGE_QUESTION")
    '("error" "GTK_MESSAGE_ERROR")
    '("other" "GTK_MESSAGE_OTHER")
  )
)

(define-enum MovementStep
  (in-module "Gtk")
  (c-name "GtkMovementStep")
  (gtype-id "GTK_TYPE_MOVEMENT_STEP")
  (values
    '("logical-positions" "GTK_MOVEMENT_LOGICAL_POSITIONS")
    '("visual-positions" "GTK_MOVEMENT_VISUAL_POSITIONS")
    '("words" "GTK_MOVEMENT_WORDS")
    '("display-lines" "GTK_MOVEMENT_DISPLAY_LINES")
    '("display-line-ends" "GTK_MOVEMENT_DISPLAY_LINE_ENDS")
    '("paragraphs" "GTK_MOVEMENT_PARAGRAPHS")
    '("paragraph-ends" "GTK_MOVEMENT_PARAGRAPH_ENDS")
    '("pages" "GTK_MOVEMENT_PAGES")
    '("buffer-ends" "GTK_MOVEMENT_BUFFER_ENDS")
    '("horizontal-pages" "GTK_MOVEMENT_HORIZONTAL_PAGES")
  )
)

(define-enum ScrollStep
  (in-module "Gtk")
  (c-name "GtkScrollStep")
  (gtype-id "GTK_TYPE_SCROLL_STEP")
  (values
    '("steps" "GTK_SCROLL_STEPS")
    '("pages" "GTK_SCROLL_PAGES")
    '("ends" "GTK_SCROLL_ENDS")
    '("horizontal-steps" "GTK_SCROLL_HORIZONTAL_STEPS")
    '("horizontal-pages" "GTK_SCROLL_HORIZONTAL_PAGES")
    '("horizontal-ends" "GTK_SCROLL_HORIZONTAL_ENDS")
  )
)

(define-enum Orientation
  (in-module "Gtk")
  (c-name "GtkOrientation")
  (gtype-id "GTK_TYPE_ORIENTATION")
  (values
    '("horizontal" "GTK_ORIENTATION_HORIZONTAL")
    '("vertical" "GTK_ORIENTATION_VERTICAL")
  )
)

(define-enum Overflow
  (in-module "Gtk")
  (c-name "GtkOverflow")
  (gtype-id "GTK_TYPE_OVERFLOW")
  (values
    '("visible" "GTK_OVERFLOW_VISIBLE")
    '("hidden" "GTK_OVERFLOW_HIDDEN")
  )
)

(define-enum PackType
  (in-module "Gtk")
  (c-name "GtkPackType")
  (gtype-id "GTK_TYPE_PACK_TYPE")
  (values
    '("start" "GTK_PACK_START")
    '("end" "GTK_PACK_END")
  )
)

(define-enum PositionType
  (in-module "Gtk")
  (c-name "GtkPositionType")
  (gtype-id "GTK_TYPE_POSITION_TYPE")
  (values
    '("left" "GTK_POS_LEFT")
    '("right" "GTK_POS_RIGHT")
    '("top" "GTK_POS_TOP")
    '("bottom" "GTK_POS_BOTTOM")
  )
)

(define-enum ScrollType
  (in-module "Gtk")
  (c-name "GtkScrollType")
  (gtype-id "GTK_TYPE_SCROLL_TYPE")
  (values
    '("none" "GTK_SCROLL_NONE")
    '("jump" "GTK_SCROLL_JUMP")
    '("step-backward" "GTK_SCROLL_STEP_BACKWARD")
    '("step-forward" "GTK_SCROLL_STEP_FORWARD")
    '("page-backward" "GTK_SCROLL_PAGE_BACKWARD")
    '("page-forward" "GTK_SCROLL_PAGE_FORWARD")
    '("step-up" "GTK_SCROLL_STEP_UP")
    '("step-down" "GTK_SCROLL_STEP_DOWN")
    '("page-up" "GTK_SCROLL_PAGE_UP")
    '("page-down" "GTK_SCROLL_PAGE_DOWN")
    '("step-left" "GTK_SCROLL_STEP_LEFT")
    '("step-right" "GTK_SCROLL_STEP_RIGHT")
    '("page-left" "GTK_SCROLL_PAGE_LEFT")
    '("page-right" "GTK_SCROLL_PAGE_RIGHT")
    '("start" "GTK_SCROLL_START")
    '("end" "GTK_SCROLL_END")
  )
)

(define-enum SelectionMode
  (in-module "Gtk")
  (c-name "GtkSelectionMode")
  (gtype-id "GTK_TYPE_SELECTION_MODE")
  (values
    '("none" "GTK_SELECTION_NONE")
    '("single" "GTK_SELECTION_SINGLE")
    '("browse" "GTK_SELECTION_BROWSE")
    '("multiple" "GTK_SELECTION_MULTIPLE")
  )
)

(define-enum WrapMode
  (in-module "Gtk")
  (c-name "GtkWrapMode")
  (gtype-id "GTK_TYPE_WRAP_MODE")
  (values
    '("none" "GTK_WRAP_NONE")
    '("char" "GTK_WRAP_CHAR")
    '("word" "GTK_WRAP_WORD")
    '("word-char" "GTK_WRAP_WORD_CHAR")
  )
)

(define-enum SortType
  (in-module "Gtk")
  (c-name "GtkSortType")
  (gtype-id "GTK_TYPE_SORT_TYPE")
  (values
    '("ascending" "GTK_SORT_ASCENDING")
    '("descending" "GTK_SORT_DESCENDING")
  )
)

(define-enum PrintPages
  (in-module "Gtk")
  (c-name "GtkPrintPages")
  (gtype-id "GTK_TYPE_PRINT_PAGES")
  (values
    '("all" "GTK_PRINT_PAGES_ALL")
    '("current" "GTK_PRINT_PAGES_CURRENT")
    '("ranges" "GTK_PRINT_PAGES_RANGES")
    '("selection" "GTK_PRINT_PAGES_SELECTION")
  )
)

(define-enum PageSet
  (in-module "Gtk")
  (c-name "GtkPageSet")
  (gtype-id "GTK_TYPE_PAGE_SET")
  (values
    '("all" "GTK_PAGE_SET_ALL")
    '("even" "GTK_PAGE_SET_EVEN")
    '("odd" "GTK_PAGE_SET_ODD")
  )
)

(define-enum NumberUpLayout
  (in-module "Gtk")
  (c-name "GtkNumberUpLayout")
  (gtype-id "GTK_TYPE_NUMBER_UP_LAYOUT")
  (values
    '("left-to-right-top-to-bottom" "GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_TOP_TO_BOTTOM")
    '("left-to-right-bottom-to-top" "GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_BOTTOM_TO_TOP")
    '("right-to-left-top-to-bottom" "GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_TOP_TO_BOTTOM")
    '("right-to-left-bottom-to-top" "GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_BOTTOM_TO_TOP")
    '("top-to-bottom-left-to-right" "GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_LEFT_TO_RIGHT")
    '("top-to-bottom-right-to-left" "GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_RIGHT_TO_LEFT")
    '("bottom-to-top-left-to-right" "GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_LEFT_TO_RIGHT")
    '("bottom-to-top-right-to-left" "GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_RIGHT_TO_LEFT")
  )
)

(define-enum Ordering
  (in-module "Gtk")
  (c-name "GtkOrdering")
  (gtype-id "GTK_TYPE_ORDERING")
  (values
    '("smaller" "GTK_ORDERING_SMALLER")
    '("equal" "GTK_ORDERING_EQUAL")
    '("larger" "GTK_ORDERING_LARGER")
  )
)

(define-enum PageOrientation
  (in-module "Gtk")
  (c-name "GtkPageOrientation")
  (gtype-id "GTK_TYPE_PAGE_ORIENTATION")
  (values
    '("portrait" "GTK_PAGE_ORIENTATION_PORTRAIT")
    '("landscape" "GTK_PAGE_ORIENTATION_LANDSCAPE")
    '("reverse-portrait" "GTK_PAGE_ORIENTATION_REVERSE_PORTRAIT")
    '("reverse-landscape" "GTK_PAGE_ORIENTATION_REVERSE_LANDSCAPE")
  )
)

(define-enum PrintQuality
  (in-module "Gtk")
  (c-name "GtkPrintQuality")
  (gtype-id "GTK_TYPE_PRINT_QUALITY")
  (values
    '("low" "GTK_PRINT_QUALITY_LOW")
    '("normal" "GTK_PRINT_QUALITY_NORMAL")
    '("high" "GTK_PRINT_QUALITY_HIGH")
    '("draft" "GTK_PRINT_QUALITY_DRAFT")
  )
)

(define-enum PrintDuplex
  (in-module "Gtk")
  (c-name "GtkPrintDuplex")
  (gtype-id "GTK_TYPE_PRINT_DUPLEX")
  (values
    '("simplex" "GTK_PRINT_DUPLEX_SIMPLEX")
    '("horizontal" "GTK_PRINT_DUPLEX_HORIZONTAL")
    '("vertical" "GTK_PRINT_DUPLEX_VERTICAL")
  )
)

(define-enum Unit
  (in-module "Gtk")
  (c-name "GtkUnit")
  (gtype-id "GTK_TYPE_UNIT")
  (values
    '("none" "GTK_UNIT_NONE")
    '("points" "GTK_UNIT_POINTS")
    '("inch" "GTK_UNIT_INCH")
    '("mm" "GTK_UNIT_MM")
  )
)

(define-enum TreeViewGridLines
  (in-module "Gtk")
  (c-name "GtkTreeViewGridLines")
  (gtype-id "GTK_TYPE_TREE_VIEW_GRID_LINES")
  (values
    '("none" "GTK_TREE_VIEW_GRID_LINES_NONE")
    '("horizontal" "GTK_TREE_VIEW_GRID_LINES_HORIZONTAL")
    '("vertical" "GTK_TREE_VIEW_GRID_LINES_VERTICAL")
    '("both" "GTK_TREE_VIEW_GRID_LINES_BOTH")
  )
)

(define-enum SizeGroupMode
  (in-module "Gtk")
  (c-name "GtkSizeGroupMode")
  (gtype-id "GTK_TYPE_SIZE_GROUP_MODE")
  (values
    '("none" "GTK_SIZE_GROUP_NONE")
    '("horizontal" "GTK_SIZE_GROUP_HORIZONTAL")
    '("vertical" "GTK_SIZE_GROUP_VERTICAL")
    '("both" "GTK_SIZE_GROUP_BOTH")
  )
)

(define-enum SizeRequestMode
  (in-module "Gtk")
  (c-name "GtkSizeRequestMode")
  (gtype-id "GTK_TYPE_SIZE_REQUEST_MODE")
  (values
    '("height-for-width" "GTK_SIZE_REQUEST_HEIGHT_FOR_WIDTH")
    '("width-for-height" "GTK_SIZE_REQUEST_WIDTH_FOR_HEIGHT")
    '("constant-size" "GTK_SIZE_REQUEST_CONSTANT_SIZE")
  )
)

(define-enum ScrollablePolicy
  (in-module "Gtk")
  (c-name "GtkScrollablePolicy")
  (gtype-id "GTK_TYPE_SCROLLABLE_POLICY")
  (values
    '("minimum" "GTK_SCROLL_MINIMUM")
    '("natural" "GTK_SCROLL_NATURAL")
  )
)

(define-flags StateFlags
  (in-module "Gtk")
  (c-name "GtkStateFlags")
  (gtype-id "GTK_TYPE_STATE_FLAGS")
  (values
    '("normal" "GTK_STATE_FLAG_NORMAL")
    '("active" "GTK_STATE_FLAG_ACTIVE")
    '("prelight" "GTK_STATE_FLAG_PRELIGHT")
    '("selected" "GTK_STATE_FLAG_SELECTED")
    '("insensitive" "GTK_STATE_FLAG_INSENSITIVE")
    '("inconsistent" "GTK_STATE_FLAG_INCONSISTENT")
    '("focused" "GTK_STATE_FLAG_FOCUSED")
    '("backdrop" "GTK_STATE_FLAG_BACKDROP")
    '("dir-ltr" "GTK_STATE_FLAG_DIR_LTR")
    '("dir-rtl" "GTK_STATE_FLAG_DIR_RTL")
    '("link" "GTK_STATE_FLAG_LINK")
    '("visited" "GTK_STATE_FLAG_VISITED")
    '("checked" "GTK_STATE_FLAG_CHECKED")
    '("drop-active" "GTK_STATE_FLAG_DROP_ACTIVE")
    '("focus-visible" "GTK_STATE_FLAG_FOCUS_VISIBLE")
    '("focus-within" "GTK_STATE_FLAG_FOCUS_WITHIN")
  )
)

(define-enum BorderStyle
  (in-module "Gtk")
  (c-name "GtkBorderStyle")
  (gtype-id "GTK_TYPE_BORDER_STYLE")
  (values
    '("none" "GTK_BORDER_STYLE_NONE")
    '("hidden" "GTK_BORDER_STYLE_HIDDEN")
    '("solid" "GTK_BORDER_STYLE_SOLID")
    '("inset" "GTK_BORDER_STYLE_INSET")
    '("outset" "GTK_BORDER_STYLE_OUTSET")
    '("dotted" "GTK_BORDER_STYLE_DOTTED")
    '("dashed" "GTK_BORDER_STYLE_DASHED")
    '("double" "GTK_BORDER_STYLE_DOUBLE")
    '("groove" "GTK_BORDER_STYLE_GROOVE")
    '("ridge" "GTK_BORDER_STYLE_RIDGE")
  )
)

(define-enum LevelBarMode
  (in-module "Gtk")
  (c-name "GtkLevelBarMode")
  (gtype-id "GTK_TYPE_LEVEL_BAR_MODE")
  (values
    '("continuous" "GTK_LEVEL_BAR_MODE_CONTINUOUS")
    '("discrete" "GTK_LEVEL_BAR_MODE_DISCRETE")
  )
)

(define-enum InputPurpose
  (in-module "Gtk")
  (c-name "GtkInputPurpose")
  (gtype-id "GTK_TYPE_INPUT_PURPOSE")
  (values
    '("free-form" "GTK_INPUT_PURPOSE_FREE_FORM")
    '("alpha" "GTK_INPUT_PURPOSE_ALPHA")
    '("digits" "GTK_INPUT_PURPOSE_DIGITS")
    '("number" "GTK_INPUT_PURPOSE_NUMBER")
    '("phone" "GTK_INPUT_PURPOSE_PHONE")
    '("url" "GTK_INPUT_PURPOSE_URL")
    '("email" "GTK_INPUT_PURPOSE_EMAIL")
    '("name" "GTK_INPUT_PURPOSE_NAME")
    '("password" "GTK_INPUT_PURPOSE_PASSWORD")
    '("pin" "GTK_INPUT_PURPOSE_PIN")
    '("terminal" "GTK_INPUT_PURPOSE_TERMINAL")
  )
)

(define-flags InputHints
  (in-module "Gtk")
  (c-name "GtkInputHints")
  (gtype-id "GTK_TYPE_INPUT_HINTS")
  (values
    '("none" "GTK_INPUT_HINT_NONE")
    '("spellcheck" "GTK_INPUT_HINT_SPELLCHECK")
    '("no-spellcheck" "GTK_INPUT_HINT_NO_SPELLCHECK")
    '("word-completion" "GTK_INPUT_HINT_WORD_COMPLETION")
    '("lowercase" "GTK_INPUT_HINT_LOWERCASE")
    '("uppercase-chars" "GTK_INPUT_HINT_UPPERCASE_CHARS")
    '("uppercase-words" "GTK_INPUT_HINT_UPPERCASE_WORDS")
    '("uppercase-sentences" "GTK_INPUT_HINT_UPPERCASE_SENTENCES")
    '("inhibit-osk" "GTK_INPUT_HINT_INHIBIT_OSK")
    '("vertical-writing" "GTK_INPUT_HINT_VERTICAL_WRITING")
    '("emoji" "GTK_INPUT_HINT_EMOJI")
    '("no-emoji" "GTK_INPUT_HINT_NO_EMOJI")
    '("private" "GTK_INPUT_HINT_PRIVATE")
  )
)

(define-enum PropagationPhase
  (in-module "Gtk")
  (c-name "GtkPropagationPhase")
  (gtype-id "GTK_TYPE_PROPAGATION_PHASE")
  (values
    '("none" "GTK_PHASE_NONE")
    '("capture" "GTK_PHASE_CAPTURE")
    '("bubble" "GTK_PHASE_BUBBLE")
    '("target" "GTK_PHASE_TARGET")
  )
)

(define-enum PropagationLimit
  (in-module "Gtk")
  (c-name "GtkPropagationLimit")
  (gtype-id "GTK_TYPE_PROPAGATION_LIMIT")
  (values
    '("none" "GTK_LIMIT_NONE")
    '("same-native" "GTK_LIMIT_SAME_NATIVE")
  )
)

(define-enum EventSequenceState
  (in-module "Gtk")
  (c-name "GtkEventSequenceState")
  (gtype-id "GTK_TYPE_EVENT_SEQUENCE_STATE")
  (values
    '("none" "GTK_EVENT_SEQUENCE_NONE")
    '("claimed" "GTK_EVENT_SEQUENCE_CLAIMED")
    '("denied" "GTK_EVENT_SEQUENCE_DENIED")
  )
)

(define-enum PanDirection
  (in-module "Gtk")
  (c-name "GtkPanDirection")
  (gtype-id "GTK_TYPE_PAN_DIRECTION")
  (values
    '("left" "GTK_PAN_DIRECTION_LEFT")
    '("right" "GTK_PAN_DIRECTION_RIGHT")
    '("up" "GTK_PAN_DIRECTION_UP")
    '("down" "GTK_PAN_DIRECTION_DOWN")
  )
)

(define-enum ShortcutScope
  (in-module "Gtk")
  (c-name "GtkShortcutScope")
  (gtype-id "GTK_TYPE_SHORTCUT_SCOPE")
  (values
    '("local" "GTK_SHORTCUT_SCOPE_LOCAL")
    '("managed" "GTK_SHORTCUT_SCOPE_MANAGED")
    '("global" "GTK_SHORTCUT_SCOPE_GLOBAL")
  )
)

(define-flags PickFlags
  (in-module "Gtk")
  (c-name "GtkPickFlags")
  (gtype-id "GTK_TYPE_PICK_FLAGS")
  (values
    '("default" "GTK_PICK_DEFAULT")
    '("insensitive" "GTK_PICK_INSENSITIVE")
    '("non-targetable" "GTK_PICK_NON_TARGETABLE")
  )
)

(define-enum ConstraintRelation
  (in-module "Gtk")
  (c-name "GtkConstraintRelation")
  (gtype-id "GTK_TYPE_CONSTRAINT_RELATION")
  (values
    '("le" "GTK_CONSTRAINT_RELATION_LE")
    '("eq" "GTK_CONSTRAINT_RELATION_EQ")
    '("ge" "GTK_CONSTRAINT_RELATION_GE")
  )
)

(define-enum ConstraintStrength
  (in-module "Gtk")
  (c-name "GtkConstraintStrength")
  (gtype-id "GTK_TYPE_CONSTRAINT_STRENGTH")
  (values
    '("required" "GTK_CONSTRAINT_STRENGTH_REQUIRED")
    '("strong" "GTK_CONSTRAINT_STRENGTH_STRONG")
    '("medium" "GTK_CONSTRAINT_STRENGTH_MEDIUM")
    '("weak" "GTK_CONSTRAINT_STRENGTH_WEAK")
  )
)

(define-enum ConstraintAttribute
  (in-module "Gtk")
  (c-name "GtkConstraintAttribute")
  (gtype-id "GTK_TYPE_CONSTRAINT_ATTRIBUTE")
  (values
    '("none" "GTK_CONSTRAINT_ATTRIBUTE_NONE")
    '("left" "GTK_CONSTRAINT_ATTRIBUTE_LEFT")
    '("right" "GTK_CONSTRAINT_ATTRIBUTE_RIGHT")
    '("top" "GTK_CONSTRAINT_ATTRIBUTE_TOP")
    '("bottom" "GTK_CONSTRAINT_ATTRIBUTE_BOTTOM")
    '("start" "GTK_CONSTRAINT_ATTRIBUTE_START")
    '("end" "GTK_CONSTRAINT_ATTRIBUTE_END")
    '("width" "GTK_CONSTRAINT_ATTRIBUTE_WIDTH")
    '("height" "GTK_CONSTRAINT_ATTRIBUTE_HEIGHT")
    '("center-x" "GTK_CONSTRAINT_ATTRIBUTE_CENTER_X")
    '("center-y" "GTK_CONSTRAINT_ATTRIBUTE_CENTER_Y")
    '("baseline" "GTK_CONSTRAINT_ATTRIBUTE_BASELINE")
  )
)

(define-enum ConstraintVflParserError
  (in-module "Gtk")
  (c-name "GtkConstraintVflParserError")
  (gtype-id "GTK_TYPE_CONSTRAINT_VFL_PARSER_ERROR")
  (values
    '("symbol" "GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_SYMBOL")
    '("attribute" "GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_ATTRIBUTE")
    '("view" "GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_VIEW")
    '("metric" "GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_METRIC")
    '("priority" "GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_PRIORITY")
    '("relation" "GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_RELATION")
  )
)

(define-enum SystemSetting
  (in-module "Gtk")
  (c-name "GtkSystemSetting")
  (gtype-id "GTK_TYPE_SYSTEM_SETTING")
  (values
    '("dpi" "GTK_SYSTEM_SETTING_DPI")
    '("font-name" "GTK_SYSTEM_SETTING_FONT_NAME")
    '("font-config" "GTK_SYSTEM_SETTING_FONT_CONFIG")
    '("display" "GTK_SYSTEM_SETTING_DISPLAY")
    '("icon-theme" "GTK_SYSTEM_SETTING_ICON_THEME")
  )
)

(define-enum AccessibleRole
  (in-module "Gtk")
  (c-name "GtkAccessibleRole")
  (gtype-id "GTK_TYPE_ACCESSIBLE_ROLE")
  (values
    '("alert" "GTK_ACCESSIBLE_ROLE_ALERT")
    '("alert-dialog" "GTK_ACCESSIBLE_ROLE_ALERT_DIALOG")
    '("banner" "GTK_ACCESSIBLE_ROLE_BANNER")
    '("button" "GTK_ACCESSIBLE_ROLE_BUTTON")
    '("caption" "GTK_ACCESSIBLE_ROLE_CAPTION")
    '("cell" "GTK_ACCESSIBLE_ROLE_CELL")
    '("checkbox" "GTK_ACCESSIBLE_ROLE_CHECKBOX")
    '("column-header" "GTK_ACCESSIBLE_ROLE_COLUMN_HEADER")
    '("combo-box" "GTK_ACCESSIBLE_ROLE_COMBO_BOX")
    '("command" "GTK_ACCESSIBLE_ROLE_COMMAND")
    '("composite" "GTK_ACCESSIBLE_ROLE_COMPOSITE")
    '("dialog" "GTK_ACCESSIBLE_ROLE_DIALOG")
    '("document" "GTK_ACCESSIBLE_ROLE_DOCUMENT")
    '("feed" "GTK_ACCESSIBLE_ROLE_FEED")
    '("form" "GTK_ACCESSIBLE_ROLE_FORM")
    '("generic" "GTK_ACCESSIBLE_ROLE_GENERIC")
    '("grid" "GTK_ACCESSIBLE_ROLE_GRID")
    '("grid-cell" "GTK_ACCESSIBLE_ROLE_GRID_CELL")
    '("group" "GTK_ACCESSIBLE_ROLE_GROUP")
    '("heading" "GTK_ACCESSIBLE_ROLE_HEADING")
    '("img" "GTK_ACCESSIBLE_ROLE_IMG")
    '("input" "GTK_ACCESSIBLE_ROLE_INPUT")
    '("label" "GTK_ACCESSIBLE_ROLE_LABEL")
    '("landmark" "GTK_ACCESSIBLE_ROLE_LANDMARK")
    '("legend" "GTK_ACCESSIBLE_ROLE_LEGEND")
    '("link" "GTK_ACCESSIBLE_ROLE_LINK")
    '("list" "GTK_ACCESSIBLE_ROLE_LIST")
    '("list-box" "GTK_ACCESSIBLE_ROLE_LIST_BOX")
    '("list-item" "GTK_ACCESSIBLE_ROLE_LIST_ITEM")
    '("log" "GTK_ACCESSIBLE_ROLE_LOG")
    '("main" "GTK_ACCESSIBLE_ROLE_MAIN")
    '("marquee" "GTK_ACCESSIBLE_ROLE_MARQUEE")
    '("math" "GTK_ACCESSIBLE_ROLE_MATH")
    '("meter" "GTK_ACCESSIBLE_ROLE_METER")
    '("menu" "GTK_ACCESSIBLE_ROLE_MENU")
    '("menu-bar" "GTK_ACCESSIBLE_ROLE_MENU_BAR")
    '("menu-item" "GTK_ACCESSIBLE_ROLE_MENU_ITEM")
    '("menu-item-checkbox" "GTK_ACCESSIBLE_ROLE_MENU_ITEM_CHECKBOX")
    '("menu-item-radio" "GTK_ACCESSIBLE_ROLE_MENU_ITEM_RADIO")
    '("navigation" "GTK_ACCESSIBLE_ROLE_NAVIGATION")
    '("none" "GTK_ACCESSIBLE_ROLE_NONE")
    '("note" "GTK_ACCESSIBLE_ROLE_NOTE")
    '("option" "GTK_ACCESSIBLE_ROLE_OPTION")
    '("presentation" "GTK_ACCESSIBLE_ROLE_PRESENTATION")
    '("progress-bar" "GTK_ACCESSIBLE_ROLE_PROGRESS_BAR")
    '("radio" "GTK_ACCESSIBLE_ROLE_RADIO")
    '("radio-group" "GTK_ACCESSIBLE_ROLE_RADIO_GROUP")
    '("range" "GTK_ACCESSIBLE_ROLE_RANGE")
    '("region" "GTK_ACCESSIBLE_ROLE_REGION")
    '("row" "GTK_ACCESSIBLE_ROLE_ROW")
    '("row-group" "GTK_ACCESSIBLE_ROLE_ROW_GROUP")
    '("row-header" "GTK_ACCESSIBLE_ROLE_ROW_HEADER")
    '("scrollbar" "GTK_ACCESSIBLE_ROLE_SCROLLBAR")
    '("search" "GTK_ACCESSIBLE_ROLE_SEARCH")
    '("search-box" "GTK_ACCESSIBLE_ROLE_SEARCH_BOX")
    '("section" "GTK_ACCESSIBLE_ROLE_SECTION")
    '("section-head" "GTK_ACCESSIBLE_ROLE_SECTION_HEAD")
    '("select" "GTK_ACCESSIBLE_ROLE_SELECT")
    '("separator" "GTK_ACCESSIBLE_ROLE_SEPARATOR")
    '("slider" "GTK_ACCESSIBLE_ROLE_SLIDER")
    '("spin-button" "GTK_ACCESSIBLE_ROLE_SPIN_BUTTON")
    '("status" "GTK_ACCESSIBLE_ROLE_STATUS")
    '("structure" "GTK_ACCESSIBLE_ROLE_STRUCTURE")
    '("switch" "GTK_ACCESSIBLE_ROLE_SWITCH")
    '("tab" "GTK_ACCESSIBLE_ROLE_TAB")
    '("table" "GTK_ACCESSIBLE_ROLE_TABLE")
    '("tab-list" "GTK_ACCESSIBLE_ROLE_TAB_LIST")
    '("tab-panel" "GTK_ACCESSIBLE_ROLE_TAB_PANEL")
    '("text-box" "GTK_ACCESSIBLE_ROLE_TEXT_BOX")
    '("time" "GTK_ACCESSIBLE_ROLE_TIME")
    '("timer" "GTK_ACCESSIBLE_ROLE_TIMER")
    '("toolbar" "GTK_ACCESSIBLE_ROLE_TOOLBAR")
    '("tooltip" "GTK_ACCESSIBLE_ROLE_TOOLTIP")
    '("tree" "GTK_ACCESSIBLE_ROLE_TREE")
    '("tree-grid" "GTK_ACCESSIBLE_ROLE_TREE_GRID")
    '("tree-item" "GTK_ACCESSIBLE_ROLE_TREE_ITEM")
    '("widget" "GTK_ACCESSIBLE_ROLE_WIDGET")
    '("window" "GTK_ACCESSIBLE_ROLE_WINDOW")
  )
)

(define-enum AccessibleState
  (in-module "Gtk")
  (c-name "GtkAccessibleState")
  (gtype-id "GTK_TYPE_ACCESSIBLE_STATE")
  (values
    '("busy" "GTK_ACCESSIBLE_STATE_BUSY")
    '("checked" "GTK_ACCESSIBLE_STATE_CHECKED")
    '("disabled" "GTK_ACCESSIBLE_STATE_DISABLED")
    '("expanded" "GTK_ACCESSIBLE_STATE_EXPANDED")
    '("hidden" "GTK_ACCESSIBLE_STATE_HIDDEN")
    '("invalid" "GTK_ACCESSIBLE_STATE_INVALID")
    '("pressed" "GTK_ACCESSIBLE_STATE_PRESSED")
    '("selected" "GTK_ACCESSIBLE_STATE_SELECTED")
  )
)

(define-enum AccessibleProperty
  (in-module "Gtk")
  (c-name "GtkAccessibleProperty")
  (gtype-id "GTK_TYPE_ACCESSIBLE_PROPERTY")
  (values
    '("autocomplete" "GTK_ACCESSIBLE_PROPERTY_AUTOCOMPLETE")
    '("description" "GTK_ACCESSIBLE_PROPERTY_DESCRIPTION")
    '("has-popup" "GTK_ACCESSIBLE_PROPERTY_HAS_POPUP")
    '("key-shortcuts" "GTK_ACCESSIBLE_PROPERTY_KEY_SHORTCUTS")
    '("label" "GTK_ACCESSIBLE_PROPERTY_LABEL")
    '("level" "GTK_ACCESSIBLE_PROPERTY_LEVEL")
    '("modal" "GTK_ACCESSIBLE_PROPERTY_MODAL")
    '("multi-line" "GTK_ACCESSIBLE_PROPERTY_MULTI_LINE")
    '("multi-selectable" "GTK_ACCESSIBLE_PROPERTY_MULTI_SELECTABLE")
    '("orientation" "GTK_ACCESSIBLE_PROPERTY_ORIENTATION")
    '("placeholder" "GTK_ACCESSIBLE_PROPERTY_PLACEHOLDER")
    '("read-only" "GTK_ACCESSIBLE_PROPERTY_READ_ONLY")
    '("required" "GTK_ACCESSIBLE_PROPERTY_REQUIRED")
    '("role-description" "GTK_ACCESSIBLE_PROPERTY_ROLE_DESCRIPTION")
    '("sort" "GTK_ACCESSIBLE_PROPERTY_SORT")
    '("value-max" "GTK_ACCESSIBLE_PROPERTY_VALUE_MAX")
    '("value-min" "GTK_ACCESSIBLE_PROPERTY_VALUE_MIN")
    '("value-now" "GTK_ACCESSIBLE_PROPERTY_VALUE_NOW")
    '("value-text" "GTK_ACCESSIBLE_PROPERTY_VALUE_TEXT")
  )
)

(define-enum AccessibleRelation
  (in-module "Gtk")
  (c-name "GtkAccessibleRelation")
  (gtype-id "GTK_TYPE_ACCESSIBLE_RELATION")
  (values
    '("active-descendant" "GTK_ACCESSIBLE_RELATION_ACTIVE_DESCENDANT")
    '("col-count" "GTK_ACCESSIBLE_RELATION_COL_COUNT")
    '("col-index" "GTK_ACCESSIBLE_RELATION_COL_INDEX")
    '("col-index-text" "GTK_ACCESSIBLE_RELATION_COL_INDEX_TEXT")
    '("col-span" "GTK_ACCESSIBLE_RELATION_COL_SPAN")
    '("controls" "GTK_ACCESSIBLE_RELATION_CONTROLS")
    '("described-by" "GTK_ACCESSIBLE_RELATION_DESCRIBED_BY")
    '("details" "GTK_ACCESSIBLE_RELATION_DETAILS")
    '("error-message" "GTK_ACCESSIBLE_RELATION_ERROR_MESSAGE")
    '("flow-to" "GTK_ACCESSIBLE_RELATION_FLOW_TO")
    '("labelled-by" "GTK_ACCESSIBLE_RELATION_LABELLED_BY")
    '("owns" "GTK_ACCESSIBLE_RELATION_OWNS")
    '("pos-in-set" "GTK_ACCESSIBLE_RELATION_POS_IN_SET")
    '("row-count" "GTK_ACCESSIBLE_RELATION_ROW_COUNT")
    '("row-index" "GTK_ACCESSIBLE_RELATION_ROW_INDEX")
    '("row-index-text" "GTK_ACCESSIBLE_RELATION_ROW_INDEX_TEXT")
    '("row-span" "GTK_ACCESSIBLE_RELATION_ROW_SPAN")
    '("set-size" "GTK_ACCESSIBLE_RELATION_SET_SIZE")
  )
)

(define-enum AccessibleTristate
  (in-module "Gtk")
  (c-name "GtkAccessibleTristate")
  (gtype-id "GTK_TYPE_ACCESSIBLE_TRISTATE")
  (values
    '("false" "GTK_ACCESSIBLE_TRISTATE_FALSE")
    '("true" "GTK_ACCESSIBLE_TRISTATE_TRUE")
    '("mixed" "GTK_ACCESSIBLE_TRISTATE_MIXED")
  )
)

(define-enum AccessibleInvalidState
  (in-module "Gtk")
  (c-name "GtkAccessibleInvalidState")
  (gtype-id "GTK_TYPE_ACCESSIBLE_INVALID_STATE")
  (values
    '("false" "GTK_ACCESSIBLE_INVALID_FALSE")
    '("true" "GTK_ACCESSIBLE_INVALID_TRUE")
    '("grammar" "GTK_ACCESSIBLE_INVALID_GRAMMAR")
    '("spelling" "GTK_ACCESSIBLE_INVALID_SPELLING")
  )
)

(define-enum AccessibleAutocomplete
  (in-module "Gtk")
  (c-name "GtkAccessibleAutocomplete")
  (gtype-id "GTK_TYPE_ACCESSIBLE_AUTOCOMPLETE")
  (values
    '("none" "GTK_ACCESSIBLE_AUTOCOMPLETE_NONE")
    '("inline" "GTK_ACCESSIBLE_AUTOCOMPLETE_INLINE")
    '("list" "GTK_ACCESSIBLE_AUTOCOMPLETE_LIST")
    '("both" "GTK_ACCESSIBLE_AUTOCOMPLETE_BOTH")
  )
)

(define-enum AccessibleSort
  (in-module "Gtk")
  (c-name "GtkAccessibleSort")
  (gtype-id "GTK_TYPE_ACCESSIBLE_SORT")
  (values
    '("none" "GTK_ACCESSIBLE_SORT_NONE")
    '("ascending" "GTK_ACCESSIBLE_SORT_ASCENDING")
    '("descending" "GTK_ACCESSIBLE_SORT_DESCENDING")
    '("other" "GTK_ACCESSIBLE_SORT_OTHER")
  )
)

(define-flags EventControllerScrollFlags
  (in-module "Gtk")
  (c-name "GtkEventControllerScrollFlags")
  (gtype-id "GTK_TYPE_EVENT_CONTROLLER_SCROLL_FLAGS")
  (values
    '("none" "GTK_EVENT_CONTROLLER_SCROLL_NONE")
    '("vertical" "GTK_EVENT_CONTROLLER_SCROLL_VERTICAL")
    '("horizontal" "GTK_EVENT_CONTROLLER_SCROLL_HORIZONTAL")
    '("discrete" "GTK_EVENT_CONTROLLER_SCROLL_DISCRETE")
    '("kinetic" "GTK_EVENT_CONTROLLER_SCROLL_KINETIC")
    '("both-axes" "GTK_EVENT_CONTROLLER_SCROLL_BOTH_AXES")
  )
)

(define-enum FileChooserAction
  (in-module "Gtk")
  (c-name "GtkFileChooserAction")
  (gtype-id "GTK_TYPE_FILE_CHOOSER_ACTION")
  (values
    '("open" "GTK_FILE_CHOOSER_ACTION_OPEN")
    '("save" "GTK_FILE_CHOOSER_ACTION_SAVE")
    '("select-folder" "GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER")
  )
)

(define-enum FileChooserError
  (in-module "Gtk")
  (c-name "GtkFileChooserError")
  (gtype-id "GTK_TYPE_FILE_CHOOSER_ERROR")
  (values
    '("nonexistent" "GTK_FILE_CHOOSER_ERROR_NONEXISTENT")
    '("bad-filename" "GTK_FILE_CHOOSER_ERROR_BAD_FILENAME")
    '("already-exists" "GTK_FILE_CHOOSER_ERROR_ALREADY_EXISTS")
    '("incomplete-hostname" "GTK_FILE_CHOOSER_ERROR_INCOMPLETE_HOSTNAME")
  )
)

(define-enum FileChooserProp
  (in-module "Gtk")
  (c-name "GtkFileChooserProp")
  (gtype-id "GTK_TYPE_FILE_CHOOSER_PROP")
  (values
    '("first" "GTK_FILE_CHOOSER_PROP_FIRST")
    '("action" "GTK_FILE_CHOOSER_PROP_ACTION")
    '("filter" "GTK_FILE_CHOOSER_PROP_FILTER")
    '("select-multiple" "GTK_FILE_CHOOSER_PROP_SELECT_MULTIPLE")
    '("create-folders" "GTK_FILE_CHOOSER_PROP_CREATE_FOLDERS")
    '("filters" "GTK_FILE_CHOOSER_PROP_FILTERS")
    '("shortcut-folders" "GTK_FILE_CHOOSER_PROP_SHORTCUT_FOLDERS")
    '("last" "GTK_FILE_CHOOSER_PROP_LAST")
  )
)

(define-enum FilterMatch
  (in-module "Gtk")
  (c-name "GtkFilterMatch")
  (gtype-id "GTK_TYPE_FILTER_MATCH")
  (values
    '("some" "GTK_FILTER_MATCH_SOME")
    '("none" "GTK_FILTER_MATCH_NONE")
    '("all" "GTK_FILTER_MATCH_ALL")
  )
)

(define-enum FilterChange
  (in-module "Gtk")
  (c-name "GtkFilterChange")
  (gtype-id "GTK_TYPE_FILTER_CHANGE")
  (values
    '("different" "GTK_FILTER_CHANGE_DIFFERENT")
    '("less-strict" "GTK_FILTER_CHANGE_LESS_STRICT")
    '("more-strict" "GTK_FILTER_CHANGE_MORE_STRICT")
  )
)

(define-flags FontChooserLevel
  (in-module "Gtk")
  (c-name "GtkFontChooserLevel")
  (gtype-id "GTK_TYPE_FONT_CHOOSER_LEVEL")
  (values
    '("family" "GTK_FONT_CHOOSER_LEVEL_FAMILY")
    '("style" "GTK_FONT_CHOOSER_LEVEL_STYLE")
    '("size" "GTK_FONT_CHOOSER_LEVEL_SIZE")
    '("variations" "GTK_FONT_CHOOSER_LEVEL_VARIATIONS")
    '("features" "GTK_FONT_CHOOSER_LEVEL_FEATURES")
  )
)

(define-enum FontChooserProp
  (in-module "Gtk")
  (c-name "GtkFontChooserProp")
  (gtype-id "GTK_TYPE_FONT_CHOOSER_PROP")
  (values
    '("first" "GTK_FONT_CHOOSER_PROP_FIRST")
    '("font" "GTK_FONT_CHOOSER_PROP_FONT")
    '("font-desc" "GTK_FONT_CHOOSER_PROP_FONT_DESC")
    '("preview-text" "GTK_FONT_CHOOSER_PROP_PREVIEW_TEXT")
    '("show-preview-entry" "GTK_FONT_CHOOSER_PROP_SHOW_PREVIEW_ENTRY")
    '("level" "GTK_FONT_CHOOSER_PROP_LEVEL")
    '("font-features" "GTK_FONT_CHOOSER_PROP_FONT_FEATURES")
    '("language" "GTK_FONT_CHOOSER_PROP_LANGUAGE")
    '("last" "GTK_FONT_CHOOSER_PROP_LAST")
  )
)

(define-flags IconLookupFlags
  (in-module "Gtk")
  (c-name "GtkIconLookupFlags")
  (gtype-id "GTK_TYPE_ICON_LOOKUP_FLAGS")
  (values
    '("force-regular" "GTK_ICON_LOOKUP_FORCE_REGULAR")
    '("force-symbolic" "GTK_ICON_LOOKUP_FORCE_SYMBOLIC")
    '("preload" "GTK_ICON_LOOKUP_PRELOAD")
  )
)

(define-enum IconThemeError
  (in-module "Gtk")
  (c-name "GtkIconThemeError")
  (gtype-id "GTK_TYPE_ICON_THEME_ERROR")
  (values
    '("not-found" "GTK_ICON_THEME_NOT_FOUND")
    '("failed" "GTK_ICON_THEME_FAILED")
  )
)

(define-enum IconViewDropPosition
  (in-module "Gtk")
  (c-name "GtkIconViewDropPosition")
  (gtype-id "GTK_TYPE_ICON_VIEW_DROP_POSITION")
  (values
    '("no-drop" "GTK_ICON_VIEW_NO_DROP")
    '("drop-into" "GTK_ICON_VIEW_DROP_INTO")
    '("drop-left" "GTK_ICON_VIEW_DROP_LEFT")
    '("drop-right" "GTK_ICON_VIEW_DROP_RIGHT")
    '("drop-above" "GTK_ICON_VIEW_DROP_ABOVE")
    '("drop-below" "GTK_ICON_VIEW_DROP_BELOW")
  )
)

(define-enum ImageType
  (in-module "Gtk")
  (c-name "GtkImageType")
  (gtype-id "GTK_TYPE_IMAGE_TYPE")
  (values
    '("empty" "GTK_IMAGE_EMPTY")
    '("icon-name" "GTK_IMAGE_ICON_NAME")
    '("gicon" "GTK_IMAGE_GICON")
    '("paintable" "GTK_IMAGE_PAINTABLE")
  )
)

(define-enum ButtonsType
  (in-module "Gtk")
  (c-name "GtkButtonsType")
  (gtype-id "GTK_TYPE_BUTTONS_TYPE")
  (values
    '("none" "GTK_BUTTONS_NONE")
    '("ok" "GTK_BUTTONS_OK")
    '("close" "GTK_BUTTONS_CLOSE")
    '("cancel" "GTK_BUTTONS_CANCEL")
    '("yes-no" "GTK_BUTTONS_YES_NO")
    '("ok-cancel" "GTK_BUTTONS_OK_CANCEL")
  )
)

(define-enum NotebookTab
  (in-module "Gtk")
  (c-name "GtkNotebookTab")
  (gtype-id "GTK_TYPE_NOTEBOOK_TAB")
  (values
    '("first" "GTK_NOTEBOOK_TAB_FIRST")
    '("last" "GTK_NOTEBOOK_TAB_LAST")
  )
)

(define-enum PadActionType
  (in-module "Gtk")
  (c-name "GtkPadActionType")
  (gtype-id "GTK_TYPE_PAD_ACTION_TYPE")
  (values
    '("button" "GTK_PAD_ACTION_BUTTON")
    '("ring" "GTK_PAD_ACTION_RING")
    '("strip" "GTK_PAD_ACTION_STRIP")
  )
)

(define-flags PopoverMenuFlags
  (in-module "Gtk")
  (c-name "GtkPopoverMenuFlags")
  (gtype-id "GTK_TYPE_POPOVER_MENU_FLAGS")
  (values
    '("nested" "GTK_POPOVER_MENU_NESTED")
  )
)

(define-flags PrintCapabilities
  (in-module "Gtk")
  (c-name "GtkPrintCapabilities")
  (gtype-id "GTK_TYPE_PRINT_CAPABILITIES")
  (values
    '("page-set" "GTK_PRINT_CAPABILITY_PAGE_SET")
    '("copies" "GTK_PRINT_CAPABILITY_COPIES")
    '("collate" "GTK_PRINT_CAPABILITY_COLLATE")
    '("reverse" "GTK_PRINT_CAPABILITY_REVERSE")
    '("scale" "GTK_PRINT_CAPABILITY_SCALE")
    '("generate-pdf" "GTK_PRINT_CAPABILITY_GENERATE_PDF")
    '("generate-ps" "GTK_PRINT_CAPABILITY_GENERATE_PS")
    '("preview" "GTK_PRINT_CAPABILITY_PREVIEW")
    '("number-up" "GTK_PRINT_CAPABILITY_NUMBER_UP")
    '("number-up-layout" "GTK_PRINT_CAPABILITY_NUMBER_UP_LAYOUT")
  )
)

(define-enum PrinterOptionType
  (in-module "Gtk")
  (c-name "GtkPrinterOptionType")
  (gtype-id "GTK_TYPE_PRINTER_OPTION_TYPE")
  (values
    '("boolean" "GTK_PRINTER_OPTION_TYPE_BOOLEAN")
    '("pickone" "GTK_PRINTER_OPTION_TYPE_PICKONE")
    '("pickone-password" "GTK_PRINTER_OPTION_TYPE_PICKONE_PASSWORD")
    '("pickone-passcode" "GTK_PRINTER_OPTION_TYPE_PICKONE_PASSCODE")
    '("pickone-real" "GTK_PRINTER_OPTION_TYPE_PICKONE_REAL")
    '("pickone-int" "GTK_PRINTER_OPTION_TYPE_PICKONE_INT")
    '("pickone-string" "GTK_PRINTER_OPTION_TYPE_PICKONE_STRING")
    '("alternative" "GTK_PRINTER_OPTION_TYPE_ALTERNATIVE")
    '("string" "GTK_PRINTER_OPTION_TYPE_STRING")
    '("filesave" "GTK_PRINTER_OPTION_TYPE_FILESAVE")
    '("info" "GTK_PRINTER_OPTION_TYPE_INFO")
  )
)

(define-enum PrintStatus
  (in-module "Gtk")
  (c-name "GtkPrintStatus")
  (gtype-id "GTK_TYPE_PRINT_STATUS")
  (values
    '("initial" "GTK_PRINT_STATUS_INITIAL")
    '("preparing" "GTK_PRINT_STATUS_PREPARING")
    '("generating-data" "GTK_PRINT_STATUS_GENERATING_DATA")
    '("sending-data" "GTK_PRINT_STATUS_SENDING_DATA")
    '("pending" "GTK_PRINT_STATUS_PENDING")
    '("pending-issue" "GTK_PRINT_STATUS_PENDING_ISSUE")
    '("printing" "GTK_PRINT_STATUS_PRINTING")
    '("finished" "GTK_PRINT_STATUS_FINISHED")
    '("finished-aborted" "GTK_PRINT_STATUS_FINISHED_ABORTED")
  )
)

(define-enum PrintOperationResult
  (in-module "Gtk")
  (c-name "GtkPrintOperationResult")
  (gtype-id "GTK_TYPE_PRINT_OPERATION_RESULT")
  (values
    '("error" "GTK_PRINT_OPERATION_RESULT_ERROR")
    '("apply" "GTK_PRINT_OPERATION_RESULT_APPLY")
    '("cancel" "GTK_PRINT_OPERATION_RESULT_CANCEL")
    '("in-progress" "GTK_PRINT_OPERATION_RESULT_IN_PROGRESS")
  )
)

(define-enum PrintOperationAction
  (in-module "Gtk")
  (c-name "GtkPrintOperationAction")
  (gtype-id "GTK_TYPE_PRINT_OPERATION_ACTION")
  (values
    '("print-dialog" "GTK_PRINT_OPERATION_ACTION_PRINT_DIALOG")
    '("print" "GTK_PRINT_OPERATION_ACTION_PRINT")
    '("preview" "GTK_PRINT_OPERATION_ACTION_PREVIEW")
    '("export" "GTK_PRINT_OPERATION_ACTION_EXPORT")
  )
)

(define-enum PrintError
  (in-module "Gtk")
  (c-name "GtkPrintError")
  (gtype-id "GTK_TYPE_PRINT_ERROR")
  (values
    '("general" "GTK_PRINT_ERROR_GENERAL")
    '("internal-error" "GTK_PRINT_ERROR_INTERNAL_ERROR")
    '("nomem" "GTK_PRINT_ERROR_NOMEM")
    '("invalid-file" "GTK_PRINT_ERROR_INVALID_FILE")
  )
)

(define-enum RecentManagerError
  (in-module "Gtk")
  (c-name "GtkRecentManagerError")
  (gtype-id "GTK_TYPE_RECENT_MANAGER_ERROR")
  (values
    '("not-found" "GTK_RECENT_MANAGER_ERROR_NOT_FOUND")
    '("invalid-uri" "GTK_RECENT_MANAGER_ERROR_INVALID_URI")
    '("invalid-encoding" "GTK_RECENT_MANAGER_ERROR_INVALID_ENCODING")
    '("not-registered" "GTK_RECENT_MANAGER_ERROR_NOT_REGISTERED")
    '("read" "GTK_RECENT_MANAGER_ERROR_READ")
    '("write" "GTK_RECENT_MANAGER_ERROR_WRITE")
    '("unknown" "GTK_RECENT_MANAGER_ERROR_UNKNOWN")
  )
)

(define-enum RevealerTransitionType
  (in-module "Gtk")
  (c-name "GtkRevealerTransitionType")
  (gtype-id "GTK_TYPE_REVEALER_TRANSITION_TYPE")
  (values
    '("none" "GTK_REVEALER_TRANSITION_TYPE_NONE")
    '("crossfade" "GTK_REVEALER_TRANSITION_TYPE_CROSSFADE")
    '("slide-right" "GTK_REVEALER_TRANSITION_TYPE_SLIDE_RIGHT")
    '("slide-left" "GTK_REVEALER_TRANSITION_TYPE_SLIDE_LEFT")
    '("slide-up" "GTK_REVEALER_TRANSITION_TYPE_SLIDE_UP")
    '("slide-down" "GTK_REVEALER_TRANSITION_TYPE_SLIDE_DOWN")
    '("swing-right" "GTK_REVEALER_TRANSITION_TYPE_SWING_RIGHT")
    '("swing-left" "GTK_REVEALER_TRANSITION_TYPE_SWING_LEFT")
    '("swing-up" "GTK_REVEALER_TRANSITION_TYPE_SWING_UP")
    '("swing-down" "GTK_REVEALER_TRANSITION_TYPE_SWING_DOWN")
  )
)

(define-enum CornerType
  (in-module "Gtk")
  (c-name "GtkCornerType")
  (gtype-id "GTK_TYPE_CORNER_TYPE")
  (values
    '("top-left" "GTK_CORNER_TOP_LEFT")
    '("bottom-left" "GTK_CORNER_BOTTOM_LEFT")
    '("top-right" "GTK_CORNER_TOP_RIGHT")
    '("bottom-right" "GTK_CORNER_BOTTOM_RIGHT")
  )
)

(define-enum PolicyType
  (in-module "Gtk")
  (c-name "GtkPolicyType")
  (gtype-id "GTK_TYPE_POLICY_TYPE")
  (values
    '("always" "GTK_POLICY_ALWAYS")
    '("automatic" "GTK_POLICY_AUTOMATIC")
    '("never" "GTK_POLICY_NEVER")
    '("external" "GTK_POLICY_EXTERNAL")
  )
)

(define-flags ShortcutActionFlags
  (in-module "Gtk")
  (c-name "GtkShortcutActionFlags")
  (gtype-id "GTK_TYPE_SHORTCUT_ACTION_FLAGS")
  (values
    '("exclusive" "GTK_SHORTCUT_ACTION_EXCLUSIVE")
  )
)

(define-enum ShortcutType
  (in-module "Gtk")
  (c-name "GtkShortcutType")
  (gtype-id "GTK_TYPE_SHORTCUT_TYPE")
  (values
    '("accelerator" "GTK_SHORTCUT_ACCELERATOR")
    '("gesture-pinch" "GTK_SHORTCUT_GESTURE_PINCH")
    '("gesture-stretch" "GTK_SHORTCUT_GESTURE_STRETCH")
    '("gesture-rotate-clockwise" "GTK_SHORTCUT_GESTURE_ROTATE_CLOCKWISE")
    '("gesture-rotate-counterclockwise" "GTK_SHORTCUT_GESTURE_ROTATE_COUNTERCLOCKWISE")
    '("gesture-two-finger-swipe-left" "GTK_SHORTCUT_GESTURE_TWO_FINGER_SWIPE_LEFT")
    '("gesture-two-finger-swipe-right" "GTK_SHORTCUT_GESTURE_TWO_FINGER_SWIPE_RIGHT")
    '("gesture" "GTK_SHORTCUT_GESTURE")
    '("gesture-swipe-left" "GTK_SHORTCUT_GESTURE_SWIPE_LEFT")
    '("gesture-swipe-right" "GTK_SHORTCUT_GESTURE_SWIPE_RIGHT")
  )
)

(define-enum SorterOrder
  (in-module "Gtk")
  (c-name "GtkSorterOrder")
  (gtype-id "GTK_TYPE_SORTER_ORDER")
  (values
    '("partial" "GTK_SORTER_ORDER_PARTIAL")
    '("none" "GTK_SORTER_ORDER_NONE")
    '("total" "GTK_SORTER_ORDER_TOTAL")
  )
)

(define-enum SorterChange
  (in-module "Gtk")
  (c-name "GtkSorterChange")
  (gtype-id "GTK_TYPE_SORTER_CHANGE")
  (values
    '("different" "GTK_SORTER_CHANGE_DIFFERENT")
    '("inverted" "GTK_SORTER_CHANGE_INVERTED")
    '("less-strict" "GTK_SORTER_CHANGE_LESS_STRICT")
    '("more-strict" "GTK_SORTER_CHANGE_MORE_STRICT")
  )
)

(define-enum SpinButtonUpdatePolicy
  (in-module "Gtk")
  (c-name "GtkSpinButtonUpdatePolicy")
  (gtype-id "GTK_TYPE_SPIN_BUTTON_UPDATE_POLICY")
  (values
    '("always" "GTK_UPDATE_ALWAYS")
    '("if-valid" "GTK_UPDATE_IF_VALID")
  )
)

(define-enum SpinType
  (in-module "Gtk")
  (c-name "GtkSpinType")
  (gtype-id "GTK_TYPE_SPIN_TYPE")
  (values
    '("step-forward" "GTK_SPIN_STEP_FORWARD")
    '("step-backward" "GTK_SPIN_STEP_BACKWARD")
    '("page-forward" "GTK_SPIN_PAGE_FORWARD")
    '("page-backward" "GTK_SPIN_PAGE_BACKWARD")
    '("home" "GTK_SPIN_HOME")
    '("end" "GTK_SPIN_END")
    '("user-defined" "GTK_SPIN_USER_DEFINED")
  )
)

(define-enum StackTransitionType
  (in-module "Gtk")
  (c-name "GtkStackTransitionType")
  (gtype-id "GTK_TYPE_STACK_TRANSITION_TYPE")
  (values
    '("none" "GTK_STACK_TRANSITION_TYPE_NONE")
    '("crossfade" "GTK_STACK_TRANSITION_TYPE_CROSSFADE")
    '("slide-right" "GTK_STACK_TRANSITION_TYPE_SLIDE_RIGHT")
    '("slide-left" "GTK_STACK_TRANSITION_TYPE_SLIDE_LEFT")
    '("slide-up" "GTK_STACK_TRANSITION_TYPE_SLIDE_UP")
    '("slide-down" "GTK_STACK_TRANSITION_TYPE_SLIDE_DOWN")
    '("slide-left-right" "GTK_STACK_TRANSITION_TYPE_SLIDE_LEFT_RIGHT")
    '("slide-up-down" "GTK_STACK_TRANSITION_TYPE_SLIDE_UP_DOWN")
    '("over-up" "GTK_STACK_TRANSITION_TYPE_OVER_UP")
    '("over-down" "GTK_STACK_TRANSITION_TYPE_OVER_DOWN")
    '("over-left" "GTK_STACK_TRANSITION_TYPE_OVER_LEFT")
    '("over-right" "GTK_STACK_TRANSITION_TYPE_OVER_RIGHT")
    '("under-up" "GTK_STACK_TRANSITION_TYPE_UNDER_UP")
    '("under-down" "GTK_STACK_TRANSITION_TYPE_UNDER_DOWN")
    '("under-left" "GTK_STACK_TRANSITION_TYPE_UNDER_LEFT")
    '("under-right" "GTK_STACK_TRANSITION_TYPE_UNDER_RIGHT")
    '("over-up-down" "GTK_STACK_TRANSITION_TYPE_OVER_UP_DOWN")
    '("over-down-up" "GTK_STACK_TRANSITION_TYPE_OVER_DOWN_UP")
    '("over-left-right" "GTK_STACK_TRANSITION_TYPE_OVER_LEFT_RIGHT")
    '("over-right-left" "GTK_STACK_TRANSITION_TYPE_OVER_RIGHT_LEFT")
    '("rotate-left" "GTK_STACK_TRANSITION_TYPE_ROTATE_LEFT")
    '("rotate-right" "GTK_STACK_TRANSITION_TYPE_ROTATE_RIGHT")
    '("rotate-left-right" "GTK_STACK_TRANSITION_TYPE_ROTATE_LEFT_RIGHT")
  )
)

(define-enum StringFilterMatchMode
  (in-module "Gtk")
  (c-name "GtkStringFilterMatchMode")
  (gtype-id "GTK_TYPE_STRING_FILTER_MATCH_MODE")
  (values
    '("exact" "GTK_STRING_FILTER_MATCH_MODE_EXACT")
    '("substring" "GTK_STRING_FILTER_MATCH_MODE_SUBSTRING")
    '("prefix" "GTK_STRING_FILTER_MATCH_MODE_PREFIX")
  )
)

(define-flags StyleContextPrintFlags
  (in-module "Gtk")
  (c-name "GtkStyleContextPrintFlags")
  (gtype-id "GTK_TYPE_STYLE_CONTEXT_PRINT_FLAGS")
  (values
    '("none" "GTK_STYLE_CONTEXT_PRINT_NONE")
    '("recurse" "GTK_STYLE_CONTEXT_PRINT_RECURSE")
    '("show-style" "GTK_STYLE_CONTEXT_PRINT_SHOW_STYLE")
    '("show-change" "GTK_STYLE_CONTEXT_PRINT_SHOW_CHANGE")
  )
)

(define-flags TextSearchFlags
  (in-module "Gtk")
  (c-name "GtkTextSearchFlags")
  (gtype-id "GTK_TYPE_TEXT_SEARCH_FLAGS")
  (values
    '("visible-only" "GTK_TEXT_SEARCH_VISIBLE_ONLY")
    '("text-only" "GTK_TEXT_SEARCH_TEXT_ONLY")
    '("case-insensitive" "GTK_TEXT_SEARCH_CASE_INSENSITIVE")
  )
)

(define-enum TextWindowType
  (in-module "Gtk")
  (c-name "GtkTextWindowType")
  (gtype-id "GTK_TYPE_TEXT_WINDOW_TYPE")
  (values
    '("widget" "GTK_TEXT_WINDOW_WIDGET")
    '("text" "GTK_TEXT_WINDOW_TEXT")
    '("left" "GTK_TEXT_WINDOW_LEFT")
    '("right" "GTK_TEXT_WINDOW_RIGHT")
    '("top" "GTK_TEXT_WINDOW_TOP")
    '("bottom" "GTK_TEXT_WINDOW_BOTTOM")
  )
)

(define-enum TextViewLayer
  (in-module "Gtk")
  (c-name "GtkTextViewLayer")
  (gtype-id "GTK_TYPE_TEXT_VIEW_LAYER")
  (values
    '("below-text" "GTK_TEXT_VIEW_LAYER_BELOW_TEXT")
    '("above-text" "GTK_TEXT_VIEW_LAYER_ABOVE_TEXT")
  )
)

(define-enum TextExtendSelection
  (in-module "Gtk")
  (c-name "GtkTextExtendSelection")
  (gtype-id "GTK_TYPE_TEXT_EXTEND_SELECTION")
  (values
    '("word" "GTK_TEXT_EXTEND_SELECTION_WORD")
    '("line" "GTK_TEXT_EXTEND_SELECTION_LINE")
  )
)

(define-flags TreeModelFlags
  (in-module "Gtk")
  (c-name "GtkTreeModelFlags")
  (gtype-id "GTK_TYPE_TREE_MODEL_FLAGS")
  (values
    '("iters-persist" "GTK_TREE_MODEL_ITERS_PERSIST")
    '("list-only" "GTK_TREE_MODEL_LIST_ONLY")
  )
)

(define-enum TreeViewColumnSizing
  (in-module "Gtk")
  (c-name "GtkTreeViewColumnSizing")
  (gtype-id "GTK_TYPE_TREE_VIEW_COLUMN_SIZING")
  (values
    '("grow-only" "GTK_TREE_VIEW_COLUMN_GROW_ONLY")
    '("autosize" "GTK_TREE_VIEW_COLUMN_AUTOSIZE")
    '("fixed" "GTK_TREE_VIEW_COLUMN_FIXED")
  )
)

(define-enum TreeViewDropPosition
  (in-module "Gtk")
  (c-name "GtkTreeViewDropPosition")
  (gtype-id "GTK_TYPE_TREE_VIEW_DROP_POSITION")
  (values
    '("before" "GTK_TREE_VIEW_DROP_BEFORE")
    '("after" "GTK_TREE_VIEW_DROP_AFTER")
    '("into-or-before" "GTK_TREE_VIEW_DROP_INTO_OR_BEFORE")
    '("into-or-after" "GTK_TREE_VIEW_DROP_INTO_OR_AFTER")
  )
)

(define-enum CssParserError
  (in-module "Gtk")
  (c-name "GtkCssParserError")
  (gtype-id "GTK_TYPE_CSS_PARSER_ERROR")
  (values
    '("failed" "GTK_CSS_PARSER_ERROR_FAILED")
    '("syntax" "GTK_CSS_PARSER_ERROR_SYNTAX")
    '("import" "GTK_CSS_PARSER_ERROR_IMPORT")
    '("name" "GTK_CSS_PARSER_ERROR_NAME")
    '("unknown-value" "GTK_CSS_PARSER_ERROR_UNKNOWN_VALUE")
  )
)

(define-enum CssParserWarning
  (in-module "Gtk")
  (c-name "GtkCssParserWarning")
  (gtype-id "GTK_TYPE_CSS_PARSER_WARNING")
  (values
    '("deprecated" "GTK_CSS_PARSER_WARNING_DEPRECATED")
    '("syntax" "GTK_CSS_PARSER_WARNING_SYNTAX")
    '("unimplemented" "GTK_CSS_PARSER_WARNING_UNIMPLEMENTED")
  )
)


;; From gtkaboutdialog.h

(define-function gtk_about_dialog_get_type
  (c-name "gtk_about_dialog_get_type")
  (return-type "GType")
)

(define-function gtk_about_dialog_new
  (c-name "gtk_about_dialog_new")
  (is-constructor-of "GtkAboutDialog")
  (return-type "GtkWidget*")
)

(define-function gtk_show_about_dialog
  (c-name "gtk_show_about_dialog")
  (return-type "none")
  (parameters
    '("GtkWindow*" "parent")
    '("const-char*" "first_property_name")
  )
  (varargs #t)
)

(define-method get_program_name
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_get_program_name")
  (return-type "const-char*")
)

(define-method set_program_name
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_set_program_name")
  (return-type "none")
  (parameters
    '("const-char*" "name")
  )
)

(define-method get_version
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_get_version")
  (return-type "const-char*")
)

(define-method set_version
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_set_version")
  (return-type "none")
  (parameters
    '("const-char*" "version")
  )
)

(define-method get_copyright
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_get_copyright")
  (return-type "const-char*")
)

(define-method set_copyright
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_set_copyright")
  (return-type "none")
  (parameters
    '("const-char*" "copyright")
  )
)

(define-method get_comments
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_get_comments")
  (return-type "const-char*")
)

(define-method set_comments
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_set_comments")
  (return-type "none")
  (parameters
    '("const-char*" "comments")
  )
)

(define-method get_license
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_get_license")
  (return-type "const-char*")
)

(define-method set_license
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_set_license")
  (return-type "none")
  (parameters
    '("const-char*" "license")
  )
)

(define-method set_license_type
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_set_license_type")
  (return-type "none")
  (parameters
    '("GtkLicense" "license_type")
  )
)

(define-method get_license_type
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_get_license_type")
  (return-type "GtkLicense")
)

(define-method get_wrap_license
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_get_wrap_license")
  (return-type "gboolean")
)

(define-method set_wrap_license
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_set_wrap_license")
  (return-type "none")
  (parameters
    '("gboolean" "wrap_license")
  )
)

(define-method get_system_information
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_get_system_information")
  (return-type "const-char*")
)

(define-method set_system_information
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_set_system_information")
  (return-type "none")
  (parameters
    '("const-char*" "system_information")
  )
)

(define-method get_website
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_get_website")
  (return-type "const-char*")
)

(define-method set_website
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_set_website")
  (return-type "none")
  (parameters
    '("const-char*" "website")
  )
)

(define-method get_website_label
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_get_website_label")
  (return-type "const-char*")
)

(define-method set_website_label
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_set_website_label")
  (return-type "none")
  (parameters
    '("const-char*" "website_label")
  )
)

(define-method get_authors
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_get_authors")
  (return-type "const-char*-const*")
)

(define-method set_authors
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_set_authors")
  (return-type "none")
  (parameters
    '("const-char**" "authors")
  )
)

(define-method get_documenters
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_get_documenters")
  (return-type "const-char*-const*")
)

(define-method set_documenters
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_set_documenters")
  (return-type "none")
  (parameters
    '("const-char**" "documenters")
  )
)

(define-method get_artists
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_get_artists")
  (return-type "const-char*-const*")
)

(define-method set_artists
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_set_artists")
  (return-type "none")
  (parameters
    '("const-char**" "artists")
  )
)

(define-method get_translator_credits
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_get_translator_credits")
  (return-type "const-char*")
)

(define-method set_translator_credits
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_set_translator_credits")
  (return-type "none")
  (parameters
    '("const-char*" "translator_credits")
  )
)

(define-method get_logo
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_get_logo")
  (return-type "GdkPaintable*")
)

(define-method set_logo
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_set_logo")
  (return-type "none")
  (parameters
    '("GdkPaintable*" "logo")
  )
)

(define-method get_logo_icon_name
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_get_logo_icon_name")
  (return-type "const-char*")
)

(define-method set_logo_icon_name
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_set_logo_icon_name")
  (return-type "none")
  (parameters
    '("const-char*" "icon_name")
  )
)

(define-method add_credit_section
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_add_credit_section")
  (return-type "none")
  (parameters
    '("const-char*" "section_name")
    '("const-char**" "people")
  )
)



;; From gtkaccelgroup.h

(define-function gtk_accelerator_valid
  (c-name "gtk_accelerator_valid")
  (return-type "gboolean")
  (parameters
    '("guint" "keyval")
    '("GdkModifierType" "modifiers")
  )
)

(define-function gtk_accelerator_parse
  (c-name "gtk_accelerator_parse")
  (return-type "gboolean")
  (parameters
    '("const-char*" "accelerator")
    '("guint*" "accelerator_key")
    '("GdkModifierType*" "accelerator_mods")
  )
)

(define-function gtk_accelerator_parse_with_keycode
  (c-name "gtk_accelerator_parse_with_keycode")
  (return-type "gboolean")
  (parameters
    '("const-char*" "accelerator")
    '("GdkDisplay*" "display")
    '("guint*" "accelerator_key")
    '("guint**" "accelerator_codes")
    '("GdkModifierType*" "accelerator_mods")
  )
)

(define-function gtk_accelerator_name
  (c-name "gtk_accelerator_name")
  (return-type "char*")
  (parameters
    '("guint" "accelerator_key")
    '("GdkModifierType" "accelerator_mods")
  )
)

(define-function gtk_accelerator_name_with_keycode
  (c-name "gtk_accelerator_name_with_keycode")
  (return-type "char*")
  (parameters
    '("GdkDisplay*" "display")
    '("guint" "accelerator_key")
    '("guint" "keycode")
    '("GdkModifierType" "accelerator_mods")
  )
)

(define-function gtk_accelerator_get_label
  (c-name "gtk_accelerator_get_label")
  (return-type "char*")
  (parameters
    '("guint" "accelerator_key")
    '("GdkModifierType" "accelerator_mods")
  )
)

(define-function gtk_accelerator_get_label_with_keycode
  (c-name "gtk_accelerator_get_label_with_keycode")
  (return-type "char*")
  (parameters
    '("GdkDisplay*" "display")
    '("guint" "accelerator_key")
    '("guint" "keycode")
    '("GdkModifierType" "accelerator_mods")
  )
)

(define-function gtk_accelerator_get_default_mod_mask
  (c-name "gtk_accelerator_get_default_mod_mask")
  (return-type "GdkModifierType")
)



;; From gtkaccessible.h

(define-method get_accessible_role
  (of-object "GtkAccessible")
  (c-name "gtk_accessible_get_accessible_role")
  (return-type "GtkAccessibleRole")
)

(define-method update_state
  (of-object "GtkAccessible")
  (c-name "gtk_accessible_update_state")
  (return-type "none")
  (parameters
    '("GtkAccessibleState" "first_state")
  )
  (varargs #t)
)

(define-method update_property
  (of-object "GtkAccessible")
  (c-name "gtk_accessible_update_property")
  (return-type "none")
  (parameters
    '("GtkAccessibleProperty" "first_property")
  )
  (varargs #t)
)

(define-method update_relation
  (of-object "GtkAccessible")
  (c-name "gtk_accessible_update_relation")
  (return-type "none")
  (parameters
    '("GtkAccessibleRelation" "first_relation")
  )
  (varargs #t)
)

(define-method update_state_value
  (of-object "GtkAccessible")
  (c-name "gtk_accessible_update_state_value")
  (return-type "none")
  (parameters
    '("int" "n_states")
    '("GtkAccessibleState[]" "states")
    '("const-GValue[]" "values")
  )
)

(define-method update_property_value
  (of-object "GtkAccessible")
  (c-name "gtk_accessible_update_property_value")
  (return-type "none")
  (parameters
    '("int" "n_properties")
    '("GtkAccessibleProperty[]" "properties")
    '("const-GValue[]" "values")
  )
)

(define-method update_relation_value
  (of-object "GtkAccessible")
  (c-name "gtk_accessible_update_relation_value")
  (return-type "none")
  (parameters
    '("int" "n_relations")
    '("GtkAccessibleRelation[]" "relations")
    '("const-GValue[]" "values")
  )
)

(define-method reset_state
  (of-object "GtkAccessible")
  (c-name "gtk_accessible_reset_state")
  (return-type "none")
  (parameters
    '("GtkAccessibleState" "state")
  )
)

(define-method reset_property
  (of-object "GtkAccessible")
  (c-name "gtk_accessible_reset_property")
  (return-type "none")
  (parameters
    '("GtkAccessibleProperty" "property")
  )
)

(define-method reset_relation
  (of-object "GtkAccessible")
  (c-name "gtk_accessible_reset_relation")
  (return-type "none")
  (parameters
    '("GtkAccessibleRelation" "relation")
  )
)

(define-method init_value
  (of-object "GtkAccessibleState")
  (c-name "gtk_accessible_state_init_value")
  (return-type "none")
  (parameters
    '("GValue*" "value")
  )
)

(define-method init_value
  (of-object "GtkAccessibleProperty")
  (c-name "gtk_accessible_property_init_value")
  (return-type "none")
  (parameters
    '("GValue*" "value")
  )
)

(define-method init_value
  (of-object "GtkAccessibleRelation")
  (c-name "gtk_accessible_relation_init_value")
  (return-type "none")
  (parameters
    '("GValue*" "value")
  )
)



;; From gtkactionable.h

(define-function gtk_actionable_get_type
  (c-name "gtk_actionable_get_type")
  (return-type "GType")
)

(define-method get_action_name
  (of-object "GtkActionable")
  (c-name "gtk_actionable_get_action_name")
  (return-type "const-char*")
)

(define-method set_action_name
  (of-object "GtkActionable")
  (c-name "gtk_actionable_set_action_name")
  (return-type "none")
  (parameters
    '("const-char*" "action_name")
  )
)

(define-method get_action_target_value
  (of-object "GtkActionable")
  (c-name "gtk_actionable_get_action_target_value")
  (return-type "GVariant*")
)

(define-method set_action_target_value
  (of-object "GtkActionable")
  (c-name "gtk_actionable_set_action_target_value")
  (return-type "none")
  (parameters
    '("GVariant*" "target_value")
  )
)

(define-method set_action_target
  (of-object "GtkActionable")
  (c-name "gtk_actionable_set_action_target")
  (return-type "none")
  (parameters
    '("const-char*" "format_string")
  )
  (varargs #t)
)

(define-method set_detailed_action_name
  (of-object "GtkActionable")
  (c-name "gtk_actionable_set_detailed_action_name")
  (return-type "none")
  (parameters
    '("const-char*" "detailed_action_name")
  )
)



;; From gtkactionbar.h

(define-function gtk_action_bar_get_type
  (c-name "gtk_action_bar_get_type")
  (return-type "GType")
)

(define-function gtk_action_bar_new
  (c-name "gtk_action_bar_new")
  (is-constructor-of "GtkActionBar")
  (return-type "GtkWidget*")
)

(define-method get_center_widget
  (of-object "GtkActionBar")
  (c-name "gtk_action_bar_get_center_widget")
  (return-type "GtkWidget*")
)

(define-method set_center_widget
  (of-object "GtkActionBar")
  (c-name "gtk_action_bar_set_center_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "center_widget")
  )
)

(define-method pack_start
  (of-object "GtkActionBar")
  (c-name "gtk_action_bar_pack_start")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method pack_end
  (of-object "GtkActionBar")
  (c-name "gtk_action_bar_pack_end")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method remove
  (of-object "GtkActionBar")
  (c-name "gtk_action_bar_remove")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method set_revealed
  (of-object "GtkActionBar")
  (c-name "gtk_action_bar_set_revealed")
  (return-type "none")
  (parameters
    '("gboolean" "revealed")
  )
)

(define-method get_revealed
  (of-object "GtkActionBar")
  (c-name "gtk_action_bar_get_revealed")
  (return-type "gboolean")
)



;; From gtkadjustment.h

(define-function gtk_adjustment_get_type
  (c-name "gtk_adjustment_get_type")
  (return-type "GType")
)

(define-function gtk_adjustment_new
  (c-name "gtk_adjustment_new")
  (is-constructor-of "GtkAdjustment")
  (return-type "GtkAdjustment*")
  (parameters
    '("double" "value")
    '("double" "lower")
    '("double" "upper")
    '("double" "step_increment")
    '("double" "page_increment")
    '("double" "page_size")
  )
)

(define-method clamp_page
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_clamp_page")
  (return-type "none")
  (parameters
    '("double" "lower")
    '("double" "upper")
  )
)

(define-method get_value
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_get_value")
  (return-type "double")
)

(define-method set_value
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_set_value")
  (return-type "none")
  (parameters
    '("double" "value")
  )
)

(define-method get_lower
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_get_lower")
  (return-type "double")
)

(define-method set_lower
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_set_lower")
  (return-type "none")
  (parameters
    '("double" "lower")
  )
)

(define-method get_upper
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_get_upper")
  (return-type "double")
)

(define-method set_upper
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_set_upper")
  (return-type "none")
  (parameters
    '("double" "upper")
  )
)

(define-method get_step_increment
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_get_step_increment")
  (return-type "double")
)

(define-method set_step_increment
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_set_step_increment")
  (return-type "none")
  (parameters
    '("double" "step_increment")
  )
)

(define-method get_page_increment
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_get_page_increment")
  (return-type "double")
)

(define-method set_page_increment
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_set_page_increment")
  (return-type "none")
  (parameters
    '("double" "page_increment")
  )
)

(define-method get_page_size
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_get_page_size")
  (return-type "double")
)

(define-method set_page_size
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_set_page_size")
  (return-type "none")
  (parameters
    '("double" "page_size")
  )
)

(define-method configure
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_configure")
  (return-type "none")
  (parameters
    '("double" "value")
    '("double" "lower")
    '("double" "upper")
    '("double" "step_increment")
    '("double" "page_increment")
    '("double" "page_size")
  )
)

(define-method get_minimum_increment
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_get_minimum_increment")
  (return-type "double")
)



;; From gtkappchooserbutton.h

(define-function gtk_app_chooser_button_get_type
  (c-name "gtk_app_chooser_button_get_type")
  (return-type "GType")
)

(define-function gtk_app_chooser_button_new
  (c-name "gtk_app_chooser_button_new")
  (is-constructor-of "GtkAppChooserButton")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "content_type")
  )
)

(define-method append_separator
  (of-object "GtkAppChooserButton")
  (c-name "gtk_app_chooser_button_append_separator")
  (return-type "none")
)

(define-method append_custom_item
  (of-object "GtkAppChooserButton")
  (c-name "gtk_app_chooser_button_append_custom_item")
  (return-type "none")
  (parameters
    '("const-char*" "name")
    '("const-char*" "label")
    '("GIcon*" "icon")
  )
)

(define-method set_active_custom_item
  (of-object "GtkAppChooserButton")
  (c-name "gtk_app_chooser_button_set_active_custom_item")
  (return-type "none")
  (parameters
    '("const-char*" "name")
  )
)

(define-method set_show_dialog_item
  (of-object "GtkAppChooserButton")
  (c-name "gtk_app_chooser_button_set_show_dialog_item")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_show_dialog_item
  (of-object "GtkAppChooserButton")
  (c-name "gtk_app_chooser_button_get_show_dialog_item")
  (return-type "gboolean")
)

(define-method set_heading
  (of-object "GtkAppChooserButton")
  (c-name "gtk_app_chooser_button_set_heading")
  (return-type "none")
  (parameters
    '("const-char*" "heading")
  )
)

(define-method get_heading
  (of-object "GtkAppChooserButton")
  (c-name "gtk_app_chooser_button_get_heading")
  (return-type "const-char*")
)

(define-method set_show_default_item
  (of-object "GtkAppChooserButton")
  (c-name "gtk_app_chooser_button_set_show_default_item")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_show_default_item
  (of-object "GtkAppChooserButton")
  (c-name "gtk_app_chooser_button_get_show_default_item")
  (return-type "gboolean")
)

(define-method get_modal
  (of-object "GtkAppChooserButton")
  (c-name "gtk_app_chooser_button_get_modal")
  (return-type "gboolean")
)

(define-method set_modal
  (of-object "GtkAppChooserButton")
  (c-name "gtk_app_chooser_button_set_modal")
  (return-type "none")
  (parameters
    '("gboolean" "modal")
  )
)



;; From gtkappchooserdialog.h

(define-function gtk_app_chooser_dialog_get_type
  (c-name "gtk_app_chooser_dialog_get_type")
  (return-type "GType")
)

(define-function gtk_app_chooser_dialog_new
  (c-name "gtk_app_chooser_dialog_new")
  (is-constructor-of "GtkAppChooserDialog")
  (return-type "GtkWidget*")
  (parameters
    '("GtkWindow*" "parent")
    '("GtkDialogFlags" "flags")
    '("GFile*" "file")
  )
)

(define-function gtk_app_chooser_dialog_new_for_content_type
  (c-name "gtk_app_chooser_dialog_new_for_content_type")
  (return-type "GtkWidget*")
  (parameters
    '("GtkWindow*" "parent")
    '("GtkDialogFlags" "flags")
    '("const-char*" "content_type")
  )
)

(define-method get_widget
  (of-object "GtkAppChooserDialog")
  (c-name "gtk_app_chooser_dialog_get_widget")
  (return-type "GtkWidget*")
)

(define-method set_heading
  (of-object "GtkAppChooserDialog")
  (c-name "gtk_app_chooser_dialog_set_heading")
  (return-type "none")
  (parameters
    '("const-char*" "heading")
  )
)

(define-method get_heading
  (of-object "GtkAppChooserDialog")
  (c-name "gtk_app_chooser_dialog_get_heading")
  (return-type "const-char*")
)



;; From gtkappchooser.h

(define-function gtk_app_chooser_get_type
  (c-name "gtk_app_chooser_get_type")
  (return-type "GType")
)

(define-method get_app_info
  (of-object "GtkAppChooser")
  (c-name "gtk_app_chooser_get_app_info")
  (return-type "GAppInfo*")
)

(define-method get_content_type
  (of-object "GtkAppChooser")
  (c-name "gtk_app_chooser_get_content_type")
  (return-type "char*")
)

(define-method refresh
  (of-object "GtkAppChooser")
  (c-name "gtk_app_chooser_refresh")
  (return-type "none")
)



;; From gtkappchooserwidget.h

(define-function gtk_app_chooser_widget_get_type
  (c-name "gtk_app_chooser_widget_get_type")
  (return-type "GType")
)

(define-function gtk_app_chooser_widget_new
  (c-name "gtk_app_chooser_widget_new")
  (is-constructor-of "GtkAppChooserWidget")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "content_type")
  )
)

(define-method set_show_default
  (of-object "GtkAppChooserWidget")
  (c-name "gtk_app_chooser_widget_set_show_default")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_show_default
  (of-object "GtkAppChooserWidget")
  (c-name "gtk_app_chooser_widget_get_show_default")
  (return-type "gboolean")
)

(define-method set_show_recommended
  (of-object "GtkAppChooserWidget")
  (c-name "gtk_app_chooser_widget_set_show_recommended")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_show_recommended
  (of-object "GtkAppChooserWidget")
  (c-name "gtk_app_chooser_widget_get_show_recommended")
  (return-type "gboolean")
)

(define-method set_show_fallback
  (of-object "GtkAppChooserWidget")
  (c-name "gtk_app_chooser_widget_set_show_fallback")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_show_fallback
  (of-object "GtkAppChooserWidget")
  (c-name "gtk_app_chooser_widget_get_show_fallback")
  (return-type "gboolean")
)

(define-method set_show_other
  (of-object "GtkAppChooserWidget")
  (c-name "gtk_app_chooser_widget_set_show_other")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_show_other
  (of-object "GtkAppChooserWidget")
  (c-name "gtk_app_chooser_widget_get_show_other")
  (return-type "gboolean")
)

(define-method set_show_all
  (of-object "GtkAppChooserWidget")
  (c-name "gtk_app_chooser_widget_set_show_all")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_show_all
  (of-object "GtkAppChooserWidget")
  (c-name "gtk_app_chooser_widget_get_show_all")
  (return-type "gboolean")
)

(define-method set_default_text
  (of-object "GtkAppChooserWidget")
  (c-name "gtk_app_chooser_widget_set_default_text")
  (return-type "none")
  (parameters
    '("const-char*" "text")
  )
)

(define-method get_default_text
  (of-object "GtkAppChooserWidget")
  (c-name "gtk_app_chooser_widget_get_default_text")
  (return-type "const-char*")
)



;; From gtkapplication.h

(define-function gtk_application_get_type
  (c-name "gtk_application_get_type")
  (return-type "GType")
)

(define-function gtk_application_new
  (c-name "gtk_application_new")
  (is-constructor-of "GtkApplication")
  (return-type "GtkApplication*")
  (parameters
    '("const-char*" "application_id")
    '("GApplicationFlags" "flags")
  )
)

(define-method add_window
  (of-object "GtkApplication")
  (c-name "gtk_application_add_window")
  (return-type "none")
  (parameters
    '("GtkWindow*" "window")
  )
)

(define-method remove_window
  (of-object "GtkApplication")
  (c-name "gtk_application_remove_window")
  (return-type "none")
  (parameters
    '("GtkWindow*" "window")
  )
)

(define-method get_windows
  (of-object "GtkApplication")
  (c-name "gtk_application_get_windows")
  (return-type "GList*")
)

(define-method get_menubar
  (of-object "GtkApplication")
  (c-name "gtk_application_get_menubar")
  (return-type "GMenuModel*")
)

(define-method set_menubar
  (of-object "GtkApplication")
  (c-name "gtk_application_set_menubar")
  (return-type "none")
  (parameters
    '("GMenuModel*" "menubar")
  )
)

(define-method inhibit
  (of-object "GtkApplication")
  (c-name "gtk_application_inhibit")
  (return-type "guint")
  (parameters
    '("GtkWindow*" "window")
    '("GtkApplicationInhibitFlags" "flags")
    '("const-char*" "reason")
  )
)

(define-method uninhibit
  (of-object "GtkApplication")
  (c-name "gtk_application_uninhibit")
  (return-type "none")
  (parameters
    '("guint" "cookie")
  )
)

(define-method get_window_by_id
  (of-object "GtkApplication")
  (c-name "gtk_application_get_window_by_id")
  (return-type "GtkWindow*")
  (parameters
    '("guint" "id")
  )
)

(define-method get_active_window
  (of-object "GtkApplication")
  (c-name "gtk_application_get_active_window")
  (return-type "GtkWindow*")
)

(define-method list_action_descriptions
  (of-object "GtkApplication")
  (c-name "gtk_application_list_action_descriptions")
  (return-type "char**")
)

(define-method get_accels_for_action
  (of-object "GtkApplication")
  (c-name "gtk_application_get_accels_for_action")
  (return-type "char**")
  (parameters
    '("const-char*" "detailed_action_name")
  )
)

(define-method get_actions_for_accel
  (of-object "GtkApplication")
  (c-name "gtk_application_get_actions_for_accel")
  (return-type "char**")
  (parameters
    '("const-char*" "accel")
  )
)

(define-method set_accels_for_action
  (of-object "GtkApplication")
  (c-name "gtk_application_set_accels_for_action")
  (return-type "none")
  (parameters
    '("const-char*" "detailed_action_name")
    '("const-char*-const*" "accels")
  )
)

(define-method get_menu_by_id
  (of-object "GtkApplication")
  (c-name "gtk_application_get_menu_by_id")
  (return-type "GMenu*")
  (parameters
    '("const-char*" "id")
  )
)



;; From gtkapplicationwindow.h

(define-function gtk_application_window_get_type
  (c-name "gtk_application_window_get_type")
  (return-type "GType")
)

(define-method window_new
  (of-object "GtkApplication")
  (c-name "gtk_application_window_new")
  (return-type "GtkWidget*")
)

(define-method set_show_menubar
  (of-object "GtkApplicationWindow")
  (c-name "gtk_application_window_set_show_menubar")
  (return-type "none")
  (parameters
    '("gboolean" "show_menubar")
  )
)

(define-method get_show_menubar
  (of-object "GtkApplicationWindow")
  (c-name "gtk_application_window_get_show_menubar")
  (return-type "gboolean")
)

(define-method get_id
  (of-object "GtkApplicationWindow")
  (c-name "gtk_application_window_get_id")
  (return-type "guint")
)

(define-method set_help_overlay
  (of-object "GtkApplicationWindow")
  (c-name "gtk_application_window_set_help_overlay")
  (return-type "none")
  (parameters
    '("GtkShortcutsWindow*" "help_overlay")
  )
)

(define-method get_help_overlay
  (of-object "GtkApplicationWindow")
  (c-name "gtk_application_window_get_help_overlay")
  (return-type "GtkShortcutsWindow*")
)



;; From gtkaspectframe.h

(define-function gtk_aspect_frame_get_type
  (c-name "gtk_aspect_frame_get_type")
  (return-type "GType")
)

(define-function gtk_aspect_frame_new
  (c-name "gtk_aspect_frame_new")
  (is-constructor-of "GtkAspectFrame")
  (return-type "GtkWidget*")
  (parameters
    '("float" "xalign")
    '("float" "yalign")
    '("float" "ratio")
    '("gboolean" "obey_child")
  )
)

(define-method set_xalign
  (of-object "GtkAspectFrame")
  (c-name "gtk_aspect_frame_set_xalign")
  (return-type "none")
  (parameters
    '("float" "xalign")
  )
)

(define-method get_xalign
  (of-object "GtkAspectFrame")
  (c-name "gtk_aspect_frame_get_xalign")
  (return-type "float")
)

(define-method set_yalign
  (of-object "GtkAspectFrame")
  (c-name "gtk_aspect_frame_set_yalign")
  (return-type "none")
  (parameters
    '("float" "yalign")
  )
)

(define-method get_yalign
  (of-object "GtkAspectFrame")
  (c-name "gtk_aspect_frame_get_yalign")
  (return-type "float")
)

(define-method set_ratio
  (of-object "GtkAspectFrame")
  (c-name "gtk_aspect_frame_set_ratio")
  (return-type "none")
  (parameters
    '("float" "ratio")
  )
)

(define-method get_ratio
  (of-object "GtkAspectFrame")
  (c-name "gtk_aspect_frame_get_ratio")
  (return-type "float")
)

(define-method set_obey_child
  (of-object "GtkAspectFrame")
  (c-name "gtk_aspect_frame_set_obey_child")
  (return-type "none")
  (parameters
    '("gboolean" "obey_child")
  )
)

(define-method get_obey_child
  (of-object "GtkAspectFrame")
  (c-name "gtk_aspect_frame_get_obey_child")
  (return-type "gboolean")
)

(define-method set_child
  (of-object "GtkAspectFrame")
  (c-name "gtk_aspect_frame_set_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_child
  (of-object "GtkAspectFrame")
  (c-name "gtk_aspect_frame_get_child")
  (return-type "GtkWidget*")
)



;; From gtkassistant.h

(define-function gtk_assistant_page_get_type
  (c-name "gtk_assistant_page_get_type")
  (return-type "GType")
)

(define-function gtk_assistant_get_type
  (c-name "gtk_assistant_get_type")
  (return-type "GType")
)

(define-function gtk_assistant_new
  (c-name "gtk_assistant_new")
  (is-constructor-of "GtkAssistant")
  (return-type "GtkWidget*")
)

(define-method next_page
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_next_page")
  (return-type "none")
)

(define-method previous_page
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_previous_page")
  (return-type "none")
)

(define-method get_current_page
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_get_current_page")
  (return-type "int")
)

(define-method set_current_page
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_set_current_page")
  (return-type "none")
  (parameters
    '("int" "page_num")
  )
)

(define-method get_n_pages
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_get_n_pages")
  (return-type "int")
)

(define-method get_nth_page
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_get_nth_page")
  (return-type "GtkWidget*")
  (parameters
    '("int" "page_num")
  )
)

(define-method prepend_page
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_prepend_page")
  (return-type "int")
  (parameters
    '("GtkWidget*" "page")
  )
)

(define-method append_page
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_append_page")
  (return-type "int")
  (parameters
    '("GtkWidget*" "page")
  )
)

(define-method insert_page
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_insert_page")
  (return-type "int")
  (parameters
    '("GtkWidget*" "page")
    '("int" "position")
  )
)

(define-method remove_page
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_remove_page")
  (return-type "none")
  (parameters
    '("int" "page_num")
  )
)

(define-method set_forward_page_func
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_set_forward_page_func")
  (return-type "none")
  (parameters
    '("GtkAssistantPageFunc" "page_func")
    '("gpointer" "data")
    '("GDestroyNotify" "destroy")
  )
)

(define-method set_page_type
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_set_page_type")
  (return-type "none")
  (parameters
    '("GtkWidget*" "page")
    '("GtkAssistantPageType" "type")
  )
)

(define-method get_page_type
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_get_page_type")
  (return-type "GtkAssistantPageType")
  (parameters
    '("GtkWidget*" "page")
  )
)

(define-method set_page_title
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_set_page_title")
  (return-type "none")
  (parameters
    '("GtkWidget*" "page")
    '("const-char*" "title")
  )
)

(define-method get_page_title
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_get_page_title")
  (return-type "const-char*")
  (parameters
    '("GtkWidget*" "page")
  )
)

(define-method set_page_complete
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_set_page_complete")
  (return-type "none")
  (parameters
    '("GtkWidget*" "page")
    '("gboolean" "complete")
  )
)

(define-method get_page_complete
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_get_page_complete")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "page")
  )
)

(define-method add_action_widget
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_add_action_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method remove_action_widget
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_remove_action_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method update_buttons_state
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_update_buttons_state")
  (return-type "none")
)

(define-method commit
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_commit")
  (return-type "none")
)

(define-method get_page
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_get_page")
  (return-type "GtkAssistantPage*")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_child
  (of-object "GtkAssistantPage")
  (c-name "gtk_assistant_page_get_child")
  (return-type "GtkWidget*")
)

(define-method get_pages
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_get_pages")
  (return-type "GListModel*")
)



;; From gtkatcontext.h

(define-method get_accessible
  (of-object "GtkATContext")
  (c-name "gtk_at_context_get_accessible")
  (return-type "GtkAccessible*")
)

(define-method get_accessible_role
  (of-object "GtkATContext")
  (c-name "gtk_at_context_get_accessible_role")
  (return-type "GtkAccessibleRole")
)

(define-function gtk_at_context_create
  (c-name "gtk_at_context_create")
  (return-type "GtkATContext*")
  (parameters
    '("GtkAccessibleRole" "accessible_role")
    '("GtkAccessible*" "accessible")
    '("GdkDisplay*" "display")
  )
)



;; From gtk-autocleanups.h



;; From gtkbinlayout.h

(define-function gtk_bin_layout_new
  (c-name "gtk_bin_layout_new")
  (is-constructor-of "GtkBinLayout")
  (return-type "GtkLayoutManager*")
)



;; From gtkbitmaskprivateimpl.h



;; From gtkbitset.h

(define-function gtk_bitset_get_type
  (c-name "gtk_bitset_get_type")
  (return-type "GType")
)

(define-method ref
  (of-object "GtkBitset")
  (c-name "gtk_bitset_ref")
  (return-type "GtkBitset*")
)

(define-method unref
  (of-object "GtkBitset")
  (c-name "gtk_bitset_unref")
  (return-type "none")
)

(define-method contains
  (of-object "GtkBitset")
  (c-name "gtk_bitset_contains")
  (return-type "gboolean")
  (parameters
    '("guint" "value")
  )
)

(define-method is_empty
  (of-object "GtkBitset")
  (c-name "gtk_bitset_is_empty")
  (return-type "gboolean")
)

(define-method equals
  (of-object "GtkBitset")
  (c-name "gtk_bitset_equals")
  (return-type "gboolean")
  (parameters
    '("const-GtkBitset*" "other")
  )
)

(define-method get_size
  (of-object "GtkBitset")
  (c-name "gtk_bitset_get_size")
  (return-type "guint64")
)

(define-method get_size_in_range
  (of-object "GtkBitset")
  (c-name "gtk_bitset_get_size_in_range")
  (return-type "guint64")
  (parameters
    '("guint" "first")
    '("guint" "last")
  )
)

(define-method get_nth
  (of-object "GtkBitset")
  (c-name "gtk_bitset_get_nth")
  (return-type "guint")
  (parameters
    '("guint" "nth")
  )
)

(define-method get_minimum
  (of-object "GtkBitset")
  (c-name "gtk_bitset_get_minimum")
  (return-type "guint")
)

(define-method get_maximum
  (of-object "GtkBitset")
  (c-name "gtk_bitset_get_maximum")
  (return-type "guint")
)

(define-function gtk_bitset_new_empty
  (c-name "gtk_bitset_new_empty")
  (return-type "GtkBitset*")
)

(define-method copy
  (of-object "GtkBitset")
  (c-name "gtk_bitset_copy")
  (return-type "GtkBitset*")
)

(define-function gtk_bitset_new_range
  (c-name "gtk_bitset_new_range")
  (return-type "GtkBitset*")
  (parameters
    '("guint" "start")
    '("guint" "n_items")
  )
)

(define-method remove_all
  (of-object "GtkBitset")
  (c-name "gtk_bitset_remove_all")
  (return-type "none")
)

(define-method add
  (of-object "GtkBitset")
  (c-name "gtk_bitset_add")
  (return-type "gboolean")
  (parameters
    '("guint" "value")
  )
)

(define-method remove
  (of-object "GtkBitset")
  (c-name "gtk_bitset_remove")
  (return-type "gboolean")
  (parameters
    '("guint" "value")
  )
)

(define-method add_range
  (of-object "GtkBitset")
  (c-name "gtk_bitset_add_range")
  (return-type "none")
  (parameters
    '("guint" "start")
    '("guint" "n_items")
  )
)

(define-method remove_range
  (of-object "GtkBitset")
  (c-name "gtk_bitset_remove_range")
  (return-type "none")
  (parameters
    '("guint" "start")
    '("guint" "n_items")
  )
)

(define-method add_range_closed
  (of-object "GtkBitset")
  (c-name "gtk_bitset_add_range_closed")
  (return-type "none")
  (parameters
    '("guint" "first")
    '("guint" "last")
  )
)

(define-method remove_range_closed
  (of-object "GtkBitset")
  (c-name "gtk_bitset_remove_range_closed")
  (return-type "none")
  (parameters
    '("guint" "first")
    '("guint" "last")
  )
)

(define-method add_rectangle
  (of-object "GtkBitset")
  (c-name "gtk_bitset_add_rectangle")
  (return-type "none")
  (parameters
    '("guint" "start")
    '("guint" "width")
    '("guint" "height")
    '("guint" "stride")
  )
)

(define-method remove_rectangle
  (of-object "GtkBitset")
  (c-name "gtk_bitset_remove_rectangle")
  (return-type "none")
  (parameters
    '("guint" "start")
    '("guint" "width")
    '("guint" "height")
    '("guint" "stride")
  )
)

(define-method union
  (of-object "GtkBitset")
  (c-name "gtk_bitset_union")
  (return-type "none")
  (parameters
    '("const-GtkBitset*" "other")
  )
)

(define-method intersect
  (of-object "GtkBitset")
  (c-name "gtk_bitset_intersect")
  (return-type "none")
  (parameters
    '("const-GtkBitset*" "other")
  )
)

(define-method subtract
  (of-object "GtkBitset")
  (c-name "gtk_bitset_subtract")
  (return-type "none")
  (parameters
    '("const-GtkBitset*" "other")
  )
)

(define-method difference
  (of-object "GtkBitset")
  (c-name "gtk_bitset_difference")
  (return-type "none")
  (parameters
    '("const-GtkBitset*" "other")
  )
)

(define-method shift_left
  (of-object "GtkBitset")
  (c-name "gtk_bitset_shift_left")
  (return-type "none")
  (parameters
    '("guint" "amount")
  )
)

(define-method shift_right
  (of-object "GtkBitset")
  (c-name "gtk_bitset_shift_right")
  (return-type "none")
  (parameters
    '("guint" "amount")
  )
)

(define-method splice
  (of-object "GtkBitset")
  (c-name "gtk_bitset_splice")
  (return-type "none")
  (parameters
    '("guint" "position")
    '("guint" "removed")
    '("guint" "added")
  )
)

(define-method init_first
  (of-object "GtkBitsetIter")
  (c-name "gtk_bitset_iter_init_first")
  (return-type "gboolean")
  (parameters
    '("const-GtkBitset*" "set")
    '("guint*" "value")
  )
)

(define-method init_last
  (of-object "GtkBitsetIter")
  (c-name "gtk_bitset_iter_init_last")
  (return-type "gboolean")
  (parameters
    '("const-GtkBitset*" "set")
    '("guint*" "value")
  )
)

(define-method init_at
  (of-object "GtkBitsetIter")
  (c-name "gtk_bitset_iter_init_at")
  (return-type "gboolean")
  (parameters
    '("const-GtkBitset*" "set")
    '("guint" "target")
    '("guint*" "value")
  )
)

(define-method next
  (of-object "GtkBitsetIter")
  (c-name "gtk_bitset_iter_next")
  (return-type "gboolean")
  (parameters
    '("guint*" "value")
  )
)

(define-method previous
  (of-object "GtkBitsetIter")
  (c-name "gtk_bitset_iter_previous")
  (return-type "gboolean")
  (parameters
    '("guint*" "value")
  )
)

(define-method get_value
  (of-object "GtkBitsetIter")
  (c-name "gtk_bitset_iter_get_value")
  (return-type "guint")
)

(define-method is_valid
  (of-object "GtkBitsetIter")
  (c-name "gtk_bitset_iter_is_valid")
  (return-type "gboolean")
)



;; From gtkbookmarklist.h

(define-function gtk_bookmark_list_new
  (c-name "gtk_bookmark_list_new")
  (is-constructor-of "GtkBookmarkList")
  (return-type "GtkBookmarkList*")
  (parameters
    '("const-char*" "filename")
    '("const-char*" "attributes")
  )
)

(define-method get_filename
  (of-object "GtkBookmarkList")
  (c-name "gtk_bookmark_list_get_filename")
  (return-type "const-char*")
)

(define-method set_attributes
  (of-object "GtkBookmarkList")
  (c-name "gtk_bookmark_list_set_attributes")
  (return-type "none")
  (parameters
    '("const-char*" "attributes")
  )
)

(define-method get_attributes
  (of-object "GtkBookmarkList")
  (c-name "gtk_bookmark_list_get_attributes")
  (return-type "const-char*")
)

(define-method set_io_priority
  (of-object "GtkBookmarkList")
  (c-name "gtk_bookmark_list_set_io_priority")
  (return-type "none")
  (parameters
    '("int" "io_priority")
  )
)

(define-method get_io_priority
  (of-object "GtkBookmarkList")
  (c-name "gtk_bookmark_list_get_io_priority")
  (return-type "int")
)

(define-method is_loading
  (of-object "GtkBookmarkList")
  (c-name "gtk_bookmark_list_is_loading")
  (return-type "gboolean")
)



;; From gtkboolfilter.h

(define-function gtk_bool_filter_new
  (c-name "gtk_bool_filter_new")
  (is-constructor-of "GtkBoolFilter")
  (return-type "GtkBoolFilter*")
  (parameters
    '("GtkExpression*" "expression")
  )
)

(define-method get_expression
  (of-object "GtkBoolFilter")
  (c-name "gtk_bool_filter_get_expression")
  (return-type "GtkExpression*")
)

(define-method set_expression
  (of-object "GtkBoolFilter")
  (c-name "gtk_bool_filter_set_expression")
  (return-type "none")
  (parameters
    '("GtkExpression*" "expression")
  )
)

(define-method get_invert
  (of-object "GtkBoolFilter")
  (c-name "gtk_bool_filter_get_invert")
  (return-type "gboolean")
)

(define-method set_invert
  (of-object "GtkBoolFilter")
  (c-name "gtk_bool_filter_set_invert")
  (return-type "none")
  (parameters
    '("gboolean" "invert")
  )
)



;; From gtkborder.h

(define-function gtk_border_get_type
  (c-name "gtk_border_get_type")
  (return-type "GType")
)

(define-function gtk_border_new
  (c-name "gtk_border_new")
  (is-constructor-of "GtkBorder")
  (return-type "GtkBorder*")
)

(define-method copy
  (of-object "GtkBorder")
  (c-name "gtk_border_copy")
  (return-type "GtkBorder*")
)

(define-method free
  (of-object "GtkBorder")
  (c-name "gtk_border_free")
  (return-type "none")
)



;; From gtkbox.h

(define-function gtk_box_get_type
  (c-name "gtk_box_get_type")
  (return-type "GType")
)

(define-function gtk_box_new
  (c-name "gtk_box_new")
  (is-constructor-of "GtkBox")
  (return-type "GtkWidget*")
  (parameters
    '("GtkOrientation" "orientation")
    '("int" "spacing")
  )
)

(define-method set_homogeneous
  (of-object "GtkBox")
  (c-name "gtk_box_set_homogeneous")
  (return-type "none")
  (parameters
    '("gboolean" "homogeneous")
  )
)

(define-method get_homogeneous
  (of-object "GtkBox")
  (c-name "gtk_box_get_homogeneous")
  (return-type "gboolean")
)

(define-method set_spacing
  (of-object "GtkBox")
  (c-name "gtk_box_set_spacing")
  (return-type "none")
  (parameters
    '("int" "spacing")
  )
)

(define-method get_spacing
  (of-object "GtkBox")
  (c-name "gtk_box_get_spacing")
  (return-type "int")
)

(define-method set_baseline_position
  (of-object "GtkBox")
  (c-name "gtk_box_set_baseline_position")
  (return-type "none")
  (parameters
    '("GtkBaselinePosition" "position")
  )
)

(define-method get_baseline_position
  (of-object "GtkBox")
  (c-name "gtk_box_get_baseline_position")
  (return-type "GtkBaselinePosition")
)

(define-method append
  (of-object "GtkBox")
  (c-name "gtk_box_append")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method prepend
  (of-object "GtkBox")
  (c-name "gtk_box_prepend")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method remove
  (of-object "GtkBox")
  (c-name "gtk_box_remove")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method insert_child_after
  (of-object "GtkBox")
  (c-name "gtk_box_insert_child_after")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("GtkWidget*" "sibling")
  )
)

(define-method reorder_child_after
  (of-object "GtkBox")
  (c-name "gtk_box_reorder_child_after")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("GtkWidget*" "sibling")
  )
)



;; From gtkboxlayout.h

(define-function gtk_box_layout_new
  (c-name "gtk_box_layout_new")
  (is-constructor-of "GtkBoxLayout")
  (return-type "GtkLayoutManager*")
  (parameters
    '("GtkOrientation" "orientation")
  )
)

(define-method set_homogeneous
  (of-object "GtkBoxLayout")
  (c-name "gtk_box_layout_set_homogeneous")
  (return-type "none")
  (parameters
    '("gboolean" "homogeneous")
  )
)

(define-method get_homogeneous
  (of-object "GtkBoxLayout")
  (c-name "gtk_box_layout_get_homogeneous")
  (return-type "gboolean")
)

(define-method set_spacing
  (of-object "GtkBoxLayout")
  (c-name "gtk_box_layout_set_spacing")
  (return-type "none")
  (parameters
    '("guint" "spacing")
  )
)

(define-method get_spacing
  (of-object "GtkBoxLayout")
  (c-name "gtk_box_layout_get_spacing")
  (return-type "guint")
)

(define-method set_baseline_position
  (of-object "GtkBoxLayout")
  (c-name "gtk_box_layout_set_baseline_position")
  (return-type "none")
  (parameters
    '("GtkBaselinePosition" "position")
  )
)

(define-method get_baseline_position
  (of-object "GtkBoxLayout")
  (c-name "gtk_box_layout_get_baseline_position")
  (return-type "GtkBaselinePosition")
)



;; From gtkbuildable.h

(define-function gtk_buildable_get_type
  (c-name "gtk_buildable_get_type")
  (return-type "GType")
)

(define-method get_buildable_id
  (of-object "GtkBuildable")
  (c-name "gtk_buildable_get_buildable_id")
  (return-type "const-char*")
)

(define-method push
  (of-object "GtkBuildableParseContext")
  (c-name "gtk_buildable_parse_context_push")
  (return-type "none")
  (parameters
    '("const-GtkBuildableParser*" "parser")
    '("gpointer" "user_data")
  )
)

(define-method pop
  (of-object "GtkBuildableParseContext")
  (c-name "gtk_buildable_parse_context_pop")
  (return-type "gpointer")
)

(define-method get_element
  (of-object "GtkBuildableParseContext")
  (c-name "gtk_buildable_parse_context_get_element")
  (return-type "const-char*")
)

(define-method get_element_stack
  (of-object "GtkBuildableParseContext")
  (c-name "gtk_buildable_parse_context_get_element_stack")
  (return-type "GPtrArray*")
)

(define-method get_position
  (of-object "GtkBuildableParseContext")
  (c-name "gtk_buildable_parse_context_get_position")
  (return-type "none")
  (parameters
    '("int*" "line_number")
    '("int*" "char_number")
  )
)



;; From gtkbuilder.h

(define-function gtk_builder_error_quark
  (c-name "gtk_builder_error_quark")
  (return-type "GQuark")
)

(define-function gtk_builder_get_type
  (c-name "gtk_builder_get_type")
  (return-type "GType")
)

(define-function gtk_builder_new
  (c-name "gtk_builder_new")
  (is-constructor-of "GtkBuilder")
  (return-type "GtkBuilder*")
)

(define-method add_from_file
  (of-object "GtkBuilder")
  (c-name "gtk_builder_add_from_file")
  (return-type "gboolean")
  (parameters
    '("const-char*" "filename")
    '("GError**" "error")
  )
)

(define-method add_from_resource
  (of-object "GtkBuilder")
  (c-name "gtk_builder_add_from_resource")
  (return-type "gboolean")
  (parameters
    '("const-char*" "resource_path")
    '("GError**" "error")
  )
)

(define-method add_from_string
  (of-object "GtkBuilder")
  (c-name "gtk_builder_add_from_string")
  (return-type "gboolean")
  (parameters
    '("const-char*" "buffer")
    '("gssize" "length")
    '("GError**" "error")
  )
)

(define-method add_objects_from_file
  (of-object "GtkBuilder")
  (c-name "gtk_builder_add_objects_from_file")
  (return-type "gboolean")
  (parameters
    '("const-char*" "filename")
    '("const-char**" "object_ids")
    '("GError**" "error")
  )
)

(define-method add_objects_from_resource
  (of-object "GtkBuilder")
  (c-name "gtk_builder_add_objects_from_resource")
  (return-type "gboolean")
  (parameters
    '("const-char*" "resource_path")
    '("const-char**" "object_ids")
    '("GError**" "error")
  )
)

(define-method add_objects_from_string
  (of-object "GtkBuilder")
  (c-name "gtk_builder_add_objects_from_string")
  (return-type "gboolean")
  (parameters
    '("const-char*" "buffer")
    '("gssize" "length")
    '("const-char**" "object_ids")
    '("GError**" "error")
  )
)

(define-method get_object
  (of-object "GtkBuilder")
  (c-name "gtk_builder_get_object")
  (return-type "GObject*")
  (parameters
    '("const-char*" "name")
  )
)

(define-method get_objects
  (of-object "GtkBuilder")
  (c-name "gtk_builder_get_objects")
  (return-type "GSList*")
)

(define-method expose_object
  (of-object "GtkBuilder")
  (c-name "gtk_builder_expose_object")
  (return-type "none")
  (parameters
    '("const-char*" "name")
    '("GObject*" "object")
  )
)

(define-method get_current_object
  (of-object "GtkBuilder")
  (c-name "gtk_builder_get_current_object")
  (return-type "GObject*")
)

(define-method set_current_object
  (of-object "GtkBuilder")
  (c-name "gtk_builder_set_current_object")
  (return-type "none")
  (parameters
    '("GObject*" "current_object")
  )
)

(define-method set_translation_domain
  (of-object "GtkBuilder")
  (c-name "gtk_builder_set_translation_domain")
  (return-type "none")
  (parameters
    '("const-char*" "domain")
  )
)

(define-method get_translation_domain
  (of-object "GtkBuilder")
  (c-name "gtk_builder_get_translation_domain")
  (return-type "const-char*")
)

(define-method get_scope
  (of-object "GtkBuilder")
  (c-name "gtk_builder_get_scope")
  (return-type "GtkBuilderScope*")
)

(define-method set_scope
  (of-object "GtkBuilder")
  (c-name "gtk_builder_set_scope")
  (return-type "none")
  (parameters
    '("GtkBuilderScope*" "scope")
  )
)

(define-method get_type_from_name
  (of-object "GtkBuilder")
  (c-name "gtk_builder_get_type_from_name")
  (return-type "GType")
  (parameters
    '("const-char*" "type_name")
  )
)

(define-method value_from_string
  (of-object "GtkBuilder")
  (c-name "gtk_builder_value_from_string")
  (return-type "gboolean")
  (parameters
    '("GParamSpec*" "pspec")
    '("const-char*" "string")
    '("GValue*" "value")
    '("GError**" "error")
  )
)

(define-method value_from_string_type
  (of-object "GtkBuilder")
  (c-name "gtk_builder_value_from_string_type")
  (return-type "gboolean")
  (parameters
    '("GType" "type")
    '("const-char*" "string")
    '("GValue*" "value")
    '("GError**" "error")
  )
)

(define-function gtk_builder_new_from_file
  (c-name "gtk_builder_new_from_file")
  (return-type "GtkBuilder*")
  (parameters
    '("const-char*" "filename")
  )
)

(define-function gtk_builder_new_from_resource
  (c-name "gtk_builder_new_from_resource")
  (return-type "GtkBuilder*")
  (parameters
    '("const-char*" "resource_path")
  )
)

(define-function gtk_builder_new_from_string
  (c-name "gtk_builder_new_from_string")
  (return-type "GtkBuilder*")
  (parameters
    '("const-char*" "string")
    '("gssize" "length")
  )
)

(define-method create_closure
  (of-object "GtkBuilder")
  (c-name "gtk_builder_create_closure")
  (return-type "GClosure*")
  (parameters
    '("const-char*" "function_name")
    '("GtkBuilderClosureFlags" "flags")
    '("GObject*" "object")
    '("GError**" "error")
  )
)

(define-method extend_with_template
  (of-object "GtkBuilder")
  (c-name "gtk_builder_extend_with_template")
  (return-type "gboolean")
  (parameters
    '("GObject*" "object")
    '("GType" "template_type")
    '("const-char*" "buffer")
    '("gssize" "length")
    '("GError**" "error")
  )
)



;; From gtkbuilderlistitemfactory.h

(define-function gtk_builder_list_item_factory_get_type
  (c-name "gtk_builder_list_item_factory_get_type")
  (return-type "GType")
)

(define-function gtk_builder_list_item_factory_new_from_bytes
  (c-name "gtk_builder_list_item_factory_new_from_bytes")
  (return-type "GtkListItemFactory*")
  (parameters
    '("GtkBuilderScope*" "scope")
    '("GBytes*" "bytes")
  )
)

(define-function gtk_builder_list_item_factory_new_from_resource
  (c-name "gtk_builder_list_item_factory_new_from_resource")
  (return-type "GtkListItemFactory*")
  (parameters
    '("GtkBuilderScope*" "scope")
    '("const-char*" "resource_path")
  )
)

(define-method get_bytes
  (of-object "GtkBuilderListItemFactory")
  (c-name "gtk_builder_list_item_factory_get_bytes")
  (return-type "GBytes*")
)

(define-method get_resource
  (of-object "GtkBuilderListItemFactory")
  (c-name "gtk_builder_list_item_factory_get_resource")
  (return-type "const-char*")
)

(define-method get_scope
  (of-object "GtkBuilderListItemFactory")
  (c-name "gtk_builder_list_item_factory_get_scope")
  (return-type "GtkBuilderScope*")
)



;; From gtkbuilderscope.h

(define-function gtk_builder_cscope_new
  (c-name "gtk_builder_cscope_new")
  (is-constructor-of "GtkBuilderCscope")
  (return-type "GtkBuilderScope*")
)

(define-method add_callback_symbol
  (of-object "GtkBuilderCScope")
  (c-name "gtk_builder_cscope_add_callback_symbol")
  (return-type "none")
  (parameters
    '("const-char*" "callback_name")
    '("GCallback" "callback_symbol")
  )
)

(define-method add_callback_symbols
  (of-object "GtkBuilderCScope")
  (c-name "gtk_builder_cscope_add_callback_symbols")
  (return-type "none")
  (parameters
    '("const-char*" "first_callback_name")
    '("GCallback" "first_callback_symbol")
  )
  (varargs #t)
)

(define-method lookup_callback_symbol
  (of-object "GtkBuilderCScope")
  (c-name "gtk_builder_cscope_lookup_callback_symbol")
  (return-type "GCallback")
  (parameters
    '("const-char*" "callback_name")
  )
)



;; From gtkbutton.h

(define-function gtk_button_get_type
  (c-name "gtk_button_get_type")
  (return-type "GType")
)

(define-function gtk_button_new
  (c-name "gtk_button_new")
  (is-constructor-of "GtkButton")
  (return-type "GtkWidget*")
)

(define-function gtk_button_new_with_label
  (c-name "gtk_button_new_with_label")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "label")
  )
)

(define-function gtk_button_new_from_icon_name
  (c-name "gtk_button_new_from_icon_name")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "icon_name")
  )
)

(define-function gtk_button_new_with_mnemonic
  (c-name "gtk_button_new_with_mnemonic")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "label")
  )
)

(define-method set_has_frame
  (of-object "GtkButton")
  (c-name "gtk_button_set_has_frame")
  (return-type "none")
  (parameters
    '("gboolean" "has_frame")
  )
)

(define-method get_has_frame
  (of-object "GtkButton")
  (c-name "gtk_button_get_has_frame")
  (return-type "gboolean")
)

(define-method set_label
  (of-object "GtkButton")
  (c-name "gtk_button_set_label")
  (return-type "none")
  (parameters
    '("const-char*" "label")
  )
)

(define-method get_label
  (of-object "GtkButton")
  (c-name "gtk_button_get_label")
  (return-type "const-char*")
)

(define-method set_use_underline
  (of-object "GtkButton")
  (c-name "gtk_button_set_use_underline")
  (return-type "none")
  (parameters
    '("gboolean" "use_underline")
  )
)

(define-method get_use_underline
  (of-object "GtkButton")
  (c-name "gtk_button_get_use_underline")
  (return-type "gboolean")
)

(define-method set_icon_name
  (of-object "GtkButton")
  (c-name "gtk_button_set_icon_name")
  (return-type "none")
  (parameters
    '("const-char*" "icon_name")
  )
)

(define-method get_icon_name
  (of-object "GtkButton")
  (c-name "gtk_button_get_icon_name")
  (return-type "const-char*")
)

(define-method set_child
  (of-object "GtkButton")
  (c-name "gtk_button_set_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_child
  (of-object "GtkButton")
  (c-name "gtk_button_get_child")
  (return-type "GtkWidget*")
)



;; From gtkcalendar.h

(define-function gtk_calendar_get_type
  (c-name "gtk_calendar_get_type")
  (return-type "GType")
)

(define-function gtk_calendar_new
  (c-name "gtk_calendar_new")
  (is-constructor-of "GtkCalendar")
  (return-type "GtkWidget*")
)

(define-method select_day
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_select_day")
  (return-type "none")
  (parameters
    '("GDateTime*" "date")
  )
)

(define-method mark_day
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_mark_day")
  (return-type "none")
  (parameters
    '("guint" "day")
  )
)

(define-method unmark_day
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_unmark_day")
  (return-type "none")
  (parameters
    '("guint" "day")
  )
)

(define-method clear_marks
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_clear_marks")
  (return-type "none")
)

(define-method set_show_week_numbers
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_set_show_week_numbers")
  (return-type "none")
  (parameters
    '("gboolean" "value")
  )
)

(define-method get_show_week_numbers
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_get_show_week_numbers")
  (return-type "gboolean")
)

(define-method set_show_heading
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_set_show_heading")
  (return-type "none")
  (parameters
    '("gboolean" "value")
  )
)

(define-method get_show_heading
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_get_show_heading")
  (return-type "gboolean")
)

(define-method set_show_day_names
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_set_show_day_names")
  (return-type "none")
  (parameters
    '("gboolean" "value")
  )
)

(define-method get_show_day_names
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_get_show_day_names")
  (return-type "gboolean")
)

(define-method get_date
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_get_date")
  (return-type "GDateTime*")
)

(define-method get_day_is_marked
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_get_day_is_marked")
  (return-type "gboolean")
  (parameters
    '("guint" "day")
  )
)



;; From gtkcellareabox.h

(define-function gtk_cell_area_box_get_type
  (c-name "gtk_cell_area_box_get_type")
  (return-type "GType")
)

(define-function gtk_cell_area_box_new
  (c-name "gtk_cell_area_box_new")
  (is-constructor-of "GtkCellAreaBox")
  (return-type "GtkCellArea*")
)

(define-method pack_start
  (of-object "GtkCellAreaBox")
  (c-name "gtk_cell_area_box_pack_start")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "renderer")
    '("gboolean" "expand")
    '("gboolean" "align")
    '("gboolean" "fixed")
  )
)

(define-method pack_end
  (of-object "GtkCellAreaBox")
  (c-name "gtk_cell_area_box_pack_end")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "renderer")
    '("gboolean" "expand")
    '("gboolean" "align")
    '("gboolean" "fixed")
  )
)

(define-method get_spacing
  (of-object "GtkCellAreaBox")
  (c-name "gtk_cell_area_box_get_spacing")
  (return-type "int")
)

(define-method set_spacing
  (of-object "GtkCellAreaBox")
  (c-name "gtk_cell_area_box_set_spacing")
  (return-type "none")
  (parameters
    '("int" "spacing")
  )
)



;; From gtkcellareacontext.h

(define-function gtk_cell_area_context_get_type
  (c-name "gtk_cell_area_context_get_type")
  (return-type "GType")
)

(define-method get_area
  (of-object "GtkCellAreaContext")
  (c-name "gtk_cell_area_context_get_area")
  (return-type "GtkCellArea*")
)

(define-method allocate
  (of-object "GtkCellAreaContext")
  (c-name "gtk_cell_area_context_allocate")
  (return-type "none")
  (parameters
    '("int" "width")
    '("int" "height")
  )
)

(define-method reset
  (of-object "GtkCellAreaContext")
  (c-name "gtk_cell_area_context_reset")
  (return-type "none")
)

(define-method get_preferred_width
  (of-object "GtkCellAreaContext")
  (c-name "gtk_cell_area_context_get_preferred_width")
  (return-type "none")
  (parameters
    '("int*" "minimum_width")
    '("int*" "natural_width")
  )
)

(define-method get_preferred_height
  (of-object "GtkCellAreaContext")
  (c-name "gtk_cell_area_context_get_preferred_height")
  (return-type "none")
  (parameters
    '("int*" "minimum_height")
    '("int*" "natural_height")
  )
)

(define-method get_preferred_height_for_width
  (of-object "GtkCellAreaContext")
  (c-name "gtk_cell_area_context_get_preferred_height_for_width")
  (return-type "none")
  (parameters
    '("int" "width")
    '("int*" "minimum_height")
    '("int*" "natural_height")
  )
)

(define-method get_preferred_width_for_height
  (of-object "GtkCellAreaContext")
  (c-name "gtk_cell_area_context_get_preferred_width_for_height")
  (return-type "none")
  (parameters
    '("int" "height")
    '("int*" "minimum_width")
    '("int*" "natural_width")
  )
)

(define-method get_allocation
  (of-object "GtkCellAreaContext")
  (c-name "gtk_cell_area_context_get_allocation")
  (return-type "none")
  (parameters
    '("int*" "width")
    '("int*" "height")
  )
)

(define-method push_preferred_width
  (of-object "GtkCellAreaContext")
  (c-name "gtk_cell_area_context_push_preferred_width")
  (return-type "none")
  (parameters
    '("int" "minimum_width")
    '("int" "natural_width")
  )
)

(define-method push_preferred_height
  (of-object "GtkCellAreaContext")
  (c-name "gtk_cell_area_context_push_preferred_height")
  (return-type "none")
  (parameters
    '("int" "minimum_height")
    '("int" "natural_height")
  )
)



;; From gtkcellarea.h

(define-function gtk_cell_area_get_type
  (c-name "gtk_cell_area_get_type")
  (return-type "GType")
)

(define-method add
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_add")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "renderer")
  )
)

(define-method remove
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_remove")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "renderer")
  )
)

(define-method has_renderer
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_has_renderer")
  (return-type "gboolean")
  (parameters
    '("GtkCellRenderer*" "renderer")
  )
)

(define-method foreach
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_foreach")
  (return-type "none")
  (parameters
    '("GtkCellCallback" "callback")
    '("gpointer" "callback_data")
  )
)

(define-method foreach_alloc
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_foreach_alloc")
  (return-type "none")
  (parameters
    '("GtkCellAreaContext*" "context")
    '("GtkWidget*" "widget")
    '("const-GdkRectangle*" "cell_area")
    '("const-GdkRectangle*" "background_area")
    '("GtkCellAllocCallback" "callback")
    '("gpointer" "callback_data")
  )
)

(define-method event
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_event")
  (return-type "int")
  (parameters
    '("GtkCellAreaContext*" "context")
    '("GtkWidget*" "widget")
    '("GdkEvent*" "event")
    '("const-GdkRectangle*" "cell_area")
    '("GtkCellRendererState" "flags")
  )
)

(define-method snapshot
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_snapshot")
  (return-type "none")
  (parameters
    '("GtkCellAreaContext*" "context")
    '("GtkWidget*" "widget")
    '("GtkSnapshot*" "snapshot")
    '("const-GdkRectangle*" "background_area")
    '("const-GdkRectangle*" "cell_area")
    '("GtkCellRendererState" "flags")
    '("gboolean" "paint_focus")
  )
)

(define-method get_cell_allocation
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_get_cell_allocation")
  (return-type "none")
  (parameters
    '("GtkCellAreaContext*" "context")
    '("GtkWidget*" "widget")
    '("GtkCellRenderer*" "renderer")
    '("const-GdkRectangle*" "cell_area")
    '("GdkRectangle*" "allocation")
  )
)

(define-method get_cell_at_position
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_get_cell_at_position")
  (return-type "GtkCellRenderer*")
  (parameters
    '("GtkCellAreaContext*" "context")
    '("GtkWidget*" "widget")
    '("const-GdkRectangle*" "cell_area")
    '("int" "x")
    '("int" "y")
    '("GdkRectangle*" "alloc_area")
  )
)

(define-method create_context
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_create_context")
  (return-type "GtkCellAreaContext*")
)

(define-method copy_context
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_copy_context")
  (return-type "GtkCellAreaContext*")
  (parameters
    '("GtkCellAreaContext*" "context")
  )
)

(define-method get_request_mode
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_get_request_mode")
  (return-type "GtkSizeRequestMode")
)

(define-method get_preferred_width
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_get_preferred_width")
  (return-type "none")
  (parameters
    '("GtkCellAreaContext*" "context")
    '("GtkWidget*" "widget")
    '("int*" "minimum_width")
    '("int*" "natural_width")
  )
)

(define-method get_preferred_height_for_width
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_get_preferred_height_for_width")
  (return-type "none")
  (parameters
    '("GtkCellAreaContext*" "context")
    '("GtkWidget*" "widget")
    '("int" "width")
    '("int*" "minimum_height")
    '("int*" "natural_height")
  )
)

(define-method get_preferred_height
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_get_preferred_height")
  (return-type "none")
  (parameters
    '("GtkCellAreaContext*" "context")
    '("GtkWidget*" "widget")
    '("int*" "minimum_height")
    '("int*" "natural_height")
  )
)

(define-method get_preferred_width_for_height
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_get_preferred_width_for_height")
  (return-type "none")
  (parameters
    '("GtkCellAreaContext*" "context")
    '("GtkWidget*" "widget")
    '("int" "height")
    '("int*" "minimum_width")
    '("int*" "natural_width")
  )
)

(define-method get_current_path_string
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_get_current_path_string")
  (return-type "const-char*")
)

(define-method apply_attributes
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_apply_attributes")
  (return-type "none")
  (parameters
    '("GtkTreeModel*" "tree_model")
    '("GtkTreeIter*" "iter")
    '("gboolean" "is_expander")
    '("gboolean" "is_expanded")
  )
)

(define-method attribute_connect
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_attribute_connect")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "renderer")
    '("const-char*" "attribute")
    '("int" "column")
  )
)

(define-method attribute_disconnect
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_attribute_disconnect")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "renderer")
    '("const-char*" "attribute")
  )
)

(define-method attribute_get_column
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_attribute_get_column")
  (return-type "int")
  (parameters
    '("GtkCellRenderer*" "renderer")
    '("const-char*" "attribute")
  )
)

(define-method install_cell_property
  (of-object "GtkCellAreaClass")
  (c-name "gtk_cell_area_class_install_cell_property")
  (return-type "none")
  (parameters
    '("guint" "property_id")
    '("GParamSpec*" "pspec")
  )
)

(define-method find_cell_property
  (of-object "GtkCellAreaClass")
  (c-name "gtk_cell_area_class_find_cell_property")
  (return-type "GParamSpec*")
  (parameters
    '("const-char*" "property_name")
  )
)

(define-method list_cell_properties
  (of-object "GtkCellAreaClass")
  (c-name "gtk_cell_area_class_list_cell_properties")
  (return-type "GParamSpec**")
  (parameters
    '("guint*" "n_properties")
  )
)

(define-method add_with_properties
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_add_with_properties")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "renderer")
    '("const-char*" "first_prop_name")
  )
  (varargs #t)
)

(define-method cell_set
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_cell_set")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "renderer")
    '("const-char*" "first_prop_name")
  )
  (varargs #t)
)

(define-method cell_get
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_cell_get")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "renderer")
    '("const-char*" "first_prop_name")
  )
  (varargs #t)
)

(define-method cell_set_valist
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_cell_set_valist")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "renderer")
    '("const-char*" "first_property_name")
    '("va_list" "var_args")
  )
)

(define-method cell_get_valist
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_cell_get_valist")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "renderer")
    '("const-char*" "first_property_name")
    '("va_list" "var_args")
  )
)

(define-method cell_set_property
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_cell_set_property")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "renderer")
    '("const-char*" "property_name")
    '("const-GValue*" "value")
  )
)

(define-method cell_get_property
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_cell_get_property")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "renderer")
    '("const-char*" "property_name")
    '("GValue*" "value")
  )
)

(define-method is_activatable
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_is_activatable")
  (return-type "gboolean")
)

(define-method activate
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_activate")
  (return-type "gboolean")
  (parameters
    '("GtkCellAreaContext*" "context")
    '("GtkWidget*" "widget")
    '("const-GdkRectangle*" "cell_area")
    '("GtkCellRendererState" "flags")
    '("gboolean" "edit_only")
  )
)

(define-method focus
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_focus")
  (return-type "gboolean")
  (parameters
    '("GtkDirectionType" "direction")
  )
)

(define-method set_focus_cell
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_set_focus_cell")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "renderer")
  )
)

(define-method get_focus_cell
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_get_focus_cell")
  (return-type "GtkCellRenderer*")
)

(define-method add_focus_sibling
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_add_focus_sibling")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "renderer")
    '("GtkCellRenderer*" "sibling")
  )
)

(define-method remove_focus_sibling
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_remove_focus_sibling")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "renderer")
    '("GtkCellRenderer*" "sibling")
  )
)

(define-method is_focus_sibling
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_is_focus_sibling")
  (return-type "gboolean")
  (parameters
    '("GtkCellRenderer*" "renderer")
    '("GtkCellRenderer*" "sibling")
  )
)

(define-method get_focus_siblings
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_get_focus_siblings")
  (return-type "const-GList*")
  (parameters
    '("GtkCellRenderer*" "renderer")
  )
)

(define-method get_focus_from_sibling
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_get_focus_from_sibling")
  (return-type "GtkCellRenderer*")
  (parameters
    '("GtkCellRenderer*" "renderer")
  )
)

(define-method get_edited_cell
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_get_edited_cell")
  (return-type "GtkCellRenderer*")
)

(define-method get_edit_widget
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_get_edit_widget")
  (return-type "GtkCellEditable*")
)

(define-method activate_cell
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_activate_cell")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "widget")
    '("GtkCellRenderer*" "renderer")
    '("GdkEvent*" "event")
    '("const-GdkRectangle*" "cell_area")
    '("GtkCellRendererState" "flags")
  )
)

(define-method stop_editing
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_stop_editing")
  (return-type "none")
  (parameters
    '("gboolean" "canceled")
  )
)

(define-method inner_cell_area
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_inner_cell_area")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("const-GdkRectangle*" "cell_area")
    '("GdkRectangle*" "inner_area")
  )
)

(define-method request_renderer
  (of-object "GtkCellArea")
  (c-name "gtk_cell_area_request_renderer")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "renderer")
    '("GtkOrientation" "orientation")
    '("GtkWidget*" "widget")
    '("int" "for_size")
    '("int*" "minimum_size")
    '("int*" "natural_size")
  )
)



;; From gtkcelleditable.h

(define-function gtk_cell_editable_get_type
  (c-name "gtk_cell_editable_get_type")
  (return-type "GType")
)

(define-method start_editing
  (of-object "GtkCellEditable")
  (c-name "gtk_cell_editable_start_editing")
  (return-type "none")
  (parameters
    '("GdkEvent*" "event")
  )
)

(define-method editing_done
  (of-object "GtkCellEditable")
  (c-name "gtk_cell_editable_editing_done")
  (return-type "none")
)

(define-method remove_widget
  (of-object "GtkCellEditable")
  (c-name "gtk_cell_editable_remove_widget")
  (return-type "none")
)



;; From gtkcelllayout.h

(define-function gtk_cell_layout_get_type
  (c-name "gtk_cell_layout_get_type")
  (return-type "GType")
)

(define-method pack_start
  (of-object "GtkCellLayout")
  (c-name "gtk_cell_layout_pack_start")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell")
    '("gboolean" "expand")
  )
)

(define-method pack_end
  (of-object "GtkCellLayout")
  (c-name "gtk_cell_layout_pack_end")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell")
    '("gboolean" "expand")
  )
)

(define-method get_cells
  (of-object "GtkCellLayout")
  (c-name "gtk_cell_layout_get_cells")
  (return-type "GList*")
)

(define-method clear
  (of-object "GtkCellLayout")
  (c-name "gtk_cell_layout_clear")
  (return-type "none")
)

(define-method set_attributes
  (of-object "GtkCellLayout")
  (c-name "gtk_cell_layout_set_attributes")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell")
  )
  (varargs #t)
)

(define-method add_attribute
  (of-object "GtkCellLayout")
  (c-name "gtk_cell_layout_add_attribute")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell")
    '("const-char*" "attribute")
    '("int" "column")
  )
)

(define-method set_cell_data_func
  (of-object "GtkCellLayout")
  (c-name "gtk_cell_layout_set_cell_data_func")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell")
    '("GtkCellLayoutDataFunc" "func")
    '("gpointer" "func_data")
    '("GDestroyNotify" "destroy")
  )
)

(define-method clear_attributes
  (of-object "GtkCellLayout")
  (c-name "gtk_cell_layout_clear_attributes")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell")
  )
)

(define-method reorder
  (of-object "GtkCellLayout")
  (c-name "gtk_cell_layout_reorder")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell")
    '("int" "position")
  )
)

(define-method get_area
  (of-object "GtkCellLayout")
  (c-name "gtk_cell_layout_get_area")
  (return-type "GtkCellArea*")
)



;; From gtkcellrendereraccel.h

(define-function gtk_cell_renderer_accel_get_type
  (c-name "gtk_cell_renderer_accel_get_type")
  (return-type "GType")
)

(define-function gtk_cell_renderer_accel_new
  (c-name "gtk_cell_renderer_accel_new")
  (is-constructor-of "GtkCellRendererAccel")
  (return-type "GtkCellRenderer*")
)



;; From gtkcellrenderercombo.h

(define-function gtk_cell_renderer_combo_get_type
  (c-name "gtk_cell_renderer_combo_get_type")
  (return-type "GType")
)

(define-function gtk_cell_renderer_combo_new
  (c-name "gtk_cell_renderer_combo_new")
  (is-constructor-of "GtkCellRendererCombo")
  (return-type "GtkCellRenderer*")
)



;; From gtkcellrenderer.h

(define-function gtk_cell_renderer_get_type
  (c-name "gtk_cell_renderer_get_type")
  (return-type "GType")
)

(define-method get_request_mode
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_get_request_mode")
  (return-type "GtkSizeRequestMode")
)

(define-method get_preferred_width
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_get_preferred_width")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("int*" "minimum_size")
    '("int*" "natural_size")
  )
)

(define-method get_preferred_height_for_width
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_get_preferred_height_for_width")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("int" "width")
    '("int*" "minimum_height")
    '("int*" "natural_height")
  )
)

(define-method get_preferred_height
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_get_preferred_height")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("int*" "minimum_size")
    '("int*" "natural_size")
  )
)

(define-method get_preferred_width_for_height
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_get_preferred_width_for_height")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("int" "height")
    '("int*" "minimum_width")
    '("int*" "natural_width")
  )
)

(define-method get_preferred_size
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_get_preferred_size")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("GtkRequisition*" "minimum_size")
    '("GtkRequisition*" "natural_size")
  )
)

(define-method get_aligned_area
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_get_aligned_area")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("GtkCellRendererState" "flags")
    '("const-GdkRectangle*" "cell_area")
    '("GdkRectangle*" "aligned_area")
  )
)

(define-method snapshot
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_snapshot")
  (return-type "none")
  (parameters
    '("GtkSnapshot*" "snapshot")
    '("GtkWidget*" "widget")
    '("const-GdkRectangle*" "background_area")
    '("const-GdkRectangle*" "cell_area")
    '("GtkCellRendererState" "flags")
  )
)

(define-method activate
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_activate")
  (return-type "gboolean")
  (parameters
    '("GdkEvent*" "event")
    '("GtkWidget*" "widget")
    '("const-char*" "path")
    '("const-GdkRectangle*" "background_area")
    '("const-GdkRectangle*" "cell_area")
    '("GtkCellRendererState" "flags")
  )
)

(define-method start_editing
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_start_editing")
  (return-type "GtkCellEditable*")
  (parameters
    '("GdkEvent*" "event")
    '("GtkWidget*" "widget")
    '("const-char*" "path")
    '("const-GdkRectangle*" "background_area")
    '("const-GdkRectangle*" "cell_area")
    '("GtkCellRendererState" "flags")
  )
)

(define-method set_fixed_size
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_set_fixed_size")
  (return-type "none")
  (parameters
    '("int" "width")
    '("int" "height")
  )
)

(define-method get_fixed_size
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_get_fixed_size")
  (return-type "none")
  (parameters
    '("int*" "width")
    '("int*" "height")
  )
)

(define-method set_alignment
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_set_alignment")
  (return-type "none")
  (parameters
    '("float" "xalign")
    '("float" "yalign")
  )
)

(define-method get_alignment
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_get_alignment")
  (return-type "none")
  (parameters
    '("float*" "xalign")
    '("float*" "yalign")
  )
)

(define-method set_padding
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_set_padding")
  (return-type "none")
  (parameters
    '("int" "xpad")
    '("int" "ypad")
  )
)

(define-method get_padding
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_get_padding")
  (return-type "none")
  (parameters
    '("int*" "xpad")
    '("int*" "ypad")
  )
)

(define-method set_visible
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_set_visible")
  (return-type "none")
  (parameters
    '("gboolean" "visible")
  )
)

(define-method get_visible
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_get_visible")
  (return-type "gboolean")
)

(define-method set_sensitive
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_set_sensitive")
  (return-type "none")
  (parameters
    '("gboolean" "sensitive")
  )
)

(define-method get_sensitive
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_get_sensitive")
  (return-type "gboolean")
)

(define-method is_activatable
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_is_activatable")
  (return-type "gboolean")
)

(define-method set_is_expander
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_set_is_expander")
  (return-type "none")
  (parameters
    '("gboolean" "is_expander")
  )
)

(define-method get_is_expander
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_get_is_expander")
  (return-type "gboolean")
)

(define-method set_is_expanded
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_set_is_expanded")
  (return-type "none")
  (parameters
    '("gboolean" "is_expanded")
  )
)

(define-method get_is_expanded
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_get_is_expanded")
  (return-type "gboolean")
)

(define-method stop_editing
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_stop_editing")
  (return-type "none")
  (parameters
    '("gboolean" "canceled")
  )
)

(define-method get_state
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_get_state")
  (return-type "GtkStateFlags")
  (parameters
    '("GtkWidget*" "widget")
    '("GtkCellRendererState" "cell_state")
  )
)



;; From gtkcellrendererpixbuf.h

(define-function gtk_cell_renderer_pixbuf_get_type
  (c-name "gtk_cell_renderer_pixbuf_get_type")
  (return-type "GType")
)

(define-function gtk_cell_renderer_pixbuf_new
  (c-name "gtk_cell_renderer_pixbuf_new")
  (is-constructor-of "GtkCellRendererPixbuf")
  (return-type "GtkCellRenderer*")
)



;; From gtkcellrendererprogress.h

(define-function gtk_cell_renderer_progress_get_type
  (c-name "gtk_cell_renderer_progress_get_type")
  (return-type "GType")
)

(define-function gtk_cell_renderer_progress_new
  (c-name "gtk_cell_renderer_progress_new")
  (is-constructor-of "GtkCellRendererProgress")
  (return-type "GtkCellRenderer*")
)



;; From gtkcellrendererspin.h

(define-function gtk_cell_renderer_spin_get_type
  (c-name "gtk_cell_renderer_spin_get_type")
  (return-type "GType")
)

(define-function gtk_cell_renderer_spin_new
  (c-name "gtk_cell_renderer_spin_new")
  (is-constructor-of "GtkCellRendererSpin")
  (return-type "GtkCellRenderer*")
)



;; From gtkcellrendererspinner.h

(define-function gtk_cell_renderer_spinner_get_type
  (c-name "gtk_cell_renderer_spinner_get_type")
  (return-type "GType")
)

(define-function gtk_cell_renderer_spinner_new
  (c-name "gtk_cell_renderer_spinner_new")
  (is-constructor-of "GtkCellRendererSpinner")
  (return-type "GtkCellRenderer*")
)



;; From gtkcellrenderertext.h

(define-function gtk_cell_renderer_text_get_type
  (c-name "gtk_cell_renderer_text_get_type")
  (return-type "GType")
)

(define-function gtk_cell_renderer_text_new
  (c-name "gtk_cell_renderer_text_new")
  (is-constructor-of "GtkCellRendererText")
  (return-type "GtkCellRenderer*")
)

(define-method set_fixed_height_from_font
  (of-object "GtkCellRendererText")
  (c-name "gtk_cell_renderer_text_set_fixed_height_from_font")
  (return-type "none")
  (parameters
    '("int" "number_of_rows")
  )
)



;; From gtkcellrenderertoggle.h

(define-function gtk_cell_renderer_toggle_get_type
  (c-name "gtk_cell_renderer_toggle_get_type")
  (return-type "GType")
)

(define-function gtk_cell_renderer_toggle_new
  (c-name "gtk_cell_renderer_toggle_new")
  (is-constructor-of "GtkCellRendererToggle")
  (return-type "GtkCellRenderer*")
)

(define-method get_radio
  (of-object "GtkCellRendererToggle")
  (c-name "gtk_cell_renderer_toggle_get_radio")
  (return-type "gboolean")
)

(define-method set_radio
  (of-object "GtkCellRendererToggle")
  (c-name "gtk_cell_renderer_toggle_set_radio")
  (return-type "none")
  (parameters
    '("gboolean" "radio")
  )
)

(define-method get_active
  (of-object "GtkCellRendererToggle")
  (c-name "gtk_cell_renderer_toggle_get_active")
  (return-type "gboolean")
)

(define-method set_active
  (of-object "GtkCellRendererToggle")
  (c-name "gtk_cell_renderer_toggle_set_active")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_activatable
  (of-object "GtkCellRendererToggle")
  (c-name "gtk_cell_renderer_toggle_get_activatable")
  (return-type "gboolean")
)

(define-method set_activatable
  (of-object "GtkCellRendererToggle")
  (c-name "gtk_cell_renderer_toggle_set_activatable")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)



;; From gtkcellview.h

(define-function gtk_cell_view_get_type
  (c-name "gtk_cell_view_get_type")
  (return-type "GType")
)

(define-function gtk_cell_view_new
  (c-name "gtk_cell_view_new")
  (is-constructor-of "GtkCellView")
  (return-type "GtkWidget*")
)

(define-function gtk_cell_view_new_with_context
  (c-name "gtk_cell_view_new_with_context")
  (return-type "GtkWidget*")
  (parameters
    '("GtkCellArea*" "area")
    '("GtkCellAreaContext*" "context")
  )
)

(define-function gtk_cell_view_new_with_text
  (c-name "gtk_cell_view_new_with_text")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "text")
  )
)

(define-function gtk_cell_view_new_with_markup
  (c-name "gtk_cell_view_new_with_markup")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "markup")
  )
)

(define-function gtk_cell_view_new_with_texture
  (c-name "gtk_cell_view_new_with_texture")
  (return-type "GtkWidget*")
  (parameters
    '("GdkTexture*" "texture")
  )
)

(define-method set_model
  (of-object "GtkCellView")
  (c-name "gtk_cell_view_set_model")
  (return-type "none")
  (parameters
    '("GtkTreeModel*" "model")
  )
)

(define-method get_model
  (of-object "GtkCellView")
  (c-name "gtk_cell_view_get_model")
  (return-type "GtkTreeModel*")
)

(define-method set_displayed_row
  (of-object "GtkCellView")
  (c-name "gtk_cell_view_set_displayed_row")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-method get_displayed_row
  (of-object "GtkCellView")
  (c-name "gtk_cell_view_get_displayed_row")
  (return-type "GtkTreePath*")
)

(define-method get_draw_sensitive
  (of-object "GtkCellView")
  (c-name "gtk_cell_view_get_draw_sensitive")
  (return-type "gboolean")
)

(define-method set_draw_sensitive
  (of-object "GtkCellView")
  (c-name "gtk_cell_view_set_draw_sensitive")
  (return-type "none")
  (parameters
    '("gboolean" "draw_sensitive")
  )
)

(define-method get_fit_model
  (of-object "GtkCellView")
  (c-name "gtk_cell_view_get_fit_model")
  (return-type "gboolean")
)

(define-method set_fit_model
  (of-object "GtkCellView")
  (c-name "gtk_cell_view_set_fit_model")
  (return-type "none")
  (parameters
    '("gboolean" "fit_model")
  )
)



;; From gtkcenterbox.h

(define-function gtk_center_box_get_type
  (c-name "gtk_center_box_get_type")
  (return-type "GType")
)

(define-function gtk_center_box_new
  (c-name "gtk_center_box_new")
  (is-constructor-of "GtkCenterBox")
  (return-type "GtkWidget*")
)

(define-method set_start_widget
  (of-object "GtkCenterBox")
  (c-name "gtk_center_box_set_start_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method set_center_widget
  (of-object "GtkCenterBox")
  (c-name "gtk_center_box_set_center_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method set_end_widget
  (of-object "GtkCenterBox")
  (c-name "gtk_center_box_set_end_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_start_widget
  (of-object "GtkCenterBox")
  (c-name "gtk_center_box_get_start_widget")
  (return-type "GtkWidget*")
)

(define-method get_center_widget
  (of-object "GtkCenterBox")
  (c-name "gtk_center_box_get_center_widget")
  (return-type "GtkWidget*")
)

(define-method get_end_widget
  (of-object "GtkCenterBox")
  (c-name "gtk_center_box_get_end_widget")
  (return-type "GtkWidget*")
)

(define-method set_baseline_position
  (of-object "GtkCenterBox")
  (c-name "gtk_center_box_set_baseline_position")
  (return-type "none")
  (parameters
    '("GtkBaselinePosition" "position")
  )
)

(define-method get_baseline_position
  (of-object "GtkCenterBox")
  (c-name "gtk_center_box_get_baseline_position")
  (return-type "GtkBaselinePosition")
)



;; From gtkcenterlayout.h

(define-function gtk_center_layout_new
  (c-name "gtk_center_layout_new")
  (is-constructor-of "GtkCenterLayout")
  (return-type "GtkLayoutManager*")
)

(define-method set_orientation
  (of-object "GtkCenterLayout")
  (c-name "gtk_center_layout_set_orientation")
  (return-type "none")
  (parameters
    '("GtkOrientation" "orientation")
  )
)

(define-method get_orientation
  (of-object "GtkCenterLayout")
  (c-name "gtk_center_layout_get_orientation")
  (return-type "GtkOrientation")
)

(define-method set_baseline_position
  (of-object "GtkCenterLayout")
  (c-name "gtk_center_layout_set_baseline_position")
  (return-type "none")
  (parameters
    '("GtkBaselinePosition" "baseline_position")
  )
)

(define-method get_baseline_position
  (of-object "GtkCenterLayout")
  (c-name "gtk_center_layout_get_baseline_position")
  (return-type "GtkBaselinePosition")
)

(define-method set_start_widget
  (of-object "GtkCenterLayout")
  (c-name "gtk_center_layout_set_start_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method get_start_widget
  (of-object "GtkCenterLayout")
  (c-name "gtk_center_layout_get_start_widget")
  (return-type "GtkWidget*")
)

(define-method set_center_widget
  (of-object "GtkCenterLayout")
  (c-name "gtk_center_layout_set_center_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method get_center_widget
  (of-object "GtkCenterLayout")
  (c-name "gtk_center_layout_get_center_widget")
  (return-type "GtkWidget*")
)

(define-method set_end_widget
  (of-object "GtkCenterLayout")
  (c-name "gtk_center_layout_set_end_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method get_end_widget
  (of-object "GtkCenterLayout")
  (c-name "gtk_center_layout_get_end_widget")
  (return-type "GtkWidget*")
)



;; From gtkcheckbutton.h

(define-function gtk_check_button_get_type
  (c-name "gtk_check_button_get_type")
  (return-type "GType")
)

(define-function gtk_check_button_new
  (c-name "gtk_check_button_new")
  (is-constructor-of "GtkCheckButton")
  (return-type "GtkWidget*")
)

(define-function gtk_check_button_new_with_label
  (c-name "gtk_check_button_new_with_label")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "label")
  )
)

(define-function gtk_check_button_new_with_mnemonic
  (c-name "gtk_check_button_new_with_mnemonic")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "label")
  )
)

(define-method set_inconsistent
  (of-object "GtkCheckButton")
  (c-name "gtk_check_button_set_inconsistent")
  (return-type "none")
  (parameters
    '("gboolean" "inconsistent")
  )
)

(define-method get_inconsistent
  (of-object "GtkCheckButton")
  (c-name "gtk_check_button_get_inconsistent")
  (return-type "gboolean")
)

(define-method get_active
  (of-object "GtkCheckButton")
  (c-name "gtk_check_button_get_active")
  (return-type "gboolean")
)

(define-method set_active
  (of-object "GtkCheckButton")
  (c-name "gtk_check_button_set_active")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_label
  (of-object "GtkCheckButton")
  (c-name "gtk_check_button_get_label")
  (return-type "const-char*")
)

(define-method set_label
  (of-object "GtkCheckButton")
  (c-name "gtk_check_button_set_label")
  (return-type "none")
  (parameters
    '("const-char*" "label")
  )
)

(define-method set_group
  (of-object "GtkCheckButton")
  (c-name "gtk_check_button_set_group")
  (return-type "none")
  (parameters
    '("GtkCheckButton*" "group")
  )
)

(define-method get_use_underline
  (of-object "GtkCheckButton")
  (c-name "gtk_check_button_get_use_underline")
  (return-type "gboolean")
)

(define-method set_use_underline
  (of-object "GtkCheckButton")
  (c-name "gtk_check_button_set_use_underline")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)



;; From gtkcolorbutton.h

(define-function gtk_color_button_get_type
  (c-name "gtk_color_button_get_type")
  (return-type "GType")
)

(define-function gtk_color_button_new
  (c-name "gtk_color_button_new")
  (is-constructor-of "GtkColorButton")
  (return-type "GtkWidget*")
)

(define-function gtk_color_button_new_with_rgba
  (c-name "gtk_color_button_new_with_rgba")
  (return-type "GtkWidget*")
  (parameters
    '("const-GdkRGBA*" "rgba")
  )
)

(define-method set_title
  (of-object "GtkColorButton")
  (c-name "gtk_color_button_set_title")
  (return-type "none")
  (parameters
    '("const-char*" "title")
  )
)

(define-method get_title
  (of-object "GtkColorButton")
  (c-name "gtk_color_button_get_title")
  (return-type "const-char*")
)

(define-method get_modal
  (of-object "GtkColorButton")
  (c-name "gtk_color_button_get_modal")
  (return-type "gboolean")
)

(define-method set_modal
  (of-object "GtkColorButton")
  (c-name "gtk_color_button_set_modal")
  (return-type "none")
  (parameters
    '("gboolean" "modal")
  )
)



;; From gtkcolorchooserdialog.h

(define-function gtk_color_chooser_dialog_get_type
  (c-name "gtk_color_chooser_dialog_get_type")
  (return-type "GType")
)

(define-function gtk_color_chooser_dialog_new
  (c-name "gtk_color_chooser_dialog_new")
  (is-constructor-of "GtkColorChooserDialog")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "title")
    '("GtkWindow*" "parent")
  )
)



;; From gtkcolorchooser.h

(define-function gtk_color_chooser_get_type
  (c-name "gtk_color_chooser_get_type")
  (return-type "GType")
)

(define-method get_rgba
  (of-object "GtkColorChooser")
  (c-name "gtk_color_chooser_get_rgba")
  (return-type "none")
  (parameters
    '("GdkRGBA*" "color")
  )
)

(define-method set_rgba
  (of-object "GtkColorChooser")
  (c-name "gtk_color_chooser_set_rgba")
  (return-type "none")
  (parameters
    '("const-GdkRGBA*" "color")
  )
)

(define-method get_use_alpha
  (of-object "GtkColorChooser")
  (c-name "gtk_color_chooser_get_use_alpha")
  (return-type "gboolean")
)

(define-method set_use_alpha
  (of-object "GtkColorChooser")
  (c-name "gtk_color_chooser_set_use_alpha")
  (return-type "none")
  (parameters
    '("gboolean" "use_alpha")
  )
)

(define-method add_palette
  (of-object "GtkColorChooser")
  (c-name "gtk_color_chooser_add_palette")
  (return-type "none")
  (parameters
    '("GtkOrientation" "orientation")
    '("int" "colors_per_line")
    '("int" "n_colors")
    '("GdkRGBA*" "colors")
  )
)



;; From gtkcolorchooserwidget.h

(define-function gtk_color_chooser_widget_get_type
  (c-name "gtk_color_chooser_widget_get_type")
  (return-type "GType")
)

(define-function gtk_color_chooser_widget_new
  (c-name "gtk_color_chooser_widget_new")
  (is-constructor-of "GtkColorChooserWidget")
  (return-type "GtkWidget*")
)



;; From gtkcolorutils.h

(define-function gtk_hsv_to_rgb
  (c-name "gtk_hsv_to_rgb")
  (return-type "none")
  (parameters
    '("float" "h")
    '("float" "s")
    '("float" "v")
    '("float*" "r")
    '("float*" "g")
    '("float*" "b")
  )
)

(define-function gtk_rgb_to_hsv
  (c-name "gtk_rgb_to_hsv")
  (return-type "none")
  (parameters
    '("float" "r")
    '("float" "g")
    '("float" "b")
    '("float*" "h")
    '("float*" "s")
    '("float*" "v")
  )
)



;; From gtkcolumnviewcolumn.h

(define-function gtk_column_view_column_get_type
  (c-name "gtk_column_view_column_get_type")
  (return-type "GType")
)

(define-function gtk_column_view_column_new
  (c-name "gtk_column_view_column_new")
  (is-constructor-of "GtkColumnViewColumn")
  (return-type "GtkColumnViewColumn*")
  (parameters
    '("const-char*" "title")
    '("GtkListItemFactory*" "factory")
  )
)

(define-method get_column_view
  (of-object "GtkColumnViewColumn")
  (c-name "gtk_column_view_column_get_column_view")
  (return-type "GtkColumnView*")
)

(define-method set_factory
  (of-object "GtkColumnViewColumn")
  (c-name "gtk_column_view_column_set_factory")
  (return-type "none")
  (parameters
    '("GtkListItemFactory*" "factory")
  )
)

(define-method get_factory
  (of-object "GtkColumnViewColumn")
  (c-name "gtk_column_view_column_get_factory")
  (return-type "GtkListItemFactory*")
)

(define-method set_title
  (of-object "GtkColumnViewColumn")
  (c-name "gtk_column_view_column_set_title")
  (return-type "none")
  (parameters
    '("const-char*" "title")
  )
)

(define-method get_title
  (of-object "GtkColumnViewColumn")
  (c-name "gtk_column_view_column_get_title")
  (return-type "const-char*")
)

(define-method set_sorter
  (of-object "GtkColumnViewColumn")
  (c-name "gtk_column_view_column_set_sorter")
  (return-type "none")
  (parameters
    '("GtkSorter*" "sorter")
  )
)

(define-method get_sorter
  (of-object "GtkColumnViewColumn")
  (c-name "gtk_column_view_column_get_sorter")
  (return-type "GtkSorter*")
)

(define-method set_visible
  (of-object "GtkColumnViewColumn")
  (c-name "gtk_column_view_column_set_visible")
  (return-type "none")
  (parameters
    '("gboolean" "visible")
  )
)

(define-method get_visible
  (of-object "GtkColumnViewColumn")
  (c-name "gtk_column_view_column_get_visible")
  (return-type "gboolean")
)

(define-method set_header_menu
  (of-object "GtkColumnViewColumn")
  (c-name "gtk_column_view_column_set_header_menu")
  (return-type "none")
  (parameters
    '("GMenuModel*" "menu")
  )
)

(define-method get_header_menu
  (of-object "GtkColumnViewColumn")
  (c-name "gtk_column_view_column_get_header_menu")
  (return-type "GMenuModel*")
)

(define-method set_fixed_width
  (of-object "GtkColumnViewColumn")
  (c-name "gtk_column_view_column_set_fixed_width")
  (return-type "none")
  (parameters
    '("int" "fixed_width")
  )
)

(define-method get_fixed_width
  (of-object "GtkColumnViewColumn")
  (c-name "gtk_column_view_column_get_fixed_width")
  (return-type "int")
)

(define-method set_resizable
  (of-object "GtkColumnViewColumn")
  (c-name "gtk_column_view_column_set_resizable")
  (return-type "none")
  (parameters
    '("gboolean" "resizable")
  )
)

(define-method get_resizable
  (of-object "GtkColumnViewColumn")
  (c-name "gtk_column_view_column_get_resizable")
  (return-type "gboolean")
)

(define-method set_expand
  (of-object "GtkColumnViewColumn")
  (c-name "gtk_column_view_column_set_expand")
  (return-type "none")
  (parameters
    '("gboolean" "expand")
  )
)

(define-method get_expand
  (of-object "GtkColumnViewColumn")
  (c-name "gtk_column_view_column_get_expand")
  (return-type "gboolean")
)



;; From gtkcolumnview.h

(define-function gtk_column_view_get_type
  (c-name "gtk_column_view_get_type")
  (return-type "GType")
)

(define-function gtk_column_view_new
  (c-name "gtk_column_view_new")
  (is-constructor-of "GtkColumnView")
  (return-type "GtkWidget*")
  (parameters
    '("GtkSelectionModel*" "model")
  )
)

(define-method get_columns
  (of-object "GtkColumnView")
  (c-name "gtk_column_view_get_columns")
  (return-type "GListModel*")
)

(define-method append_column
  (of-object "GtkColumnView")
  (c-name "gtk_column_view_append_column")
  (return-type "none")
  (parameters
    '("GtkColumnViewColumn*" "column")
  )
)

(define-method remove_column
  (of-object "GtkColumnView")
  (c-name "gtk_column_view_remove_column")
  (return-type "none")
  (parameters
    '("GtkColumnViewColumn*" "column")
  )
)

(define-method insert_column
  (of-object "GtkColumnView")
  (c-name "gtk_column_view_insert_column")
  (return-type "none")
  (parameters
    '("guint" "position")
    '("GtkColumnViewColumn*" "column")
  )
)

(define-method get_model
  (of-object "GtkColumnView")
  (c-name "gtk_column_view_get_model")
  (return-type "GtkSelectionModel*")
)

(define-method set_model
  (of-object "GtkColumnView")
  (c-name "gtk_column_view_set_model")
  (return-type "none")
  (parameters
    '("GtkSelectionModel*" "model")
  )
)

(define-method get_show_row_separators
  (of-object "GtkColumnView")
  (c-name "gtk_column_view_get_show_row_separators")
  (return-type "gboolean")
)

(define-method set_show_row_separators
  (of-object "GtkColumnView")
  (c-name "gtk_column_view_set_show_row_separators")
  (return-type "none")
  (parameters
    '("gboolean" "show_row_separators")
  )
)

(define-method get_show_column_separators
  (of-object "GtkColumnView")
  (c-name "gtk_column_view_get_show_column_separators")
  (return-type "gboolean")
)

(define-method set_show_column_separators
  (of-object "GtkColumnView")
  (c-name "gtk_column_view_set_show_column_separators")
  (return-type "none")
  (parameters
    '("gboolean" "show_column_separators")
  )
)

(define-method get_sorter
  (of-object "GtkColumnView")
  (c-name "gtk_column_view_get_sorter")
  (return-type "GtkSorter*")
)

(define-method sort_by_column
  (of-object "GtkColumnView")
  (c-name "gtk_column_view_sort_by_column")
  (return-type "none")
  (parameters
    '("GtkColumnViewColumn*" "column")
    '("GtkSortType" "direction")
  )
)

(define-method set_single_click_activate
  (of-object "GtkColumnView")
  (c-name "gtk_column_view_set_single_click_activate")
  (return-type "none")
  (parameters
    '("gboolean" "single_click_activate")
  )
)

(define-method get_single_click_activate
  (of-object "GtkColumnView")
  (c-name "gtk_column_view_get_single_click_activate")
  (return-type "gboolean")
)

(define-method set_reorderable
  (of-object "GtkColumnView")
  (c-name "gtk_column_view_set_reorderable")
  (return-type "none")
  (parameters
    '("gboolean" "reorderable")
  )
)

(define-method get_reorderable
  (of-object "GtkColumnView")
  (c-name "gtk_column_view_get_reorderable")
  (return-type "gboolean")
)

(define-method set_enable_rubberband
  (of-object "GtkColumnView")
  (c-name "gtk_column_view_set_enable_rubberband")
  (return-type "none")
  (parameters
    '("gboolean" "enable_rubberband")
  )
)

(define-method get_enable_rubberband
  (of-object "GtkColumnView")
  (c-name "gtk_column_view_get_enable_rubberband")
  (return-type "gboolean")
)



;; From gtkcombobox.h

(define-function gtk_combo_box_get_type
  (c-name "gtk_combo_box_get_type")
  (return-type "GType")
)

(define-function gtk_combo_box_new
  (c-name "gtk_combo_box_new")
  (is-constructor-of "GtkComboBox")
  (return-type "GtkWidget*")
)

(define-function gtk_combo_box_new_with_entry
  (c-name "gtk_combo_box_new_with_entry")
  (return-type "GtkWidget*")
)

(define-function gtk_combo_box_new_with_model
  (c-name "gtk_combo_box_new_with_model")
  (return-type "GtkWidget*")
  (parameters
    '("GtkTreeModel*" "model")
  )
)

(define-function gtk_combo_box_new_with_model_and_entry
  (c-name "gtk_combo_box_new_with_model_and_entry")
  (return-type "GtkWidget*")
  (parameters
    '("GtkTreeModel*" "model")
  )
)

(define-method get_active
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_get_active")
  (return-type "int")
)

(define-method set_active
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_set_active")
  (return-type "none")
  (parameters
    '("int" "index_")
  )
)

(define-method get_active_iter
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_get_active_iter")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method set_active_iter
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_set_active_iter")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method set_model
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_set_model")
  (return-type "none")
  (parameters
    '("GtkTreeModel*" "model")
  )
)

(define-method get_model
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_get_model")
  (return-type "GtkTreeModel*")
)

(define-method get_row_separator_func
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_get_row_separator_func")
  (return-type "GtkTreeViewRowSeparatorFunc")
)

(define-method set_row_separator_func
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_set_row_separator_func")
  (return-type "none")
  (parameters
    '("GtkTreeViewRowSeparatorFunc" "func")
    '("gpointer" "data")
    '("GDestroyNotify" "destroy")
  )
)

(define-method set_button_sensitivity
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_set_button_sensitivity")
  (return-type "none")
  (parameters
    '("GtkSensitivityType" "sensitivity")
  )
)

(define-method get_button_sensitivity
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_get_button_sensitivity")
  (return-type "GtkSensitivityType")
)

(define-method get_has_entry
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_get_has_entry")
  (return-type "gboolean")
)

(define-method set_entry_text_column
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_set_entry_text_column")
  (return-type "none")
  (parameters
    '("int" "text_column")
  )
)

(define-method get_entry_text_column
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_get_entry_text_column")
  (return-type "int")
)

(define-method set_popup_fixed_width
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_set_popup_fixed_width")
  (return-type "none")
  (parameters
    '("gboolean" "fixed")
  )
)

(define-method get_popup_fixed_width
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_get_popup_fixed_width")
  (return-type "gboolean")
)

(define-method popup
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_popup")
  (return-type "none")
)

(define-method popup_for_device
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_popup_for_device")
  (return-type "none")
  (parameters
    '("GdkDevice*" "device")
  )
)

(define-method popdown
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_popdown")
  (return-type "none")
)

(define-method get_id_column
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_get_id_column")
  (return-type "int")
)

(define-method set_id_column
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_set_id_column")
  (return-type "none")
  (parameters
    '("int" "id_column")
  )
)

(define-method get_active_id
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_get_active_id")
  (return-type "const-char*")
)

(define-method set_active_id
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_set_active_id")
  (return-type "gboolean")
  (parameters
    '("const-char*" "active_id")
  )
)

(define-method set_child
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_set_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_child
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_get_child")
  (return-type "GtkWidget*")
)



;; From gtkcomboboxtext.h

(define-function gtk_combo_box_text_get_type
  (c-name "gtk_combo_box_text_get_type")
  (return-type "GType")
)

(define-function gtk_combo_box_text_new
  (c-name "gtk_combo_box_text_new")
  (is-constructor-of "GtkComboBoxText")
  (return-type "GtkWidget*")
)

(define-function gtk_combo_box_text_new_with_entry
  (c-name "gtk_combo_box_text_new_with_entry")
  (return-type "GtkWidget*")
)

(define-method append_text
  (of-object "GtkComboBoxText")
  (c-name "gtk_combo_box_text_append_text")
  (return-type "none")
  (parameters
    '("const-char*" "text")
  )
)

(define-method insert_text
  (of-object "GtkComboBoxText")
  (c-name "gtk_combo_box_text_insert_text")
  (return-type "none")
  (parameters
    '("int" "position")
    '("const-char*" "text")
  )
)

(define-method prepend_text
  (of-object "GtkComboBoxText")
  (c-name "gtk_combo_box_text_prepend_text")
  (return-type "none")
  (parameters
    '("const-char*" "text")
  )
)

(define-method remove
  (of-object "GtkComboBoxText")
  (c-name "gtk_combo_box_text_remove")
  (return-type "none")
  (parameters
    '("int" "position")
  )
)

(define-method remove_all
  (of-object "GtkComboBoxText")
  (c-name "gtk_combo_box_text_remove_all")
  (return-type "none")
)

(define-method get_active_text
  (of-object "GtkComboBoxText")
  (c-name "gtk_combo_box_text_get_active_text")
  (return-type "char*")
)

(define-method insert
  (of-object "GtkComboBoxText")
  (c-name "gtk_combo_box_text_insert")
  (return-type "none")
  (parameters
    '("int" "position")
    '("const-char*" "id")
    '("const-char*" "text")
  )
)

(define-method append
  (of-object "GtkComboBoxText")
  (c-name "gtk_combo_box_text_append")
  (return-type "none")
  (parameters
    '("const-char*" "id")
    '("const-char*" "text")
  )
)

(define-method prepend
  (of-object "GtkComboBoxText")
  (c-name "gtk_combo_box_text_prepend")
  (return-type "none")
  (parameters
    '("const-char*" "id")
    '("const-char*" "text")
  )
)



;; From gtkcomposetable.h

(define-function gtk_compose_table_new_with_file
  (c-name "gtk_compose_table_new_with_file")
  (return-type "GtkComposeTable*")
  (parameters
    '("const-char*" "compose_file")
  )
)

(define-function gtk_compose_table_list_add_array
  (c-name "gtk_compose_table_list_add_array")
  (return-type "GSList*")
  (parameters
    '("GSList*" "compose_tables")
    '("const-guint16*" "data")
    '("int" "max_seq_len")
    '("int" "n_seqs")
  )
)

(define-function gtk_compose_table_list_add_file
  (c-name "gtk_compose_table_list_add_file")
  (return-type "GSList*")
  (parameters
    '("GSList*" "compose_tables")
    '("const-char*" "compose_file")
  )
)



;; From gtkconstraintguide.h

(define-function gtk_constraint_guide_new
  (c-name "gtk_constraint_guide_new")
  (is-constructor-of "GtkConstraintGuide")
  (return-type "GtkConstraintGuide*")
)

(define-method set_min_size
  (of-object "GtkConstraintGuide")
  (c-name "gtk_constraint_guide_set_min_size")
  (return-type "none")
  (parameters
    '("int" "width")
    '("int" "height")
  )
)

(define-method get_min_size
  (of-object "GtkConstraintGuide")
  (c-name "gtk_constraint_guide_get_min_size")
  (return-type "none")
  (parameters
    '("int*" "width")
    '("int*" "height")
  )
)

(define-method set_nat_size
  (of-object "GtkConstraintGuide")
  (c-name "gtk_constraint_guide_set_nat_size")
  (return-type "none")
  (parameters
    '("int" "width")
    '("int" "height")
  )
)

(define-method get_nat_size
  (of-object "GtkConstraintGuide")
  (c-name "gtk_constraint_guide_get_nat_size")
  (return-type "none")
  (parameters
    '("int*" "width")
    '("int*" "height")
  )
)

(define-method set_max_size
  (of-object "GtkConstraintGuide")
  (c-name "gtk_constraint_guide_set_max_size")
  (return-type "none")
  (parameters
    '("int" "width")
    '("int" "height")
  )
)

(define-method get_max_size
  (of-object "GtkConstraintGuide")
  (c-name "gtk_constraint_guide_get_max_size")
  (return-type "none")
  (parameters
    '("int*" "width")
    '("int*" "height")
  )
)

(define-method get_strength
  (of-object "GtkConstraintGuide")
  (c-name "gtk_constraint_guide_get_strength")
  (return-type "GtkConstraintStrength")
)

(define-method set_strength
  (of-object "GtkConstraintGuide")
  (c-name "gtk_constraint_guide_set_strength")
  (return-type "none")
  (parameters
    '("GtkConstraintStrength" "strength")
  )
)

(define-method set_name
  (of-object "GtkConstraintGuide")
  (c-name "gtk_constraint_guide_set_name")
  (return-type "none")
  (parameters
    '("const-char*" "name")
  )
)

(define-method get_name
  (of-object "GtkConstraintGuide")
  (c-name "gtk_constraint_guide_get_name")
  (return-type "const-char*")
)



;; From gtkconstraint.h

(define-function gtk_constraint_new
  (c-name "gtk_constraint_new")
  (is-constructor-of "GtkConstraint")
  (return-type "GtkConstraint*")
  (parameters
    '("gpointer" "target")
    '("GtkConstraintAttribute" "target_attribute")
    '("GtkConstraintRelation" "relation")
    '("gpointer" "source")
    '("GtkConstraintAttribute" "source_attribute")
    '("double" "multiplier")
    '("double" "constant")
    '("int" "strength")
  )
)

(define-function gtk_constraint_new_constant
  (c-name "gtk_constraint_new_constant")
  (return-type "GtkConstraint*")
  (parameters
    '("gpointer" "target")
    '("GtkConstraintAttribute" "target_attribute")
    '("GtkConstraintRelation" "relation")
    '("double" "constant")
    '("int" "strength")
  )
)

(define-method get_target
  (of-object "GtkConstraint")
  (c-name "gtk_constraint_get_target")
  (return-type "GtkConstraintTarget*")
)

(define-method get_target_attribute
  (of-object "GtkConstraint")
  (c-name "gtk_constraint_get_target_attribute")
  (return-type "GtkConstraintAttribute")
)

(define-method get_source
  (of-object "GtkConstraint")
  (c-name "gtk_constraint_get_source")
  (return-type "GtkConstraintTarget*")
)

(define-method get_source_attribute
  (of-object "GtkConstraint")
  (c-name "gtk_constraint_get_source_attribute")
  (return-type "GtkConstraintAttribute")
)

(define-method get_relation
  (of-object "GtkConstraint")
  (c-name "gtk_constraint_get_relation")
  (return-type "GtkConstraintRelation")
)

(define-method get_multiplier
  (of-object "GtkConstraint")
  (c-name "gtk_constraint_get_multiplier")
  (return-type "double")
)

(define-method get_constant
  (of-object "GtkConstraint")
  (c-name "gtk_constraint_get_constant")
  (return-type "double")
)

(define-method get_strength
  (of-object "GtkConstraint")
  (c-name "gtk_constraint_get_strength")
  (return-type "int")
)

(define-method is_required
  (of-object "GtkConstraint")
  (c-name "gtk_constraint_is_required")
  (return-type "gboolean")
)

(define-method is_attached
  (of-object "GtkConstraint")
  (c-name "gtk_constraint_is_attached")
  (return-type "gboolean")
)

(define-method is_constant
  (of-object "GtkConstraint")
  (c-name "gtk_constraint_is_constant")
  (return-type "gboolean")
)



;; From gtkconstraintlayout.h

(define-function gtk_constraint_vfl_parser_error_quark
  (c-name "gtk_constraint_vfl_parser_error_quark")
  (return-type "GQuark")
)

(define-function gtk_constraint_layout_new
  (c-name "gtk_constraint_layout_new")
  (is-constructor-of "GtkConstraintLayout")
  (return-type "GtkLayoutManager*")
)

(define-method add_constraint
  (of-object "GtkConstraintLayout")
  (c-name "gtk_constraint_layout_add_constraint")
  (return-type "none")
  (parameters
    '("GtkConstraint*" "constraint")
  )
)

(define-method remove_constraint
  (of-object "GtkConstraintLayout")
  (c-name "gtk_constraint_layout_remove_constraint")
  (return-type "none")
  (parameters
    '("GtkConstraint*" "constraint")
  )
)

(define-method add_guide
  (of-object "GtkConstraintLayout")
  (c-name "gtk_constraint_layout_add_guide")
  (return-type "none")
  (parameters
    '("GtkConstraintGuide*" "guide")
  )
)

(define-method remove_guide
  (of-object "GtkConstraintLayout")
  (c-name "gtk_constraint_layout_remove_guide")
  (return-type "none")
  (parameters
    '("GtkConstraintGuide*" "guide")
  )
)

(define-method remove_all_constraints
  (of-object "GtkConstraintLayout")
  (c-name "gtk_constraint_layout_remove_all_constraints")
  (return-type "none")
)

(define-method add_constraints_from_description
  (of-object "GtkConstraintLayout")
  (c-name "gtk_constraint_layout_add_constraints_from_description")
  (return-type "GList*")
  (parameters
    '("const-char*-const[]" "lines")
    '("gsize" "n_lines")
    '("int" "hspacing")
    '("int" "vspacing")
    '("GError**" "error")
    '("const-char*" "first_view")
  )
  (varargs #t)
)

(define-method add_constraints_from_descriptionv
  (of-object "GtkConstraintLayout")
  (c-name "gtk_constraint_layout_add_constraints_from_descriptionv")
  (return-type "GList*")
  (parameters
    '("const-char*-const[]" "lines")
    '("gsize" "n_lines")
    '("int" "hspacing")
    '("int" "vspacing")
    '("GHashTable*" "views")
    '("GError**" "error")
  )
)

(define-method observe_constraints
  (of-object "GtkConstraintLayout")
  (c-name "gtk_constraint_layout_observe_constraints")
  (return-type "GListModel*")
)

(define-method observe_guides
  (of-object "GtkConstraintLayout")
  (c-name "gtk_constraint_layout_observe_guides")
  (return-type "GListModel*")
)



;; From gtkcssprovider.h

(define-function gtk_css_provider_get_type
  (c-name "gtk_css_provider_get_type")
  (return-type "GType")
)

(define-function gtk_css_provider_new
  (c-name "gtk_css_provider_new")
  (is-constructor-of "GtkCssProvider")
  (return-type "GtkCssProvider*")
)

(define-method to_string
  (of-object "GtkCssProvider")
  (c-name "gtk_css_provider_to_string")
  (return-type "char*")
)

(define-method load_from_data
  (of-object "GtkCssProvider")
  (c-name "gtk_css_provider_load_from_data")
  (return-type "none")
  (parameters
    '("const-char*" "data")
    '("gssize" "length")
  )
)

(define-method load_from_file
  (of-object "GtkCssProvider")
  (c-name "gtk_css_provider_load_from_file")
  (return-type "none")
  (parameters
    '("GFile*" "file")
  )
)

(define-method load_from_path
  (of-object "GtkCssProvider")
  (c-name "gtk_css_provider_load_from_path")
  (return-type "none")
  (parameters
    '("const-char*" "path")
  )
)

(define-method load_from_resource
  (of-object "GtkCssProvider")
  (c-name "gtk_css_provider_load_from_resource")
  (return-type "none")
  (parameters
    '("const-char*" "resource_path")
  )
)

(define-method load_named
  (of-object "GtkCssProvider")
  (c-name "gtk_css_provider_load_named")
  (return-type "none")
  (parameters
    '("const-char*" "name")
    '("const-char*" "variant")
  )
)



;; From gtkcustomfilter.h

(define-function gtk_custom_filter_new
  (c-name "gtk_custom_filter_new")
  (is-constructor-of "GtkCustomFilter")
  (return-type "GtkCustomFilter*")
  (parameters
    '("GtkCustomFilterFunc" "match_func")
    '("gpointer" "user_data")
    '("GDestroyNotify" "user_destroy")
  )
)

(define-method set_filter_func
  (of-object "GtkCustomFilter")
  (c-name "gtk_custom_filter_set_filter_func")
  (return-type "none")
  (parameters
    '("GtkCustomFilterFunc" "match_func")
    '("gpointer" "user_data")
    '("GDestroyNotify" "user_destroy")
  )
)



;; From gtkcustomlayout.h

(define-function gtk_custom_layout_new
  (c-name "gtk_custom_layout_new")
  (is-constructor-of "GtkCustomLayout")
  (return-type "GtkLayoutManager*")
  (parameters
    '("GtkCustomRequestModeFunc" "request_mode")
    '("GtkCustomMeasureFunc" "measure")
    '("GtkCustomAllocateFunc" "allocate")
  )
)



;; From gtkcustompaperunixdialog.h

(define-function gtk_custom_paper_unix_dialog_get_type
  (c-name "gtk_custom_paper_unix_dialog_get_type")
  (return-type "GType")
)

(define-function gtk_print_load_custom_papers
  (c-name "gtk_print_load_custom_papers")
  (return-type "none")
  (parameters
    '("GListStore*" "store")
  )
)



;; From gtkcustomsorter.h

(define-function gtk_custom_sorter_new
  (c-name "gtk_custom_sorter_new")
  (is-constructor-of "GtkCustomSorter")
  (return-type "GtkCustomSorter*")
  (parameters
    '("GCompareDataFunc" "sort_func")
    '("gpointer" "user_data")
    '("GDestroyNotify" "user_destroy")
  )
)

(define-method set_sort_func
  (of-object "GtkCustomSorter")
  (c-name "gtk_custom_sorter_set_sort_func")
  (return-type "none")
  (parameters
    '("GCompareDataFunc" "sort_func")
    '("gpointer" "user_data")
    '("GDestroyNotify" "user_destroy")
  )
)



;; From gtkdebug.h

(define-function gtk_get_debug_flags
  (c-name "gtk_get_debug_flags")
  (return-type "GtkDebugFlags")
)

(define-function gtk_set_debug_flags
  (c-name "gtk_set_debug_flags")
  (return-type "none")
  (parameters
    '("GtkDebugFlags" "flags")
  )
)



;; From gtkdialog.h

(define-function gtk_dialog_get_type
  (c-name "gtk_dialog_get_type")
  (return-type "GType")
)

(define-function gtk_dialog_new
  (c-name "gtk_dialog_new")
  (is-constructor-of "GtkDialog")
  (return-type "GtkWidget*")
)

(define-function gtk_dialog_new_with_buttons
  (c-name "gtk_dialog_new_with_buttons")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "title")
    '("GtkWindow*" "parent")
    '("GtkDialogFlags" "flags")
    '("const-char*" "first_button_text")
  )
  (varargs #t)
)

(define-method add_action_widget
  (of-object "GtkDialog")
  (c-name "gtk_dialog_add_action_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("int" "response_id")
  )
)

(define-method add_button
  (of-object "GtkDialog")
  (c-name "gtk_dialog_add_button")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "button_text")
    '("int" "response_id")
  )
)

(define-method add_buttons
  (of-object "GtkDialog")
  (c-name "gtk_dialog_add_buttons")
  (return-type "none")
  (parameters
    '("const-char*" "first_button_text")
  )
  (varargs #t)
)

(define-method set_response_sensitive
  (of-object "GtkDialog")
  (c-name "gtk_dialog_set_response_sensitive")
  (return-type "none")
  (parameters
    '("int" "response_id")
    '("gboolean" "setting")
  )
)

(define-method set_default_response
  (of-object "GtkDialog")
  (c-name "gtk_dialog_set_default_response")
  (return-type "none")
  (parameters
    '("int" "response_id")
  )
)

(define-method get_widget_for_response
  (of-object "GtkDialog")
  (c-name "gtk_dialog_get_widget_for_response")
  (return-type "GtkWidget*")
  (parameters
    '("int" "response_id")
  )
)

(define-method get_response_for_widget
  (of-object "GtkDialog")
  (c-name "gtk_dialog_get_response_for_widget")
  (return-type "int")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method response
  (of-object "GtkDialog")
  (c-name "gtk_dialog_response")
  (return-type "none")
  (parameters
    '("int" "response_id")
  )
)

(define-method get_content_area
  (of-object "GtkDialog")
  (c-name "gtk_dialog_get_content_area")
  (return-type "GtkWidget*")
)

(define-method get_header_bar
  (of-object "GtkDialog")
  (c-name "gtk_dialog_get_header_bar")
  (return-type "GtkWidget*")
)



;; From gtkdirectorylist.h

(define-function gtk_directory_list_new
  (c-name "gtk_directory_list_new")
  (is-constructor-of "GtkDirectoryList")
  (return-type "GtkDirectoryList*")
  (parameters
    '("const-char*" "attributes")
    '("GFile*" "file")
  )
)

(define-method set_file
  (of-object "GtkDirectoryList")
  (c-name "gtk_directory_list_set_file")
  (return-type "none")
  (parameters
    '("GFile*" "file")
  )
)

(define-method get_file
  (of-object "GtkDirectoryList")
  (c-name "gtk_directory_list_get_file")
  (return-type "GFile*")
)

(define-method set_attributes
  (of-object "GtkDirectoryList")
  (c-name "gtk_directory_list_set_attributes")
  (return-type "none")
  (parameters
    '("const-char*" "attributes")
  )
)

(define-method get_attributes
  (of-object "GtkDirectoryList")
  (c-name "gtk_directory_list_get_attributes")
  (return-type "const-char*")
)

(define-method set_io_priority
  (of-object "GtkDirectoryList")
  (c-name "gtk_directory_list_set_io_priority")
  (return-type "none")
  (parameters
    '("int" "io_priority")
  )
)

(define-method get_io_priority
  (of-object "GtkDirectoryList")
  (c-name "gtk_directory_list_get_io_priority")
  (return-type "int")
)

(define-method is_loading
  (of-object "GtkDirectoryList")
  (c-name "gtk_directory_list_is_loading")
  (return-type "gboolean")
)

(define-method get_error
  (of-object "GtkDirectoryList")
  (c-name "gtk_directory_list_get_error")
  (return-type "const-GError*")
)

(define-method set_monitored
  (of-object "GtkDirectoryList")
  (c-name "gtk_directory_list_set_monitored")
  (return-type "none")
  (parameters
    '("gboolean" "monitored")
  )
)

(define-method get_monitored
  (of-object "GtkDirectoryList")
  (c-name "gtk_directory_list_get_monitored")
  (return-type "gboolean")
)



;; From gtkdragicon.h

(define-function gtk_drag_icon_get_for_drag
  (c-name "gtk_drag_icon_get_for_drag")
  (return-type "GtkWidget*")
  (parameters
    '("GdkDrag*" "drag")
  )
)

(define-method set_child
  (of-object "GtkDragIcon")
  (c-name "gtk_drag_icon_set_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_child
  (of-object "GtkDragIcon")
  (c-name "gtk_drag_icon_get_child")
  (return-type "GtkWidget*")
)

(define-function gtk_drag_icon_set_from_paintable
  (c-name "gtk_drag_icon_set_from_paintable")
  (return-type "none")
  (parameters
    '("GdkDrag*" "drag")
    '("GdkPaintable*" "paintable")
    '("int" "hot_x")
    '("int" "hot_y")
  )
)

(define-function gtk_drag_icon_create_widget_for_value
  (c-name "gtk_drag_icon_create_widget_for_value")
  (return-type "GtkWidget*")
  (parameters
    '("const-GValue*" "value")
  )
)



;; From gtkdragsource.h

(define-function gtk_drag_source_get_type
  (c-name "gtk_drag_source_get_type")
  (return-type "GType")
)

(define-function gtk_drag_source_new
  (c-name "gtk_drag_source_new")
  (is-constructor-of "GtkDragSource")
  (return-type "GtkDragSource*")
)

(define-method set_content
  (of-object "GtkDragSource")
  (c-name "gtk_drag_source_set_content")
  (return-type "none")
  (parameters
    '("GdkContentProvider*" "content")
  )
)

(define-method get_content
  (of-object "GtkDragSource")
  (c-name "gtk_drag_source_get_content")
  (return-type "GdkContentProvider*")
)

(define-method set_actions
  (of-object "GtkDragSource")
  (c-name "gtk_drag_source_set_actions")
  (return-type "none")
  (parameters
    '("GdkDragAction" "actions")
  )
)

(define-method get_actions
  (of-object "GtkDragSource")
  (c-name "gtk_drag_source_get_actions")
  (return-type "GdkDragAction")
)

(define-method set_icon
  (of-object "GtkDragSource")
  (c-name "gtk_drag_source_set_icon")
  (return-type "none")
  (parameters
    '("GdkPaintable*" "paintable")
    '("int" "hot_x")
    '("int" "hot_y")
  )
)

(define-method drag_cancel
  (of-object "GtkDragSource")
  (c-name "gtk_drag_source_drag_cancel")
  (return-type "none")
)

(define-method get_drag
  (of-object "GtkDragSource")
  (c-name "gtk_drag_source_get_drag")
  (return-type "GdkDrag*")
)

(define-function gtk_drag_check_threshold
  (c-name "gtk_drag_check_threshold")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "widget")
    '("int" "start_x")
    '("int" "start_y")
    '("int" "current_x")
    '("int" "current_y")
  )
)



;; From gtkdrawingarea.h

(define-function gtk_drawing_area_get_type
  (c-name "gtk_drawing_area_get_type")
  (return-type "GType")
)

(define-function gtk_drawing_area_new
  (c-name "gtk_drawing_area_new")
  (is-constructor-of "GtkDrawingArea")
  (return-type "GtkWidget*")
)

(define-method set_content_width
  (of-object "GtkDrawingArea")
  (c-name "gtk_drawing_area_set_content_width")
  (return-type "none")
  (parameters
    '("int" "width")
  )
)

(define-method get_content_width
  (of-object "GtkDrawingArea")
  (c-name "gtk_drawing_area_get_content_width")
  (return-type "int")
)

(define-method set_content_height
  (of-object "GtkDrawingArea")
  (c-name "gtk_drawing_area_set_content_height")
  (return-type "none")
  (parameters
    '("int" "height")
  )
)

(define-method get_content_height
  (of-object "GtkDrawingArea")
  (c-name "gtk_drawing_area_get_content_height")
  (return-type "int")
)

(define-method set_draw_func
  (of-object "GtkDrawingArea")
  (c-name "gtk_drawing_area_set_draw_func")
  (return-type "none")
  (parameters
    '("GtkDrawingAreaDrawFunc" "draw_func")
    '("gpointer" "user_data")
    '("GDestroyNotify" "destroy")
  )
)



;; From gtkdropcontrollermotion.h

(define-function gtk_drop_controller_motion_get_type
  (c-name "gtk_drop_controller_motion_get_type")
  (return-type "GType")
)

(define-function gtk_drop_controller_motion_new
  (c-name "gtk_drop_controller_motion_new")
  (is-constructor-of "GtkDropControllerMotion")
  (return-type "GtkEventController*")
)

(define-method contains_pointer
  (of-object "GtkDropControllerMotion")
  (c-name "gtk_drop_controller_motion_contains_pointer")
  (return-type "gboolean")
)

(define-method get_drop
  (of-object "GtkDropControllerMotion")
  (c-name "gtk_drop_controller_motion_get_drop")
  (return-type "GdkDrop*")
)

(define-method is_pointer
  (of-object "GtkDropControllerMotion")
  (c-name "gtk_drop_controller_motion_is_pointer")
  (return-type "gboolean")
)



;; From gtkdropdown.h

(define-function gtk_drop_down_new
  (c-name "gtk_drop_down_new")
  (is-constructor-of "GtkDropDown")
  (return-type "GtkWidget*")
  (parameters
    '("GListModel*" "model")
    '("GtkExpression*" "expression")
  )
)

(define-function gtk_drop_down_new_from_strings
  (c-name "gtk_drop_down_new_from_strings")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*-const*" "strings")
  )
)

(define-method set_model
  (of-object "GtkDropDown")
  (c-name "gtk_drop_down_set_model")
  (return-type "none")
  (parameters
    '("GListModel*" "model")
  )
)

(define-method get_model
  (of-object "GtkDropDown")
  (c-name "gtk_drop_down_get_model")
  (return-type "GListModel*")
)

(define-method set_selected
  (of-object "GtkDropDown")
  (c-name "gtk_drop_down_set_selected")
  (return-type "none")
  (parameters
    '("guint" "position")
  )
)

(define-method get_selected
  (of-object "GtkDropDown")
  (c-name "gtk_drop_down_get_selected")
  (return-type "guint")
)

(define-method get_selected_item
  (of-object "GtkDropDown")
  (c-name "gtk_drop_down_get_selected_item")
  (return-type "gpointer")
)

(define-method set_factory
  (of-object "GtkDropDown")
  (c-name "gtk_drop_down_set_factory")
  (return-type "none")
  (parameters
    '("GtkListItemFactory*" "factory")
  )
)

(define-method get_factory
  (of-object "GtkDropDown")
  (c-name "gtk_drop_down_get_factory")
  (return-type "GtkListItemFactory*")
)

(define-method set_list_factory
  (of-object "GtkDropDown")
  (c-name "gtk_drop_down_set_list_factory")
  (return-type "none")
  (parameters
    '("GtkListItemFactory*" "factory")
  )
)

(define-method get_list_factory
  (of-object "GtkDropDown")
  (c-name "gtk_drop_down_get_list_factory")
  (return-type "GtkListItemFactory*")
)

(define-method set_expression
  (of-object "GtkDropDown")
  (c-name "gtk_drop_down_set_expression")
  (return-type "none")
  (parameters
    '("GtkExpression*" "expression")
  )
)

(define-method get_expression
  (of-object "GtkDropDown")
  (c-name "gtk_drop_down_get_expression")
  (return-type "GtkExpression*")
)

(define-method set_enable_search
  (of-object "GtkDropDown")
  (c-name "gtk_drop_down_set_enable_search")
  (return-type "none")
  (parameters
    '("gboolean" "enable_search")
  )
)

(define-method get_enable_search
  (of-object "GtkDropDown")
  (c-name "gtk_drop_down_get_enable_search")
  (return-type "gboolean")
)



;; From gtkdroptargetasync.h

(define-function gtk_drop_target_async_get_type
  (c-name "gtk_drop_target_async_get_type")
  (return-type "GType")
)

(define-function gtk_drop_target_async_new
  (c-name "gtk_drop_target_async_new")
  (is-constructor-of "GtkDropTargetAsync")
  (return-type "GtkDropTargetAsync*")
  (parameters
    '("GdkContentFormats*" "formats")
    '("GdkDragAction" "actions")
  )
)

(define-method set_formats
  (of-object "GtkDropTargetAsync")
  (c-name "gtk_drop_target_async_set_formats")
  (return-type "none")
  (parameters
    '("GdkContentFormats*" "formats")
  )
)

(define-method get_formats
  (of-object "GtkDropTargetAsync")
  (c-name "gtk_drop_target_async_get_formats")
  (return-type "GdkContentFormats*")
)

(define-method set_actions
  (of-object "GtkDropTargetAsync")
  (c-name "gtk_drop_target_async_set_actions")
  (return-type "none")
  (parameters
    '("GdkDragAction" "actions")
  )
)

(define-method get_actions
  (of-object "GtkDropTargetAsync")
  (c-name "gtk_drop_target_async_get_actions")
  (return-type "GdkDragAction")
)

(define-method reject_drop
  (of-object "GtkDropTargetAsync")
  (c-name "gtk_drop_target_async_reject_drop")
  (return-type "none")
  (parameters
    '("GdkDrop*" "drop")
  )
)



;; From gtkdroptarget.h

(define-function gtk_drop_target_get_type
  (c-name "gtk_drop_target_get_type")
  (return-type "GType")
)

(define-function gtk_drop_target_new
  (c-name "gtk_drop_target_new")
  (is-constructor-of "GtkDropTarget")
  (return-type "GtkDropTarget*")
  (parameters
    '("GType" "type")
    '("GdkDragAction" "actions")
  )
)

(define-method set_gtypes
  (of-object "GtkDropTarget")
  (c-name "gtk_drop_target_set_gtypes")
  (return-type "none")
  (parameters
    '("GType*" "types")
    '("gsize" "n_types")
  )
)

(define-method get_gtypes
  (of-object "GtkDropTarget")
  (c-name "gtk_drop_target_get_gtypes")
  (return-type "const-GType*")
  (parameters
    '("gsize*" "n_types")
  )
)

(define-method get_formats
  (of-object "GtkDropTarget")
  (c-name "gtk_drop_target_get_formats")
  (return-type "GdkContentFormats*")
)

(define-method set_actions
  (of-object "GtkDropTarget")
  (c-name "gtk_drop_target_set_actions")
  (return-type "none")
  (parameters
    '("GdkDragAction" "actions")
  )
)

(define-method get_actions
  (of-object "GtkDropTarget")
  (c-name "gtk_drop_target_get_actions")
  (return-type "GdkDragAction")
)

(define-method set_preload
  (of-object "GtkDropTarget")
  (c-name "gtk_drop_target_set_preload")
  (return-type "none")
  (parameters
    '("gboolean" "preload")
  )
)

(define-method get_preload
  (of-object "GtkDropTarget")
  (c-name "gtk_drop_target_get_preload")
  (return-type "gboolean")
)

(define-method get_drop
  (of-object "GtkDropTarget")
  (c-name "gtk_drop_target_get_drop")
  (return-type "GdkDrop*")
)

(define-method get_value
  (of-object "GtkDropTarget")
  (c-name "gtk_drop_target_get_value")
  (return-type "const-GValue*")
)

(define-method reject
  (of-object "GtkDropTarget")
  (c-name "gtk_drop_target_reject")
  (return-type "none")
)



;; From gtkeditable.h

(define-function gtk_editable_get_type
  (c-name "gtk_editable_get_type")
  (return-type "GType")
)

(define-method get_text
  (of-object "GtkEditable")
  (c-name "gtk_editable_get_text")
  (return-type "const-char*")
)

(define-method set_text
  (of-object "GtkEditable")
  (c-name "gtk_editable_set_text")
  (return-type "none")
  (parameters
    '("const-char*" "text")
  )
)

(define-method get_chars
  (of-object "GtkEditable")
  (c-name "gtk_editable_get_chars")
  (return-type "char*")
  (parameters
    '("int" "start_pos")
    '("int" "end_pos")
  )
)

(define-method insert_text
  (of-object "GtkEditable")
  (c-name "gtk_editable_insert_text")
  (return-type "none")
  (parameters
    '("const-char*" "text")
    '("int" "length")
    '("int*" "position")
  )
)

(define-method delete_text
  (of-object "GtkEditable")
  (c-name "gtk_editable_delete_text")
  (return-type "none")
  (parameters
    '("int" "start_pos")
    '("int" "end_pos")
  )
)

(define-method get_selection_bounds
  (of-object "GtkEditable")
  (c-name "gtk_editable_get_selection_bounds")
  (return-type "gboolean")
  (parameters
    '("int*" "start_pos")
    '("int*" "end_pos")
  )
)

(define-method delete_selection
  (of-object "GtkEditable")
  (c-name "gtk_editable_delete_selection")
  (return-type "none")
)

(define-method select_region
  (of-object "GtkEditable")
  (c-name "gtk_editable_select_region")
  (return-type "none")
  (parameters
    '("int" "start_pos")
    '("int" "end_pos")
  )
)

(define-method set_position
  (of-object "GtkEditable")
  (c-name "gtk_editable_set_position")
  (return-type "none")
  (parameters
    '("int" "position")
  )
)

(define-method get_position
  (of-object "GtkEditable")
  (c-name "gtk_editable_get_position")
  (return-type "int")
)

(define-method get_editable
  (of-object "GtkEditable")
  (c-name "gtk_editable_get_editable")
  (return-type "gboolean")
)

(define-method set_editable
  (of-object "GtkEditable")
  (c-name "gtk_editable_set_editable")
  (return-type "none")
  (parameters
    '("gboolean" "is_editable")
  )
)

(define-method get_alignment
  (of-object "GtkEditable")
  (c-name "gtk_editable_get_alignment")
  (return-type "float")
)

(define-method set_alignment
  (of-object "GtkEditable")
  (c-name "gtk_editable_set_alignment")
  (return-type "none")
  (parameters
    '("float" "xalign")
  )
)

(define-method get_width_chars
  (of-object "GtkEditable")
  (c-name "gtk_editable_get_width_chars")
  (return-type "int")
)

(define-method set_width_chars
  (of-object "GtkEditable")
  (c-name "gtk_editable_set_width_chars")
  (return-type "none")
  (parameters
    '("int" "n_chars")
  )
)

(define-method get_max_width_chars
  (of-object "GtkEditable")
  (c-name "gtk_editable_get_max_width_chars")
  (return-type "int")
)

(define-method set_max_width_chars
  (of-object "GtkEditable")
  (c-name "gtk_editable_set_max_width_chars")
  (return-type "none")
  (parameters
    '("int" "n_chars")
  )
)

(define-method get_enable_undo
  (of-object "GtkEditable")
  (c-name "gtk_editable_get_enable_undo")
  (return-type "gboolean")
)

(define-method set_enable_undo
  (of-object "GtkEditable")
  (c-name "gtk_editable_set_enable_undo")
  (return-type "none")
  (parameters
    '("gboolean" "enable_undo")
  )
)

(define-function gtk_editable_install_properties
  (c-name "gtk_editable_install_properties")
  (return-type "guint")
  (parameters
    '("GObjectClass*" "object_class")
    '("guint" "first_prop")
  )
)

(define-method get_delegate
  (of-object "GtkEditable")
  (c-name "gtk_editable_get_delegate")
  (return-type "GtkEditable*")
)

(define-method init_delegate
  (of-object "GtkEditable")
  (c-name "gtk_editable_init_delegate")
  (return-type "none")
)

(define-method finish_delegate
  (of-object "GtkEditable")
  (c-name "gtk_editable_finish_delegate")
  (return-type "none")
)

(define-function gtk_editable_delegate_set_property
  (c-name "gtk_editable_delegate_set_property")
  (return-type "gboolean")
  (parameters
    '("GObject*" "object")
    '("guint" "prop_id")
    '("const-GValue*" "value")
    '("GParamSpec*" "pspec")
  )
)

(define-function gtk_editable_delegate_get_property
  (c-name "gtk_editable_delegate_get_property")
  (return-type "gboolean")
  (parameters
    '("GObject*" "object")
    '("guint" "prop_id")
    '("GValue*" "value")
    '("GParamSpec*" "pspec")
  )
)



;; From gtkeditablelabel.h

(define-function gtk_editable_label_new
  (c-name "gtk_editable_label_new")
  (is-constructor-of "GtkEditableLabel")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "str")
  )
)

(define-method get_editing
  (of-object "GtkEditableLabel")
  (c-name "gtk_editable_label_get_editing")
  (return-type "gboolean")
)

(define-method start_editing
  (of-object "GtkEditableLabel")
  (c-name "gtk_editable_label_start_editing")
  (return-type "none")
)

(define-method stop_editing
  (of-object "GtkEditableLabel")
  (c-name "gtk_editable_label_stop_editing")
  (return-type "none")
  (parameters
    '("gboolean" "commit")
  )
)



;; From gtkemojichooser.h

(define-function gtk_emoji_chooser_get_type
  (c-name "gtk_emoji_chooser_get_type")
  (return-type "GType")
)

(define-function gtk_emoji_chooser_new
  (c-name "gtk_emoji_chooser_new")
  (is-constructor-of "GtkEmojiChooser")
  (return-type "GtkWidget*")
)



;; From gtkemojicompletion.h

(define-function gtk_emoji_completion_get_type
  (c-name "gtk_emoji_completion_get_type")
  (return-type "GType")
)

(define-function gtk_emoji_completion_new
  (c-name "gtk_emoji_completion_new")
  (is-constructor-of "GtkEmojiCompletion")
  (return-type "GtkWidget*")
  (parameters
    '("GtkText*" "text")
  )
)



;; From gtkentrybuffer.h

(define-function gtk_entry_buffer_get_type
  (c-name "gtk_entry_buffer_get_type")
  (return-type "GType")
)

(define-function gtk_entry_buffer_new
  (c-name "gtk_entry_buffer_new")
  (is-constructor-of "GtkEntryBuffer")
  (return-type "GtkEntryBuffer*")
  (parameters
    '("const-char*" "initial_chars")
    '("int" "n_initial_chars")
  )
)

(define-method get_bytes
  (of-object "GtkEntryBuffer")
  (c-name "gtk_entry_buffer_get_bytes")
  (return-type "gsize")
)

(define-method get_length
  (of-object "GtkEntryBuffer")
  (c-name "gtk_entry_buffer_get_length")
  (return-type "guint")
)

(define-method get_text
  (of-object "GtkEntryBuffer")
  (c-name "gtk_entry_buffer_get_text")
  (return-type "const-char*")
)

(define-method set_text
  (of-object "GtkEntryBuffer")
  (c-name "gtk_entry_buffer_set_text")
  (return-type "none")
  (parameters
    '("const-char*" "chars")
    '("int" "n_chars")
  )
)

(define-method set_max_length
  (of-object "GtkEntryBuffer")
  (c-name "gtk_entry_buffer_set_max_length")
  (return-type "none")
  (parameters
    '("int" "max_length")
  )
)

(define-method get_max_length
  (of-object "GtkEntryBuffer")
  (c-name "gtk_entry_buffer_get_max_length")
  (return-type "int")
)

(define-method insert_text
  (of-object "GtkEntryBuffer")
  (c-name "gtk_entry_buffer_insert_text")
  (return-type "guint")
  (parameters
    '("guint" "position")
    '("const-char*" "chars")
    '("int" "n_chars")
  )
)

(define-method delete_text
  (of-object "GtkEntryBuffer")
  (c-name "gtk_entry_buffer_delete_text")
  (return-type "guint")
  (parameters
    '("guint" "position")
    '("int" "n_chars")
  )
)

(define-method emit_inserted_text
  (of-object "GtkEntryBuffer")
  (c-name "gtk_entry_buffer_emit_inserted_text")
  (return-type "none")
  (parameters
    '("guint" "position")
    '("const-char*" "chars")
    '("guint" "n_chars")
  )
)

(define-method emit_deleted_text
  (of-object "GtkEntryBuffer")
  (c-name "gtk_entry_buffer_emit_deleted_text")
  (return-type "none")
  (parameters
    '("guint" "position")
    '("guint" "n_chars")
  )
)



;; From gtkentrycompletion.h

(define-function gtk_entry_completion_get_type
  (c-name "gtk_entry_completion_get_type")
  (return-type "GType")
)

(define-function gtk_entry_completion_new
  (c-name "gtk_entry_completion_new")
  (is-constructor-of "GtkEntryCompletion")
  (return-type "GtkEntryCompletion*")
)

(define-function gtk_entry_completion_new_with_area
  (c-name "gtk_entry_completion_new_with_area")
  (return-type "GtkEntryCompletion*")
  (parameters
    '("GtkCellArea*" "area")
  )
)

(define-method get_entry
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_get_entry")
  (return-type "GtkWidget*")
)

(define-method set_model
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_set_model")
  (return-type "none")
  (parameters
    '("GtkTreeModel*" "model")
  )
)

(define-method get_model
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_get_model")
  (return-type "GtkTreeModel*")
)

(define-method set_match_func
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_set_match_func")
  (return-type "none")
  (parameters
    '("GtkEntryCompletionMatchFunc" "func")
    '("gpointer" "func_data")
    '("GDestroyNotify" "func_notify")
  )
)

(define-method set_minimum_key_length
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_set_minimum_key_length")
  (return-type "none")
  (parameters
    '("int" "length")
  )
)

(define-method get_minimum_key_length
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_get_minimum_key_length")
  (return-type "int")
)

(define-method compute_prefix
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_compute_prefix")
  (return-type "char*")
  (parameters
    '("const-char*" "key")
  )
)

(define-method complete
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_complete")
  (return-type "none")
)

(define-method insert_prefix
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_insert_prefix")
  (return-type "none")
)

(define-method set_inline_completion
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_set_inline_completion")
  (return-type "none")
  (parameters
    '("gboolean" "inline_completion")
  )
)

(define-method get_inline_completion
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_get_inline_completion")
  (return-type "gboolean")
)

(define-method set_inline_selection
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_set_inline_selection")
  (return-type "none")
  (parameters
    '("gboolean" "inline_selection")
  )
)

(define-method get_inline_selection
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_get_inline_selection")
  (return-type "gboolean")
)

(define-method set_popup_completion
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_set_popup_completion")
  (return-type "none")
  (parameters
    '("gboolean" "popup_completion")
  )
)

(define-method get_popup_completion
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_get_popup_completion")
  (return-type "gboolean")
)

(define-method set_popup_set_width
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_set_popup_set_width")
  (return-type "none")
  (parameters
    '("gboolean" "popup_set_width")
  )
)

(define-method get_popup_set_width
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_get_popup_set_width")
  (return-type "gboolean")
)

(define-method set_popup_single_match
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_set_popup_single_match")
  (return-type "none")
  (parameters
    '("gboolean" "popup_single_match")
  )
)

(define-method get_popup_single_match
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_get_popup_single_match")
  (return-type "gboolean")
)

(define-method get_completion_prefix
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_get_completion_prefix")
  (return-type "const-char*")
)

(define-method set_text_column
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_set_text_column")
  (return-type "none")
  (parameters
    '("int" "column")
  )
)

(define-method get_text_column
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_get_text_column")
  (return-type "int")
)



;; From gtkentry.h

(define-function gtk_entry_get_type
  (c-name "gtk_entry_get_type")
  (return-type "GType")
)

(define-function gtk_entry_new
  (c-name "gtk_entry_new")
  (is-constructor-of "GtkEntry")
  (return-type "GtkWidget*")
)

(define-function gtk_entry_new_with_buffer
  (c-name "gtk_entry_new_with_buffer")
  (return-type "GtkWidget*")
  (parameters
    '("GtkEntryBuffer*" "buffer")
  )
)

(define-method get_buffer
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_buffer")
  (return-type "GtkEntryBuffer*")
)

(define-method set_buffer
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_buffer")
  (return-type "none")
  (parameters
    '("GtkEntryBuffer*" "buffer")
  )
)

(define-method set_visibility
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_visibility")
  (return-type "none")
  (parameters
    '("gboolean" "visible")
  )
)

(define-method get_visibility
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_visibility")
  (return-type "gboolean")
)

(define-method set_invisible_char
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_invisible_char")
  (return-type "none")
  (parameters
    '("gunichar" "ch")
  )
)

(define-method get_invisible_char
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_invisible_char")
  (return-type "gunichar")
)

(define-method unset_invisible_char
  (of-object "GtkEntry")
  (c-name "gtk_entry_unset_invisible_char")
  (return-type "none")
)

(define-method set_has_frame
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_has_frame")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_has_frame
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_has_frame")
  (return-type "gboolean")
)

(define-method set_overwrite_mode
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_overwrite_mode")
  (return-type "none")
  (parameters
    '("gboolean" "overwrite")
  )
)

(define-method get_overwrite_mode
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_overwrite_mode")
  (return-type "gboolean")
)

(define-method set_max_length
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_max_length")
  (return-type "none")
  (parameters
    '("int" "max")
  )
)

(define-method get_max_length
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_max_length")
  (return-type "int")
)

(define-method get_text_length
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_text_length")
  (return-type "guint16")
)

(define-method set_activates_default
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_activates_default")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_activates_default
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_activates_default")
  (return-type "gboolean")
)

(define-method set_alignment
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_alignment")
  (return-type "none")
  (parameters
    '("float" "xalign")
  )
)

(define-method get_alignment
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_alignment")
  (return-type "float")
)

(define-method set_completion
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_completion")
  (return-type "none")
  (parameters
    '("GtkEntryCompletion*" "completion")
  )
)

(define-method get_completion
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_completion")
  (return-type "GtkEntryCompletion*")
)

(define-method set_progress_fraction
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_progress_fraction")
  (return-type "none")
  (parameters
    '("double" "fraction")
  )
)

(define-method get_progress_fraction
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_progress_fraction")
  (return-type "double")
)

(define-method set_progress_pulse_step
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_progress_pulse_step")
  (return-type "none")
  (parameters
    '("double" "fraction")
  )
)

(define-method get_progress_pulse_step
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_progress_pulse_step")
  (return-type "double")
)

(define-method progress_pulse
  (of-object "GtkEntry")
  (c-name "gtk_entry_progress_pulse")
  (return-type "none")
)

(define-method get_placeholder_text
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_placeholder_text")
  (return-type "const-char*")
)

(define-method set_placeholder_text
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_placeholder_text")
  (return-type "none")
  (parameters
    '("const-char*" "text")
  )
)

(define-method set_icon_from_paintable
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_icon_from_paintable")
  (return-type "none")
  (parameters
    '("GtkEntryIconPosition" "icon_pos")
    '("GdkPaintable*" "paintable")
  )
)

(define-method set_icon_from_icon_name
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_icon_from_icon_name")
  (return-type "none")
  (parameters
    '("GtkEntryIconPosition" "icon_pos")
    '("const-char*" "icon_name")
  )
)

(define-method set_icon_from_gicon
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_icon_from_gicon")
  (return-type "none")
  (parameters
    '("GtkEntryIconPosition" "icon_pos")
    '("GIcon*" "icon")
  )
)

(define-method get_icon_storage_type
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_icon_storage_type")
  (return-type "GtkImageType")
  (parameters
    '("GtkEntryIconPosition" "icon_pos")
  )
)

(define-method get_icon_paintable
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_icon_paintable")
  (return-type "GdkPaintable*")
  (parameters
    '("GtkEntryIconPosition" "icon_pos")
  )
)

(define-method get_icon_name
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_icon_name")
  (return-type "const-char*")
  (parameters
    '("GtkEntryIconPosition" "icon_pos")
  )
)

(define-method get_icon_gicon
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_icon_gicon")
  (return-type "GIcon*")
  (parameters
    '("GtkEntryIconPosition" "icon_pos")
  )
)

(define-method set_icon_activatable
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_icon_activatable")
  (return-type "none")
  (parameters
    '("GtkEntryIconPosition" "icon_pos")
    '("gboolean" "activatable")
  )
)

(define-method get_icon_activatable
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_icon_activatable")
  (return-type "gboolean")
  (parameters
    '("GtkEntryIconPosition" "icon_pos")
  )
)

(define-method set_icon_sensitive
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_icon_sensitive")
  (return-type "none")
  (parameters
    '("GtkEntryIconPosition" "icon_pos")
    '("gboolean" "sensitive")
  )
)

(define-method get_icon_sensitive
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_icon_sensitive")
  (return-type "gboolean")
  (parameters
    '("GtkEntryIconPosition" "icon_pos")
  )
)

(define-method get_icon_at_pos
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_icon_at_pos")
  (return-type "int")
  (parameters
    '("int" "x")
    '("int" "y")
  )
)

(define-method set_icon_tooltip_text
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_icon_tooltip_text")
  (return-type "none")
  (parameters
    '("GtkEntryIconPosition" "icon_pos")
    '("const-char*" "tooltip")
  )
)

(define-method get_icon_tooltip_text
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_icon_tooltip_text")
  (return-type "char*")
  (parameters
    '("GtkEntryIconPosition" "icon_pos")
  )
)

(define-method set_icon_tooltip_markup
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_icon_tooltip_markup")
  (return-type "none")
  (parameters
    '("GtkEntryIconPosition" "icon_pos")
    '("const-char*" "tooltip")
  )
)

(define-method get_icon_tooltip_markup
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_icon_tooltip_markup")
  (return-type "char*")
  (parameters
    '("GtkEntryIconPosition" "icon_pos")
  )
)

(define-method set_icon_drag_source
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_icon_drag_source")
  (return-type "none")
  (parameters
    '("GtkEntryIconPosition" "icon_pos")
    '("GdkContentProvider*" "provider")
    '("GdkDragAction" "actions")
  )
)

(define-method get_current_icon_drag_source
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_current_icon_drag_source")
  (return-type "int")
)

(define-method get_icon_area
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_icon_area")
  (return-type "none")
  (parameters
    '("GtkEntryIconPosition" "icon_pos")
    '("GdkRectangle*" "icon_area")
  )
)

(define-method reset_im_context
  (of-object "GtkEntry")
  (c-name "gtk_entry_reset_im_context")
  (return-type "none")
)

(define-method set_input_purpose
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_input_purpose")
  (return-type "none")
  (parameters
    '("GtkInputPurpose" "purpose")
  )
)

(define-method get_input_purpose
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_input_purpose")
  (return-type "GtkInputPurpose")
)

(define-method set_input_hints
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_input_hints")
  (return-type "none")
  (parameters
    '("GtkInputHints" "hints")
  )
)

(define-method get_input_hints
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_input_hints")
  (return-type "GtkInputHints")
)

(define-method set_attributes
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_attributes")
  (return-type "none")
  (parameters
    '("PangoAttrList*" "attrs")
  )
)

(define-method get_attributes
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_attributes")
  (return-type "PangoAttrList*")
)

(define-method set_tabs
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_tabs")
  (return-type "none")
  (parameters
    '("PangoTabArray*" "tabs")
  )
)

(define-method get_tabs
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_tabs")
  (return-type "PangoTabArray*")
)

(define-method grab_focus_without_selecting
  (of-object "GtkEntry")
  (c-name "gtk_entry_grab_focus_without_selecting")
  (return-type "gboolean")
)

(define-method set_extra_menu
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_extra_menu")
  (return-type "none")
  (parameters
    '("GMenuModel*" "model")
  )
)

(define-method get_extra_menu
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_extra_menu")
  (return-type "GMenuModel*")
)



;; From gtkenums.h

(define-function gtk_ordering_from_cmpfunc
  (c-name "gtk_ordering_from_cmpfunc")
  (return-type "GtkOrdering")
  (parameters
    '("int" "cmpfunc_result")
  )
)



;; From gtkeventcontrollerfocus.h

(define-function gtk_event_controller_focus_get_type
  (c-name "gtk_event_controller_focus_get_type")
  (return-type "GType")
)

(define-function gtk_event_controller_focus_new
  (c-name "gtk_event_controller_focus_new")
  (is-constructor-of "GtkEventControllerFocus")
  (return-type "GtkEventController*")
)

(define-method contains_focus
  (of-object "GtkEventControllerFocus")
  (c-name "gtk_event_controller_focus_contains_focus")
  (return-type "gboolean")
)

(define-method is_focus
  (of-object "GtkEventControllerFocus")
  (c-name "gtk_event_controller_focus_is_focus")
  (return-type "gboolean")
)



;; From gtkeventcontroller.h

(define-function gtk_event_controller_get_type
  (c-name "gtk_event_controller_get_type")
  (return-type "GType")
)

(define-method get_widget
  (of-object "GtkEventController")
  (c-name "gtk_event_controller_get_widget")
  (return-type "GtkWidget*")
)

(define-method reset
  (of-object "GtkEventController")
  (c-name "gtk_event_controller_reset")
  (return-type "none")
)

(define-method get_propagation_phase
  (of-object "GtkEventController")
  (c-name "gtk_event_controller_get_propagation_phase")
  (return-type "GtkPropagationPhase")
)

(define-method set_propagation_phase
  (of-object "GtkEventController")
  (c-name "gtk_event_controller_set_propagation_phase")
  (return-type "none")
  (parameters
    '("GtkPropagationPhase" "phase")
  )
)

(define-method get_propagation_limit
  (of-object "GtkEventController")
  (c-name "gtk_event_controller_get_propagation_limit")
  (return-type "GtkPropagationLimit")
)

(define-method set_propagation_limit
  (of-object "GtkEventController")
  (c-name "gtk_event_controller_set_propagation_limit")
  (return-type "none")
  (parameters
    '("GtkPropagationLimit" "limit")
  )
)

(define-method get_name
  (of-object "GtkEventController")
  (c-name "gtk_event_controller_get_name")
  (return-type "const-char*")
)

(define-method set_name
  (of-object "GtkEventController")
  (c-name "gtk_event_controller_set_name")
  (return-type "none")
  (parameters
    '("const-char*" "name")
  )
)

(define-method get_current_event
  (of-object "GtkEventController")
  (c-name "gtk_event_controller_get_current_event")
  (return-type "GdkEvent*")
)

(define-method get_current_event_time
  (of-object "GtkEventController")
  (c-name "gtk_event_controller_get_current_event_time")
  (return-type "guint32")
)

(define-method get_current_event_device
  (of-object "GtkEventController")
  (c-name "gtk_event_controller_get_current_event_device")
  (return-type "GdkDevice*")
)

(define-method get_current_event_state
  (of-object "GtkEventController")
  (c-name "gtk_event_controller_get_current_event_state")
  (return-type "GdkModifierType")
)



;; From gtkeventcontrollerkey.h

(define-function gtk_event_controller_key_get_type
  (c-name "gtk_event_controller_key_get_type")
  (return-type "GType")
)

(define-function gtk_event_controller_key_new
  (c-name "gtk_event_controller_key_new")
  (is-constructor-of "GtkEventControllerKey")
  (return-type "GtkEventController*")
)

(define-method set_im_context
  (of-object "GtkEventControllerKey")
  (c-name "gtk_event_controller_key_set_im_context")
  (return-type "none")
  (parameters
    '("GtkIMContext*" "im_context")
  )
)

(define-method get_im_context
  (of-object "GtkEventControllerKey")
  (c-name "gtk_event_controller_key_get_im_context")
  (return-type "GtkIMContext*")
)

(define-method forward
  (of-object "GtkEventControllerKey")
  (c-name "gtk_event_controller_key_forward")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method get_group
  (of-object "GtkEventControllerKey")
  (c-name "gtk_event_controller_key_get_group")
  (return-type "guint")
)



;; From gtkeventcontrollerlegacy.h

(define-function gtk_event_controller_legacy_get_type
  (c-name "gtk_event_controller_legacy_get_type")
  (return-type "GType")
)

(define-function gtk_event_controller_legacy_new
  (c-name "gtk_event_controller_legacy_new")
  (is-constructor-of "GtkEventControllerLegacy")
  (return-type "GtkEventController*")
)



;; From gtkeventcontrollermotion.h

(define-function gtk_event_controller_motion_get_type
  (c-name "gtk_event_controller_motion_get_type")
  (return-type "GType")
)

(define-function gtk_event_controller_motion_new
  (c-name "gtk_event_controller_motion_new")
  (is-constructor-of "GtkEventControllerMotion")
  (return-type "GtkEventController*")
)

(define-method contains_pointer
  (of-object "GtkEventControllerMotion")
  (c-name "gtk_event_controller_motion_contains_pointer")
  (return-type "gboolean")
)

(define-method is_pointer
  (of-object "GtkEventControllerMotion")
  (c-name "gtk_event_controller_motion_is_pointer")
  (return-type "gboolean")
)



;; From gtkeventcontrollerscroll.h

(define-function gtk_event_controller_scroll_get_type
  (c-name "gtk_event_controller_scroll_get_type")
  (return-type "GType")
)

(define-function gtk_event_controller_scroll_new
  (c-name "gtk_event_controller_scroll_new")
  (is-constructor-of "GtkEventControllerScroll")
  (return-type "GtkEventController*")
  (parameters
    '("GtkEventControllerScrollFlags" "flags")
  )
)

(define-method set_flags
  (of-object "GtkEventControllerScroll")
  (c-name "gtk_event_controller_scroll_set_flags")
  (return-type "none")
  (parameters
    '("GtkEventControllerScrollFlags" "flags")
  )
)

(define-method get_flags
  (of-object "GtkEventControllerScroll")
  (c-name "gtk_event_controller_scroll_get_flags")
  (return-type "GtkEventControllerScrollFlags")
)



;; From gtkexpander.h

(define-function gtk_expander_get_type
  (c-name "gtk_expander_get_type")
  (return-type "GType")
)

(define-function gtk_expander_new
  (c-name "gtk_expander_new")
  (is-constructor-of "GtkExpander")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "label")
  )
)

(define-function gtk_expander_new_with_mnemonic
  (c-name "gtk_expander_new_with_mnemonic")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "label")
  )
)

(define-method set_expanded
  (of-object "GtkExpander")
  (c-name "gtk_expander_set_expanded")
  (return-type "none")
  (parameters
    '("gboolean" "expanded")
  )
)

(define-method get_expanded
  (of-object "GtkExpander")
  (c-name "gtk_expander_get_expanded")
  (return-type "gboolean")
)

(define-method set_label
  (of-object "GtkExpander")
  (c-name "gtk_expander_set_label")
  (return-type "none")
  (parameters
    '("const-char*" "label")
  )
)

(define-method get_label
  (of-object "GtkExpander")
  (c-name "gtk_expander_get_label")
  (return-type "const-char*")
)

(define-method set_use_underline
  (of-object "GtkExpander")
  (c-name "gtk_expander_set_use_underline")
  (return-type "none")
  (parameters
    '("gboolean" "use_underline")
  )
)

(define-method get_use_underline
  (of-object "GtkExpander")
  (c-name "gtk_expander_get_use_underline")
  (return-type "gboolean")
)

(define-method set_use_markup
  (of-object "GtkExpander")
  (c-name "gtk_expander_set_use_markup")
  (return-type "none")
  (parameters
    '("gboolean" "use_markup")
  )
)

(define-method get_use_markup
  (of-object "GtkExpander")
  (c-name "gtk_expander_get_use_markup")
  (return-type "gboolean")
)

(define-method set_label_widget
  (of-object "GtkExpander")
  (c-name "gtk_expander_set_label_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "label_widget")
  )
)

(define-method get_label_widget
  (of-object "GtkExpander")
  (c-name "gtk_expander_get_label_widget")
  (return-type "GtkWidget*")
)

(define-method set_resize_toplevel
  (of-object "GtkExpander")
  (c-name "gtk_expander_set_resize_toplevel")
  (return-type "none")
  (parameters
    '("gboolean" "resize_toplevel")
  )
)

(define-method get_resize_toplevel
  (of-object "GtkExpander")
  (c-name "gtk_expander_get_resize_toplevel")
  (return-type "gboolean")
)

(define-method set_child
  (of-object "GtkExpander")
  (c-name "gtk_expander_set_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_child
  (of-object "GtkExpander")
  (c-name "gtk_expander_get_child")
  (return-type "GtkWidget*")
)



;; From gtkexpression.h

(define-function gtk_expression_get_type
  (c-name "gtk_expression_get_type")
  (return-type "GType")
)

(define-method ref
  (of-object "GtkExpression")
  (c-name "gtk_expression_ref")
  (return-type "GtkExpression*")
)

(define-method unref
  (of-object "GtkExpression")
  (c-name "gtk_expression_unref")
  (return-type "none")
)

(define-method get_value_type
  (of-object "GtkExpression")
  (c-name "gtk_expression_get_value_type")
  (return-type "GType")
)

(define-method is_static
  (of-object "GtkExpression")
  (c-name "gtk_expression_is_static")
  (return-type "gboolean")
)

(define-method evaluate
  (of-object "GtkExpression")
  (c-name "gtk_expression_evaluate")
  (return-type "gboolean")
  (parameters
    '("gpointer" "this_")
    '("GValue*" "value")
  )
)

(define-method watch
  (of-object "GtkExpression")
  (c-name "gtk_expression_watch")
  (return-type "GtkExpressionWatch*")
  (parameters
    '("gpointer" "this_")
    '("GtkExpressionNotify" "notify")
    '("gpointer" "user_data")
    '("GDestroyNotify" "user_destroy")
  )
)

(define-method bind
  (of-object "GtkExpression")
  (c-name "gtk_expression_bind")
  (return-type "GtkExpressionWatch*")
  (parameters
    '("gpointer" "target")
    '("const-char*" "property")
    '("gpointer" "this_")
  )
)

(define-method ref
  (of-object "GtkExpressionWatch")
  (c-name "gtk_expression_watch_ref")
  (return-type "GtkExpressionWatch*")
)

(define-method unref
  (of-object "GtkExpressionWatch")
  (c-name "gtk_expression_watch_unref")
  (return-type "none")
)

(define-method evaluate
  (of-object "GtkExpressionWatch")
  (c-name "gtk_expression_watch_evaluate")
  (return-type "gboolean")
  (parameters
    '("GValue*" "value")
  )
)

(define-method unwatch
  (of-object "GtkExpressionWatch")
  (c-name "gtk_expression_watch_unwatch")
  (return-type "none")
)

(define-function gtk_property_expression_get_type
  (c-name "gtk_property_expression_get_type")
  (return-type "GType")
)

(define-function gtk_property_expression_new
  (c-name "gtk_property_expression_new")
  (is-constructor-of "GtkPropertyExpression")
  (return-type "GtkExpression*")
  (parameters
    '("GType" "this_type")
    '("GtkExpression*" "expression")
    '("const-char*" "property_name")
  )
)

(define-function gtk_property_expression_new_for_pspec
  (c-name "gtk_property_expression_new_for_pspec")
  (return-type "GtkExpression*")
  (parameters
    '("GtkExpression*" "expression")
    '("GParamSpec*" "pspec")
  )
)

(define-function gtk_property_expression_get_expression
  (c-name "gtk_property_expression_get_expression")
  (return-type "GtkExpression*")
  (parameters
    '("GtkExpression*" "expression")
  )
)

(define-function gtk_property_expression_get_pspec
  (c-name "gtk_property_expression_get_pspec")
  (return-type "GParamSpec*")
  (parameters
    '("GtkExpression*" "expression")
  )
)

(define-function gtk_constant_expression_get_type
  (c-name "gtk_constant_expression_get_type")
  (return-type "GType")
)

(define-function gtk_constant_expression_new
  (c-name "gtk_constant_expression_new")
  (is-constructor-of "GtkConstantExpression")
  (return-type "GtkExpression*")
  (parameters
    '("GType" "value_type")
  )
  (varargs #t)
)

(define-function gtk_constant_expression_new_for_value
  (c-name "gtk_constant_expression_new_for_value")
  (return-type "GtkExpression*")
  (parameters
    '("const-GValue*" "value")
  )
)

(define-function gtk_constant_expression_get_value
  (c-name "gtk_constant_expression_get_value")
  (return-type "const-GValue*")
  (parameters
    '("GtkExpression*" "expression")
  )
)

(define-function gtk_object_expression_get_type
  (c-name "gtk_object_expression_get_type")
  (return-type "GType")
)

(define-function gtk_object_expression_new
  (c-name "gtk_object_expression_new")
  (is-constructor-of "GtkObjectExpression")
  (return-type "GtkExpression*")
  (parameters
    '("GObject*" "object")
  )
)

(define-function gtk_object_expression_get_object
  (c-name "gtk_object_expression_get_object")
  (return-type "GObject*")
  (parameters
    '("GtkExpression*" "expression")
  )
)

(define-function gtk_closure_expression_get_type
  (c-name "gtk_closure_expression_get_type")
  (return-type "GType")
)

(define-function gtk_closure_expression_new
  (c-name "gtk_closure_expression_new")
  (is-constructor-of "GtkClosureExpression")
  (return-type "GtkExpression*")
  (parameters
    '("GType" "value_type")
    '("GClosure*" "closure")
    '("guint" "n_params")
    '("GtkExpression**" "params")
  )
)

(define-function gtk_cclosure_expression_get_type
  (c-name "gtk_cclosure_expression_get_type")
  (return-type "GType")
)

(define-function gtk_cclosure_expression_new
  (c-name "gtk_cclosure_expression_new")
  (is-constructor-of "GtkCclosureExpression")
  (return-type "GtkExpression*")
  (parameters
    '("GType" "value_type")
    '("GClosureMarshal" "marshal")
    '("guint" "n_params")
    '("GtkExpression**" "params")
    '("GCallback" "callback_func")
    '("gpointer" "user_data")
    '("GClosureNotify" "user_destroy")
  )
)

(define-function gtk_value_set_expression
  (c-name "gtk_value_set_expression")
  (return-type "none")
  (parameters
    '("GValue*" "value")
    '("GtkExpression*" "expression")
  )
)

(define-function gtk_value_take_expression
  (c-name "gtk_value_take_expression")
  (return-type "none")
  (parameters
    '("GValue*" "value")
    '("GtkExpression*" "expression")
  )
)

(define-function gtk_value_get_expression
  (c-name "gtk_value_get_expression")
  (return-type "GtkExpression*")
  (parameters
    '("const-GValue*" "value")
  )
)

(define-function gtk_value_dup_expression
  (c-name "gtk_value_dup_expression")
  (return-type "GtkExpression*")
  (parameters
    '("const-GValue*" "value")
  )
)

(define-function gtk_param_expression_get_type
  (c-name "gtk_param_expression_get_type")
  (return-type "GType")
)

(define-function gtk_param_spec_expression
  (c-name "gtk_param_spec_expression")
  (return-type "GParamSpec*")
  (parameters
    '("const-char*" "name")
    '("const-char*" "nick")
    '("const-char*" "blurb")
    '("GParamFlags" "flags")
  )
)



;; From gtkfilechooserdialog.h

(define-function gtk_file_chooser_dialog_get_type
  (c-name "gtk_file_chooser_dialog_get_type")
  (return-type "GType")
)

(define-function gtk_file_chooser_dialog_new
  (c-name "gtk_file_chooser_dialog_new")
  (is-constructor-of "GtkFileChooserDialog")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "title")
    '("GtkWindow*" "parent")
    '("GtkFileChooserAction" "action")
    '("const-char*" "first_button_text")
  )
  (varargs #t)
)



;; From gtkfilechooserentry.h



;; From gtkfilechooser.h

(define-function gtk_file_chooser_get_type
  (c-name "gtk_file_chooser_get_type")
  (return-type "GType")
)

(define-function gtk_file_chooser_error_quark
  (c-name "gtk_file_chooser_error_quark")
  (return-type "GQuark")
)

(define-method set_action
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_action")
  (return-type "none")
  (parameters
    '("GtkFileChooserAction" "action")
  )
)

(define-method get_action
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_action")
  (return-type "GtkFileChooserAction")
)

(define-method set_select_multiple
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_select_multiple")
  (return-type "none")
  (parameters
    '("gboolean" "select_multiple")
  )
)

(define-method get_select_multiple
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_select_multiple")
  (return-type "gboolean")
)

(define-method set_create_folders
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_create_folders")
  (return-type "none")
  (parameters
    '("gboolean" "create_folders")
  )
)

(define-method get_create_folders
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_create_folders")
  (return-type "gboolean")
)

(define-method set_current_name
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_current_name")
  (return-type "none")
  (parameters
    '("const-char*" "name")
  )
)

(define-method get_current_name
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_current_name")
  (return-type "char*")
)

(define-method get_file
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_file")
  (return-type "GFile*")
)

(define-method set_file
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_file")
  (return-type "gboolean")
  (parameters
    '("GFile*" "file")
    '("GError**" "error")
  )
)

(define-method get_files
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_files")
  (return-type "GListModel*")
)

(define-method set_current_folder
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_current_folder")
  (return-type "gboolean")
  (parameters
    '("GFile*" "file")
    '("GError**" "error")
  )
)

(define-method get_current_folder
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_current_folder")
  (return-type "GFile*")
)

(define-method add_filter
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_add_filter")
  (return-type "none")
  (parameters
    '("GtkFileFilter*" "filter")
  )
)

(define-method remove_filter
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_remove_filter")
  (return-type "none")
  (parameters
    '("GtkFileFilter*" "filter")
  )
)

(define-method get_filters
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_filters")
  (return-type "GListModel*")
)

(define-method set_filter
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_filter")
  (return-type "none")
  (parameters
    '("GtkFileFilter*" "filter")
  )
)

(define-method get_filter
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_filter")
  (return-type "GtkFileFilter*")
)

(define-method add_shortcut_folder
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_add_shortcut_folder")
  (return-type "gboolean")
  (parameters
    '("GFile*" "folder")
    '("GError**" "error")
  )
)

(define-method remove_shortcut_folder
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_remove_shortcut_folder")
  (return-type "gboolean")
  (parameters
    '("GFile*" "folder")
    '("GError**" "error")
  )
)

(define-method get_shortcut_folders
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_shortcut_folders")
  (return-type "GListModel*")
)

(define-method add_choice
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_add_choice")
  (return-type "none")
  (parameters
    '("const-char*" "id")
    '("const-char*" "label")
    '("const-char**" "options")
    '("const-char**" "option_labels")
  )
)

(define-method remove_choice
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_remove_choice")
  (return-type "none")
  (parameters
    '("const-char*" "id")
  )
)

(define-method set_choice
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_choice")
  (return-type "none")
  (parameters
    '("const-char*" "id")
    '("const-char*" "option")
  )
)

(define-method get_choice
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_choice")
  (return-type "const-char*")
  (parameters
    '("const-char*" "id")
  )
)



;; From gtkfilechoosernative.h

(define-function gtk_file_chooser_native_new
  (c-name "gtk_file_chooser_native_new")
  (is-constructor-of "GtkFileChooserNative")
  (return-type "GtkFileChooserNative*")
  (parameters
    '("const-char*" "title")
    '("GtkWindow*" "parent")
    '("GtkFileChooserAction" "action")
    '("const-char*" "accept_label")
    '("const-char*" "cancel_label")
  )
)

(define-method get_accept_label
  (of-object "GtkFileChooserNative")
  (c-name "gtk_file_chooser_native_get_accept_label")
  (return-type "const-char*")
)

(define-method set_accept_label
  (of-object "GtkFileChooserNative")
  (c-name "gtk_file_chooser_native_set_accept_label")
  (return-type "none")
  (parameters
    '("const-char*" "accept_label")
  )
)

(define-method get_cancel_label
  (of-object "GtkFileChooserNative")
  (c-name "gtk_file_chooser_native_get_cancel_label")
  (return-type "const-char*")
)

(define-method set_cancel_label
  (of-object "GtkFileChooserNative")
  (c-name "gtk_file_chooser_native_set_cancel_label")
  (return-type "none")
  (parameters
    '("const-char*" "cancel_label")
  )
)



;; From gtkfilechooserutils.h



;; From gtkfilechooserwidget.h

(define-function gtk_file_chooser_widget_get_type
  (c-name "gtk_file_chooser_widget_get_type")
  (return-type "GType")
)

(define-function gtk_file_chooser_widget_new
  (c-name "gtk_file_chooser_widget_new")
  (is-constructor-of "GtkFileChooserWidget")
  (return-type "GtkWidget*")
  (parameters
    '("GtkFileChooserAction" "action")
  )
)



;; From gtkfilefilter.h

(define-function gtk_file_filter_get_type
  (c-name "gtk_file_filter_get_type")
  (return-type "GType")
)

(define-function gtk_file_filter_new
  (c-name "gtk_file_filter_new")
  (is-constructor-of "GtkFileFilter")
  (return-type "GtkFileFilter*")
)

(define-method set_name
  (of-object "GtkFileFilter")
  (c-name "gtk_file_filter_set_name")
  (return-type "none")
  (parameters
    '("const-char*" "name")
  )
)

(define-method get_name
  (of-object "GtkFileFilter")
  (c-name "gtk_file_filter_get_name")
  (return-type "const-char*")
)

(define-method add_mime_type
  (of-object "GtkFileFilter")
  (c-name "gtk_file_filter_add_mime_type")
  (return-type "none")
  (parameters
    '("const-char*" "mime_type")
  )
)

(define-method add_pattern
  (of-object "GtkFileFilter")
  (c-name "gtk_file_filter_add_pattern")
  (return-type "none")
  (parameters
    '("const-char*" "pattern")
  )
)

(define-method add_pixbuf_formats
  (of-object "GtkFileFilter")
  (c-name "gtk_file_filter_add_pixbuf_formats")
  (return-type "none")
)

(define-method get_attributes
  (of-object "GtkFileFilter")
  (c-name "gtk_file_filter_get_attributes")
  (return-type "const-char**")
)

(define-method to_gvariant
  (of-object "GtkFileFilter")
  (c-name "gtk_file_filter_to_gvariant")
  (return-type "GVariant*")
)

(define-function gtk_file_filter_new_from_gvariant
  (c-name "gtk_file_filter_new_from_gvariant")
  (return-type "GtkFileFilter*")
  (parameters
    '("GVariant*" "variant")
  )
)



;; From gtkfilesystemmodel.h



;; From gtkfilter.h

(define-method match
  (of-object "GtkFilter")
  (c-name "gtk_filter_match")
  (return-type "gboolean")
  (parameters
    '("gpointer" "item")
  )
)

(define-method get_strictness
  (of-object "GtkFilter")
  (c-name "gtk_filter_get_strictness")
  (return-type "GtkFilterMatch")
)

(define-method changed
  (of-object "GtkFilter")
  (c-name "gtk_filter_changed")
  (return-type "none")
  (parameters
    '("GtkFilterChange" "change")
  )
)



;; From gtkfilterlistmodel.h

(define-function gtk_filter_list_model_new
  (c-name "gtk_filter_list_model_new")
  (is-constructor-of "GtkFilterListModel")
  (return-type "GtkFilterListModel*")
  (parameters
    '("GListModel*" "model")
    '("GtkFilter*" "filter")
  )
)

(define-method set_filter
  (of-object "GtkFilterListModel")
  (c-name "gtk_filter_list_model_set_filter")
  (return-type "none")
  (parameters
    '("GtkFilter*" "filter")
  )
)

(define-method get_filter
  (of-object "GtkFilterListModel")
  (c-name "gtk_filter_list_model_get_filter")
  (return-type "GtkFilter*")
)

(define-method set_model
  (of-object "GtkFilterListModel")
  (c-name "gtk_filter_list_model_set_model")
  (return-type "none")
  (parameters
    '("GListModel*" "model")
  )
)

(define-method get_model
  (of-object "GtkFilterListModel")
  (c-name "gtk_filter_list_model_get_model")
  (return-type "GListModel*")
)

(define-method set_incremental
  (of-object "GtkFilterListModel")
  (c-name "gtk_filter_list_model_set_incremental")
  (return-type "none")
  (parameters
    '("gboolean" "incremental")
  )
)

(define-method get_incremental
  (of-object "GtkFilterListModel")
  (c-name "gtk_filter_list_model_get_incremental")
  (return-type "gboolean")
)

(define-method get_pending
  (of-object "GtkFilterListModel")
  (c-name "gtk_filter_list_model_get_pending")
  (return-type "guint")
)



;; From gtkfixed.h

(define-function gtk_fixed_get_type
  (c-name "gtk_fixed_get_type")
  (return-type "GType")
)

(define-function gtk_fixed_new
  (c-name "gtk_fixed_new")
  (is-constructor-of "GtkFixed")
  (return-type "GtkWidget*")
)

(define-method put
  (of-object "GtkFixed")
  (c-name "gtk_fixed_put")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("double" "x")
    '("double" "y")
  )
)

(define-method remove
  (of-object "GtkFixed")
  (c-name "gtk_fixed_remove")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method move
  (of-object "GtkFixed")
  (c-name "gtk_fixed_move")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("double" "x")
    '("double" "y")
  )
)

(define-method get_child_position
  (of-object "GtkFixed")
  (c-name "gtk_fixed_get_child_position")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("double*" "x")
    '("double*" "y")
  )
)

(define-method set_child_transform
  (of-object "GtkFixed")
  (c-name "gtk_fixed_set_child_transform")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("GskTransform*" "transform")
  )
)

(define-method get_child_transform
  (of-object "GtkFixed")
  (c-name "gtk_fixed_get_child_transform")
  (return-type "GskTransform*")
  (parameters
    '("GtkWidget*" "widget")
  )
)



;; From gtkfixedlayout.h

(define-function gtk_fixed_layout_new
  (c-name "gtk_fixed_layout_new")
  (is-constructor-of "GtkFixedLayout")
  (return-type "GtkLayoutManager*")
)

(define-method set_transform
  (of-object "GtkFixedLayoutChild")
  (c-name "gtk_fixed_layout_child_set_transform")
  (return-type "none")
  (parameters
    '("GskTransform*" "transform")
  )
)

(define-method get_transform
  (of-object "GtkFixedLayoutChild")
  (c-name "gtk_fixed_layout_child_get_transform")
  (return-type "GskTransform*")
)



;; From gtkflattenlistmodel.h

(define-function gtk_flatten_list_model_new
  (c-name "gtk_flatten_list_model_new")
  (is-constructor-of "GtkFlattenListModel")
  (return-type "GtkFlattenListModel*")
  (parameters
    '("GListModel*" "model")
  )
)

(define-method set_model
  (of-object "GtkFlattenListModel")
  (c-name "gtk_flatten_list_model_set_model")
  (return-type "none")
  (parameters
    '("GListModel*" "model")
  )
)

(define-method get_model
  (of-object "GtkFlattenListModel")
  (c-name "gtk_flatten_list_model_get_model")
  (return-type "GListModel*")
)

(define-method get_model_for_item
  (of-object "GtkFlattenListModel")
  (c-name "gtk_flatten_list_model_get_model_for_item")
  (return-type "GListModel*")
  (parameters
    '("guint" "position")
  )
)



;; From gtkflowbox.h

(define-function gtk_flow_box_child_get_type
  (c-name "gtk_flow_box_child_get_type")
  (return-type "GType")
)

(define-function gtk_flow_box_child_new
  (c-name "gtk_flow_box_child_new")
  (is-constructor-of "GtkFlowBoxChild")
  (return-type "GtkWidget*")
)

(define-method set_child
  (of-object "GtkFlowBoxChild")
  (c-name "gtk_flow_box_child_set_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_child
  (of-object "GtkFlowBoxChild")
  (c-name "gtk_flow_box_child_get_child")
  (return-type "GtkWidget*")
)

(define-method get_index
  (of-object "GtkFlowBoxChild")
  (c-name "gtk_flow_box_child_get_index")
  (return-type "int")
)

(define-method is_selected
  (of-object "GtkFlowBoxChild")
  (c-name "gtk_flow_box_child_is_selected")
  (return-type "gboolean")
)

(define-method changed
  (of-object "GtkFlowBoxChild")
  (c-name "gtk_flow_box_child_changed")
  (return-type "none")
)

(define-function gtk_flow_box_get_type
  (c-name "gtk_flow_box_get_type")
  (return-type "GType")
)

(define-function gtk_flow_box_new
  (c-name "gtk_flow_box_new")
  (is-constructor-of "GtkFlowBox")
  (return-type "GtkWidget*")
)

(define-method bind_model
  (of-object "GtkFlowBox")
  (c-name "gtk_flow_box_bind_model")
  (return-type "none")
  (parameters
    '("GListModel*" "model")
    '("GtkFlowBoxCreateWidgetFunc" "create_widget_func")
    '("gpointer" "user_data")
    '("GDestroyNotify" "user_data_free_func")
  )
)

(define-method set_homogeneous
  (of-object "GtkFlowBox")
  (c-name "gtk_flow_box_set_homogeneous")
  (return-type "none")
  (parameters
    '("gboolean" "homogeneous")
  )
)

(define-method get_homogeneous
  (of-object "GtkFlowBox")
  (c-name "gtk_flow_box_get_homogeneous")
  (return-type "gboolean")
)

(define-method set_row_spacing
  (of-object "GtkFlowBox")
  (c-name "gtk_flow_box_set_row_spacing")
  (return-type "none")
  (parameters
    '("guint" "spacing")
  )
)

(define-method get_row_spacing
  (of-object "GtkFlowBox")
  (c-name "gtk_flow_box_get_row_spacing")
  (return-type "guint")
)

(define-method set_column_spacing
  (of-object "GtkFlowBox")
  (c-name "gtk_flow_box_set_column_spacing")
  (return-type "none")
  (parameters
    '("guint" "spacing")
  )
)

(define-method get_column_spacing
  (of-object "GtkFlowBox")
  (c-name "gtk_flow_box_get_column_spacing")
  (return-type "guint")
)

(define-method set_min_children_per_line
  (of-object "GtkFlowBox")
  (c-name "gtk_flow_box_set_min_children_per_line")
  (return-type "none")
  (parameters
    '("guint" "n_children")
  )
)

(define-method get_min_children_per_line
  (of-object "GtkFlowBox")
  (c-name "gtk_flow_box_get_min_children_per_line")
  (return-type "guint")
)

(define-method set_max_children_per_line
  (of-object "GtkFlowBox")
  (c-name "gtk_flow_box_set_max_children_per_line")
  (return-type "none")
  (parameters
    '("guint" "n_children")
  )
)

(define-method get_max_children_per_line
  (of-object "GtkFlowBox")
  (c-name "gtk_flow_box_get_max_children_per_line")
  (return-type "guint")
)

(define-method set_activate_on_single_click
  (of-object "GtkFlowBox")
  (c-name "gtk_flow_box_set_activate_on_single_click")
  (return-type "none")
  (parameters
    '("gboolean" "single")
  )
)

(define-method get_activate_on_single_click
  (of-object "GtkFlowBox")
  (c-name "gtk_flow_box_get_activate_on_single_click")
  (return-type "gboolean")
)

(define-method insert
  (of-object "GtkFlowBox")
  (c-name "gtk_flow_box_insert")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("int" "position")
  )
)

(define-method remove
  (of-object "GtkFlowBox")
  (c-name "gtk_flow_box_remove")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method get_child_at_index
  (of-object "GtkFlowBox")
  (c-name "gtk_flow_box_get_child_at_index")
  (return-type "GtkFlowBoxChild*")
  (parameters
    '("int" "idx")
  )
)

(define-method get_child_at_pos
  (of-object "GtkFlowBox")
  (c-name "gtk_flow_box_get_child_at_pos")
  (return-type "GtkFlowBoxChild*")
  (parameters
    '("int" "x")
    '("int" "y")
  )
)

(define-method selected_foreach
  (of-object "GtkFlowBox")
  (c-name "gtk_flow_box_selected_foreach")
  (return-type "none")
  (parameters
    '("GtkFlowBoxForeachFunc" "func")
    '("gpointer" "data")
  )
)

(define-method get_selected_children
  (of-object "GtkFlowBox")
  (c-name "gtk_flow_box_get_selected_children")
  (return-type "GList*")
)

(define-method select_child
  (of-object "GtkFlowBox")
  (c-name "gtk_flow_box_select_child")
  (return-type "none")
  (parameters
    '("GtkFlowBoxChild*" "child")
  )
)

(define-method unselect_child
  (of-object "GtkFlowBox")
  (c-name "gtk_flow_box_unselect_child")
  (return-type "none")
  (parameters
    '("GtkFlowBoxChild*" "child")
  )
)

(define-method select_all
  (of-object "GtkFlowBox")
  (c-name "gtk_flow_box_select_all")
  (return-type "none")
)

(define-method unselect_all
  (of-object "GtkFlowBox")
  (c-name "gtk_flow_box_unselect_all")
  (return-type "none")
)

(define-method set_selection_mode
  (of-object "GtkFlowBox")
  (c-name "gtk_flow_box_set_selection_mode")
  (return-type "none")
  (parameters
    '("GtkSelectionMode" "mode")
  )
)

(define-method get_selection_mode
  (of-object "GtkFlowBox")
  (c-name "gtk_flow_box_get_selection_mode")
  (return-type "GtkSelectionMode")
)

(define-method set_hadjustment
  (of-object "GtkFlowBox")
  (c-name "gtk_flow_box_set_hadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment")
  )
)

(define-method set_vadjustment
  (of-object "GtkFlowBox")
  (c-name "gtk_flow_box_set_vadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment")
  )
)

(define-method set_filter_func
  (of-object "GtkFlowBox")
  (c-name "gtk_flow_box_set_filter_func")
  (return-type "none")
  (parameters
    '("GtkFlowBoxFilterFunc" "filter_func")
    '("gpointer" "user_data")
    '("GDestroyNotify" "destroy")
  )
)

(define-method invalidate_filter
  (of-object "GtkFlowBox")
  (c-name "gtk_flow_box_invalidate_filter")
  (return-type "none")
)

(define-method set_sort_func
  (of-object "GtkFlowBox")
  (c-name "gtk_flow_box_set_sort_func")
  (return-type "none")
  (parameters
    '("GtkFlowBoxSortFunc" "sort_func")
    '("gpointer" "user_data")
    '("GDestroyNotify" "destroy")
  )
)

(define-method invalidate_sort
  (of-object "GtkFlowBox")
  (c-name "gtk_flow_box_invalidate_sort")
  (return-type "none")
)



;; From gtkfontbutton.h

(define-function gtk_font_button_get_type
  (c-name "gtk_font_button_get_type")
  (return-type "GType")
)

(define-function gtk_font_button_new
  (c-name "gtk_font_button_new")
  (is-constructor-of "GtkFontButton")
  (return-type "GtkWidget*")
)

(define-function gtk_font_button_new_with_font
  (c-name "gtk_font_button_new_with_font")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "fontname")
  )
)

(define-method get_title
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_get_title")
  (return-type "const-char*")
)

(define-method set_title
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_set_title")
  (return-type "none")
  (parameters
    '("const-char*" "title")
  )
)

(define-method get_modal
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_get_modal")
  (return-type "gboolean")
)

(define-method set_modal
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_set_modal")
  (return-type "none")
  (parameters
    '("gboolean" "modal")
  )
)

(define-method get_use_font
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_get_use_font")
  (return-type "gboolean")
)

(define-method set_use_font
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_set_use_font")
  (return-type "none")
  (parameters
    '("gboolean" "use_font")
  )
)

(define-method get_use_size
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_get_use_size")
  (return-type "gboolean")
)

(define-method set_use_size
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_set_use_size")
  (return-type "none")
  (parameters
    '("gboolean" "use_size")
  )
)



;; From gtkfontchooserdialog.h

(define-function gtk_font_chooser_dialog_get_type
  (c-name "gtk_font_chooser_dialog_get_type")
  (return-type "GType")
)

(define-function gtk_font_chooser_dialog_new
  (c-name "gtk_font_chooser_dialog_new")
  (is-constructor-of "GtkFontChooserDialog")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "title")
    '("GtkWindow*" "parent")
  )
)



;; From gtkfontchooser.h

(define-function gtk_font_chooser_get_type
  (c-name "gtk_font_chooser_get_type")
  (return-type "GType")
)

(define-method get_font_family
  (of-object "GtkFontChooser")
  (c-name "gtk_font_chooser_get_font_family")
  (return-type "PangoFontFamily*")
)

(define-method get_font_face
  (of-object "GtkFontChooser")
  (c-name "gtk_font_chooser_get_font_face")
  (return-type "PangoFontFace*")
)

(define-method get_font_size
  (of-object "GtkFontChooser")
  (c-name "gtk_font_chooser_get_font_size")
  (return-type "int")
)

(define-method get_font_desc
  (of-object "GtkFontChooser")
  (c-name "gtk_font_chooser_get_font_desc")
  (return-type "PangoFontDescription*")
)

(define-method set_font_desc
  (of-object "GtkFontChooser")
  (c-name "gtk_font_chooser_set_font_desc")
  (return-type "none")
  (parameters
    '("const-PangoFontDescription*" "font_desc")
  )
)

(define-method get_font
  (of-object "GtkFontChooser")
  (c-name "gtk_font_chooser_get_font")
  (return-type "char*")
)

(define-method set_font
  (of-object "GtkFontChooser")
  (c-name "gtk_font_chooser_set_font")
  (return-type "none")
  (parameters
    '("const-char*" "fontname")
  )
)

(define-method get_preview_text
  (of-object "GtkFontChooser")
  (c-name "gtk_font_chooser_get_preview_text")
  (return-type "char*")
)

(define-method set_preview_text
  (of-object "GtkFontChooser")
  (c-name "gtk_font_chooser_set_preview_text")
  (return-type "none")
  (parameters
    '("const-char*" "text")
  )
)

(define-method get_show_preview_entry
  (of-object "GtkFontChooser")
  (c-name "gtk_font_chooser_get_show_preview_entry")
  (return-type "gboolean")
)

(define-method set_show_preview_entry
  (of-object "GtkFontChooser")
  (c-name "gtk_font_chooser_set_show_preview_entry")
  (return-type "none")
  (parameters
    '("gboolean" "show_preview_entry")
  )
)

(define-method set_filter_func
  (of-object "GtkFontChooser")
  (c-name "gtk_font_chooser_set_filter_func")
  (return-type "none")
  (parameters
    '("GtkFontFilterFunc" "filter")
    '("gpointer" "user_data")
    '("GDestroyNotify" "destroy")
  )
)

(define-method set_font_map
  (of-object "GtkFontChooser")
  (c-name "gtk_font_chooser_set_font_map")
  (return-type "none")
  (parameters
    '("PangoFontMap*" "fontmap")
  )
)

(define-method get_font_map
  (of-object "GtkFontChooser")
  (c-name "gtk_font_chooser_get_font_map")
  (return-type "PangoFontMap*")
)

(define-method set_level
  (of-object "GtkFontChooser")
  (c-name "gtk_font_chooser_set_level")
  (return-type "none")
  (parameters
    '("GtkFontChooserLevel" "level")
  )
)

(define-method get_level
  (of-object "GtkFontChooser")
  (c-name "gtk_font_chooser_get_level")
  (return-type "GtkFontChooserLevel")
)

(define-method get_font_features
  (of-object "GtkFontChooser")
  (c-name "gtk_font_chooser_get_font_features")
  (return-type "char*")
)

(define-method get_language
  (of-object "GtkFontChooser")
  (c-name "gtk_font_chooser_get_language")
  (return-type "char*")
)

(define-method set_language
  (of-object "GtkFontChooser")
  (c-name "gtk_font_chooser_set_language")
  (return-type "none")
  (parameters
    '("const-char*" "language")
  )
)



;; From gtkfontchooserutils.h



;; From gtkfontchooserwidget.h

(define-function gtk_font_chooser_widget_get_type
  (c-name "gtk_font_chooser_widget_get_type")
  (return-type "GType")
)

(define-function gtk_font_chooser_widget_new
  (c-name "gtk_font_chooser_widget_new")
  (is-constructor-of "GtkFontChooserWidget")
  (return-type "GtkWidget*")
)



;; From gtkframe.h

(define-function gtk_frame_get_type
  (c-name "gtk_frame_get_type")
  (return-type "GType")
)

(define-function gtk_frame_new
  (c-name "gtk_frame_new")
  (is-constructor-of "GtkFrame")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "label")
  )
)

(define-method set_label
  (of-object "GtkFrame")
  (c-name "gtk_frame_set_label")
  (return-type "none")
  (parameters
    '("const-char*" "label")
  )
)

(define-method get_label
  (of-object "GtkFrame")
  (c-name "gtk_frame_get_label")
  (return-type "const-char*")
)

(define-method set_label_widget
  (of-object "GtkFrame")
  (c-name "gtk_frame_set_label_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "label_widget")
  )
)

(define-method get_label_widget
  (of-object "GtkFrame")
  (c-name "gtk_frame_get_label_widget")
  (return-type "GtkWidget*")
)

(define-method set_label_align
  (of-object "GtkFrame")
  (c-name "gtk_frame_set_label_align")
  (return-type "none")
  (parameters
    '("float" "xalign")
  )
)

(define-method get_label_align
  (of-object "GtkFrame")
  (c-name "gtk_frame_get_label_align")
  (return-type "float")
)

(define-method set_child
  (of-object "GtkFrame")
  (c-name "gtk_frame_set_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_child
  (of-object "GtkFrame")
  (c-name "gtk_frame_get_child")
  (return-type "GtkWidget*")
)



;; From gtkgestureclick.h

(define-function gtk_gesture_click_get_type
  (c-name "gtk_gesture_click_get_type")
  (return-type "GType")
)

(define-function gtk_gesture_click_new
  (c-name "gtk_gesture_click_new")
  (is-constructor-of "GtkGestureClick")
  (return-type "GtkGesture*")
)



;; From gtkgesturedrag.h

(define-function gtk_gesture_drag_get_type
  (c-name "gtk_gesture_drag_get_type")
  (return-type "GType")
)

(define-function gtk_gesture_drag_new
  (c-name "gtk_gesture_drag_new")
  (is-constructor-of "GtkGestureDrag")
  (return-type "GtkGesture*")
)

(define-method get_start_point
  (of-object "GtkGestureDrag")
  (c-name "gtk_gesture_drag_get_start_point")
  (return-type "gboolean")
  (parameters
    '("double*" "x")
    '("double*" "y")
  )
)

(define-method get_offset
  (of-object "GtkGestureDrag")
  (c-name "gtk_gesture_drag_get_offset")
  (return-type "gboolean")
  (parameters
    '("double*" "x")
    '("double*" "y")
  )
)



;; From gtkgesture.h

(define-function gtk_gesture_get_type
  (c-name "gtk_gesture_get_type")
  (return-type "GType")
)

(define-method get_device
  (of-object "GtkGesture")
  (c-name "gtk_gesture_get_device")
  (return-type "GdkDevice*")
)

(define-method set_state
  (of-object "GtkGesture")
  (c-name "gtk_gesture_set_state")
  (return-type "gboolean")
  (parameters
    '("GtkEventSequenceState" "state")
  )
)

(define-method get_sequence_state
  (of-object "GtkGesture")
  (c-name "gtk_gesture_get_sequence_state")
  (return-type "GtkEventSequenceState")
  (parameters
    '("GdkEventSequence*" "sequence")
  )
)

(define-method set_sequence_state
  (of-object "GtkGesture")
  (c-name "gtk_gesture_set_sequence_state")
  (return-type "gboolean")
  (parameters
    '("GdkEventSequence*" "sequence")
    '("GtkEventSequenceState" "state")
  )
)

(define-method get_sequences
  (of-object "GtkGesture")
  (c-name "gtk_gesture_get_sequences")
  (return-type "GList*")
)

(define-method get_last_updated_sequence
  (of-object "GtkGesture")
  (c-name "gtk_gesture_get_last_updated_sequence")
  (return-type "GdkEventSequence*")
)

(define-method handles_sequence
  (of-object "GtkGesture")
  (c-name "gtk_gesture_handles_sequence")
  (return-type "gboolean")
  (parameters
    '("GdkEventSequence*" "sequence")
  )
)

(define-method get_last_event
  (of-object "GtkGesture")
  (c-name "gtk_gesture_get_last_event")
  (return-type "GdkEvent*")
  (parameters
    '("GdkEventSequence*" "sequence")
  )
)

(define-method get_point
  (of-object "GtkGesture")
  (c-name "gtk_gesture_get_point")
  (return-type "gboolean")
  (parameters
    '("GdkEventSequence*" "sequence")
    '("double*" "x")
    '("double*" "y")
  )
)

(define-method get_bounding_box
  (of-object "GtkGesture")
  (c-name "gtk_gesture_get_bounding_box")
  (return-type "gboolean")
  (parameters
    '("GdkRectangle*" "rect")
  )
)

(define-method get_bounding_box_center
  (of-object "GtkGesture")
  (c-name "gtk_gesture_get_bounding_box_center")
  (return-type "gboolean")
  (parameters
    '("double*" "x")
    '("double*" "y")
  )
)

(define-method is_active
  (of-object "GtkGesture")
  (c-name "gtk_gesture_is_active")
  (return-type "gboolean")
)

(define-method is_recognized
  (of-object "GtkGesture")
  (c-name "gtk_gesture_is_recognized")
  (return-type "gboolean")
)

(define-method group
  (of-object "GtkGesture")
  (c-name "gtk_gesture_group")
  (return-type "none")
  (parameters
    '("GtkGesture*" "gesture")
  )
)

(define-method ungroup
  (of-object "GtkGesture")
  (c-name "gtk_gesture_ungroup")
  (return-type "none")
)

(define-method get_group
  (of-object "GtkGesture")
  (c-name "gtk_gesture_get_group")
  (return-type "GList*")
)

(define-method is_grouped_with
  (of-object "GtkGesture")
  (c-name "gtk_gesture_is_grouped_with")
  (return-type "gboolean")
  (parameters
    '("GtkGesture*" "other")
  )
)



;; From gtkgesturelongpress.h

(define-function gtk_gesture_long_press_get_type
  (c-name "gtk_gesture_long_press_get_type")
  (return-type "GType")
)

(define-function gtk_gesture_long_press_new
  (c-name "gtk_gesture_long_press_new")
  (is-constructor-of "GtkGestureLongPress")
  (return-type "GtkGesture*")
)

(define-method set_delay_factor
  (of-object "GtkGestureLongPress")
  (c-name "gtk_gesture_long_press_set_delay_factor")
  (return-type "none")
  (parameters
    '("double" "delay_factor")
  )
)

(define-method get_delay_factor
  (of-object "GtkGestureLongPress")
  (c-name "gtk_gesture_long_press_get_delay_factor")
  (return-type "double")
)



;; From gtkgesturepan.h

(define-function gtk_gesture_pan_get_type
  (c-name "gtk_gesture_pan_get_type")
  (return-type "GType")
)

(define-function gtk_gesture_pan_new
  (c-name "gtk_gesture_pan_new")
  (is-constructor-of "GtkGesturePan")
  (return-type "GtkGesture*")
  (parameters
    '("GtkOrientation" "orientation")
  )
)

(define-method get_orientation
  (of-object "GtkGesturePan")
  (c-name "gtk_gesture_pan_get_orientation")
  (return-type "GtkOrientation")
)

(define-method set_orientation
  (of-object "GtkGesturePan")
  (c-name "gtk_gesture_pan_set_orientation")
  (return-type "none")
  (parameters
    '("GtkOrientation" "orientation")
  )
)



;; From gtkgesturerotate.h

(define-function gtk_gesture_rotate_get_type
  (c-name "gtk_gesture_rotate_get_type")
  (return-type "GType")
)

(define-function gtk_gesture_rotate_new
  (c-name "gtk_gesture_rotate_new")
  (is-constructor-of "GtkGestureRotate")
  (return-type "GtkGesture*")
)

(define-method get_angle_delta
  (of-object "GtkGestureRotate")
  (c-name "gtk_gesture_rotate_get_angle_delta")
  (return-type "double")
)



;; From gtkgesturesingle.h

(define-function gtk_gesture_single_get_type
  (c-name "gtk_gesture_single_get_type")
  (return-type "GType")
)

(define-method get_touch_only
  (of-object "GtkGestureSingle")
  (c-name "gtk_gesture_single_get_touch_only")
  (return-type "gboolean")
)

(define-method set_touch_only
  (of-object "GtkGestureSingle")
  (c-name "gtk_gesture_single_set_touch_only")
  (return-type "none")
  (parameters
    '("gboolean" "touch_only")
  )
)

(define-method get_exclusive
  (of-object "GtkGestureSingle")
  (c-name "gtk_gesture_single_get_exclusive")
  (return-type "gboolean")
)

(define-method set_exclusive
  (of-object "GtkGestureSingle")
  (c-name "gtk_gesture_single_set_exclusive")
  (return-type "none")
  (parameters
    '("gboolean" "exclusive")
  )
)

(define-method get_button
  (of-object "GtkGestureSingle")
  (c-name "gtk_gesture_single_get_button")
  (return-type "guint")
)

(define-method set_button
  (of-object "GtkGestureSingle")
  (c-name "gtk_gesture_single_set_button")
  (return-type "none")
  (parameters
    '("guint" "button")
  )
)

(define-method get_current_button
  (of-object "GtkGestureSingle")
  (c-name "gtk_gesture_single_get_current_button")
  (return-type "guint")
)

(define-method get_current_sequence
  (of-object "GtkGestureSingle")
  (c-name "gtk_gesture_single_get_current_sequence")
  (return-type "GdkEventSequence*")
)



;; From gtkgesturestylus.h

(define-function gtk_gesture_stylus_get_type
  (c-name "gtk_gesture_stylus_get_type")
  (return-type "GType")
)

(define-function gtk_gesture_stylus_new
  (c-name "gtk_gesture_stylus_new")
  (is-constructor-of "GtkGestureStylus")
  (return-type "GtkGesture*")
)

(define-method get_axis
  (of-object "GtkGestureStylus")
  (c-name "gtk_gesture_stylus_get_axis")
  (return-type "gboolean")
  (parameters
    '("GdkAxisUse" "axis")
    '("double*" "value")
  )
)

(define-method get_axes
  (of-object "GtkGestureStylus")
  (c-name "gtk_gesture_stylus_get_axes")
  (return-type "gboolean")
  (parameters
    '("GdkAxisUse[]" "axes")
    '("double**" "values")
  )
)

(define-method get_backlog
  (of-object "GtkGestureStylus")
  (c-name "gtk_gesture_stylus_get_backlog")
  (return-type "gboolean")
  (parameters
    '("GdkTimeCoord**" "backlog")
    '("guint*" "n_elems")
  )
)

(define-method get_device_tool
  (of-object "GtkGestureStylus")
  (c-name "gtk_gesture_stylus_get_device_tool")
  (return-type "GdkDeviceTool*")
)



;; From gtkgestureswipe.h

(define-function gtk_gesture_swipe_get_type
  (c-name "gtk_gesture_swipe_get_type")
  (return-type "GType")
)

(define-function gtk_gesture_swipe_new
  (c-name "gtk_gesture_swipe_new")
  (is-constructor-of "GtkGestureSwipe")
  (return-type "GtkGesture*")
)

(define-method get_velocity
  (of-object "GtkGestureSwipe")
  (c-name "gtk_gesture_swipe_get_velocity")
  (return-type "gboolean")
  (parameters
    '("double*" "velocity_x")
    '("double*" "velocity_y")
  )
)



;; From gtkgesturezoom.h

(define-function gtk_gesture_zoom_get_type
  (c-name "gtk_gesture_zoom_get_type")
  (return-type "GType")
)

(define-function gtk_gesture_zoom_new
  (c-name "gtk_gesture_zoom_new")
  (is-constructor-of "GtkGestureZoom")
  (return-type "GtkGesture*")
)

(define-method get_scale_delta
  (of-object "GtkGestureZoom")
  (c-name "gtk_gesture_zoom_get_scale_delta")
  (return-type "double")
)



;; From gtkglarea.h

(define-function gtk_gl_area_get_type
  (c-name "gtk_gl_area_get_type")
  (return-type "GType")
)

(define-function gtk_gl_area_new
  (c-name "gtk_gl_area_new")
  (is-constructor-of "GtkGlArea")
  (return-type "GtkWidget*")
)

(define-method set_use_es
  (of-object "GtkGLArea")
  (c-name "gtk_gl_area_set_use_es")
  (return-type "none")
  (parameters
    '("gboolean" "use_es")
  )
)

(define-method get_use_es
  (of-object "GtkGLArea")
  (c-name "gtk_gl_area_get_use_es")
  (return-type "gboolean")
)

(define-method set_required_version
  (of-object "GtkGLArea")
  (c-name "gtk_gl_area_set_required_version")
  (return-type "none")
  (parameters
    '("int" "major")
    '("int" "minor")
  )
)

(define-method get_required_version
  (of-object "GtkGLArea")
  (c-name "gtk_gl_area_get_required_version")
  (return-type "none")
  (parameters
    '("int*" "major")
    '("int*" "minor")
  )
)

(define-method get_has_depth_buffer
  (of-object "GtkGLArea")
  (c-name "gtk_gl_area_get_has_depth_buffer")
  (return-type "gboolean")
)

(define-method set_has_depth_buffer
  (of-object "GtkGLArea")
  (c-name "gtk_gl_area_set_has_depth_buffer")
  (return-type "none")
  (parameters
    '("gboolean" "has_depth_buffer")
  )
)

(define-method get_has_stencil_buffer
  (of-object "GtkGLArea")
  (c-name "gtk_gl_area_get_has_stencil_buffer")
  (return-type "gboolean")
)

(define-method set_has_stencil_buffer
  (of-object "GtkGLArea")
  (c-name "gtk_gl_area_set_has_stencil_buffer")
  (return-type "none")
  (parameters
    '("gboolean" "has_stencil_buffer")
  )
)

(define-method get_auto_render
  (of-object "GtkGLArea")
  (c-name "gtk_gl_area_get_auto_render")
  (return-type "gboolean")
)

(define-method set_auto_render
  (of-object "GtkGLArea")
  (c-name "gtk_gl_area_set_auto_render")
  (return-type "none")
  (parameters
    '("gboolean" "auto_render")
  )
)

(define-method queue_render
  (of-object "GtkGLArea")
  (c-name "gtk_gl_area_queue_render")
  (return-type "none")
)

(define-method get_context
  (of-object "GtkGLArea")
  (c-name "gtk_gl_area_get_context")
  (return-type "GdkGLContext*")
)

(define-method make_current
  (of-object "GtkGLArea")
  (c-name "gtk_gl_area_make_current")
  (return-type "none")
)

(define-method attach_buffers
  (of-object "GtkGLArea")
  (c-name "gtk_gl_area_attach_buffers")
  (return-type "none")
)

(define-method set_error
  (of-object "GtkGLArea")
  (c-name "gtk_gl_area_set_error")
  (return-type "none")
  (parameters
    '("const-GError*" "error")
  )
)

(define-method get_error
  (of-object "GtkGLArea")
  (c-name "gtk_gl_area_get_error")
  (return-type "GError*")
)



;; From gtkgrid.h

(define-function gtk_grid_get_type
  (c-name "gtk_grid_get_type")
  (return-type "GType")
)

(define-function gtk_grid_new
  (c-name "gtk_grid_new")
  (is-constructor-of "GtkGrid")
  (return-type "GtkWidget*")
)

(define-method attach
  (of-object "GtkGrid")
  (c-name "gtk_grid_attach")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("int" "column")
    '("int" "row")
    '("int" "width")
    '("int" "height")
  )
)

(define-method attach_next_to
  (of-object "GtkGrid")
  (c-name "gtk_grid_attach_next_to")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("GtkWidget*" "sibling")
    '("GtkPositionType" "side")
    '("int" "width")
    '("int" "height")
  )
)

(define-method get_child_at
  (of-object "GtkGrid")
  (c-name "gtk_grid_get_child_at")
  (return-type "GtkWidget*")
  (parameters
    '("int" "column")
    '("int" "row")
  )
)

(define-method remove
  (of-object "GtkGrid")
  (c-name "gtk_grid_remove")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method insert_row
  (of-object "GtkGrid")
  (c-name "gtk_grid_insert_row")
  (return-type "none")
  (parameters
    '("int" "position")
  )
)

(define-method insert_column
  (of-object "GtkGrid")
  (c-name "gtk_grid_insert_column")
  (return-type "none")
  (parameters
    '("int" "position")
  )
)

(define-method remove_row
  (of-object "GtkGrid")
  (c-name "gtk_grid_remove_row")
  (return-type "none")
  (parameters
    '("int" "position")
  )
)

(define-method remove_column
  (of-object "GtkGrid")
  (c-name "gtk_grid_remove_column")
  (return-type "none")
  (parameters
    '("int" "position")
  )
)

(define-method insert_next_to
  (of-object "GtkGrid")
  (c-name "gtk_grid_insert_next_to")
  (return-type "none")
  (parameters
    '("GtkWidget*" "sibling")
    '("GtkPositionType" "side")
  )
)

(define-method set_row_homogeneous
  (of-object "GtkGrid")
  (c-name "gtk_grid_set_row_homogeneous")
  (return-type "none")
  (parameters
    '("gboolean" "homogeneous")
  )
)

(define-method get_row_homogeneous
  (of-object "GtkGrid")
  (c-name "gtk_grid_get_row_homogeneous")
  (return-type "gboolean")
)

(define-method set_row_spacing
  (of-object "GtkGrid")
  (c-name "gtk_grid_set_row_spacing")
  (return-type "none")
  (parameters
    '("guint" "spacing")
  )
)

(define-method get_row_spacing
  (of-object "GtkGrid")
  (c-name "gtk_grid_get_row_spacing")
  (return-type "guint")
)

(define-method set_column_homogeneous
  (of-object "GtkGrid")
  (c-name "gtk_grid_set_column_homogeneous")
  (return-type "none")
  (parameters
    '("gboolean" "homogeneous")
  )
)

(define-method get_column_homogeneous
  (of-object "GtkGrid")
  (c-name "gtk_grid_get_column_homogeneous")
  (return-type "gboolean")
)

(define-method set_column_spacing
  (of-object "GtkGrid")
  (c-name "gtk_grid_set_column_spacing")
  (return-type "none")
  (parameters
    '("guint" "spacing")
  )
)

(define-method get_column_spacing
  (of-object "GtkGrid")
  (c-name "gtk_grid_get_column_spacing")
  (return-type "guint")
)

(define-method set_row_baseline_position
  (of-object "GtkGrid")
  (c-name "gtk_grid_set_row_baseline_position")
  (return-type "none")
  (parameters
    '("int" "row")
    '("GtkBaselinePosition" "pos")
  )
)

(define-method get_row_baseline_position
  (of-object "GtkGrid")
  (c-name "gtk_grid_get_row_baseline_position")
  (return-type "GtkBaselinePosition")
  (parameters
    '("int" "row")
  )
)

(define-method set_baseline_row
  (of-object "GtkGrid")
  (c-name "gtk_grid_set_baseline_row")
  (return-type "none")
  (parameters
    '("int" "row")
  )
)

(define-method get_baseline_row
  (of-object "GtkGrid")
  (c-name "gtk_grid_get_baseline_row")
  (return-type "int")
)

(define-method query_child
  (of-object "GtkGrid")
  (c-name "gtk_grid_query_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("int*" "column")
    '("int*" "row")
    '("int*" "width")
    '("int*" "height")
  )
)



;; From gtkgridlayout.h

(define-function gtk_grid_layout_new
  (c-name "gtk_grid_layout_new")
  (is-constructor-of "GtkGridLayout")
  (return-type "GtkLayoutManager*")
)

(define-method set_row_homogeneous
  (of-object "GtkGridLayout")
  (c-name "gtk_grid_layout_set_row_homogeneous")
  (return-type "none")
  (parameters
    '("gboolean" "homogeneous")
  )
)

(define-method get_row_homogeneous
  (of-object "GtkGridLayout")
  (c-name "gtk_grid_layout_get_row_homogeneous")
  (return-type "gboolean")
)

(define-method set_row_spacing
  (of-object "GtkGridLayout")
  (c-name "gtk_grid_layout_set_row_spacing")
  (return-type "none")
  (parameters
    '("guint" "spacing")
  )
)

(define-method get_row_spacing
  (of-object "GtkGridLayout")
  (c-name "gtk_grid_layout_get_row_spacing")
  (return-type "guint")
)

(define-method set_column_homogeneous
  (of-object "GtkGridLayout")
  (c-name "gtk_grid_layout_set_column_homogeneous")
  (return-type "none")
  (parameters
    '("gboolean" "homogeneous")
  )
)

(define-method get_column_homogeneous
  (of-object "GtkGridLayout")
  (c-name "gtk_grid_layout_get_column_homogeneous")
  (return-type "gboolean")
)

(define-method set_column_spacing
  (of-object "GtkGridLayout")
  (c-name "gtk_grid_layout_set_column_spacing")
  (return-type "none")
  (parameters
    '("guint" "spacing")
  )
)

(define-method get_column_spacing
  (of-object "GtkGridLayout")
  (c-name "gtk_grid_layout_get_column_spacing")
  (return-type "guint")
)

(define-method set_row_baseline_position
  (of-object "GtkGridLayout")
  (c-name "gtk_grid_layout_set_row_baseline_position")
  (return-type "none")
  (parameters
    '("int" "row")
    '("GtkBaselinePosition" "pos")
  )
)

(define-method get_row_baseline_position
  (of-object "GtkGridLayout")
  (c-name "gtk_grid_layout_get_row_baseline_position")
  (return-type "GtkBaselinePosition")
  (parameters
    '("int" "row")
  )
)

(define-method set_baseline_row
  (of-object "GtkGridLayout")
  (c-name "gtk_grid_layout_set_baseline_row")
  (return-type "none")
  (parameters
    '("int" "row")
  )
)

(define-method get_baseline_row
  (of-object "GtkGridLayout")
  (c-name "gtk_grid_layout_get_baseline_row")
  (return-type "int")
)

(define-method set_row
  (of-object "GtkGridLayoutChild")
  (c-name "gtk_grid_layout_child_set_row")
  (return-type "none")
  (parameters
    '("int" "row")
  )
)

(define-method get_row
  (of-object "GtkGridLayoutChild")
  (c-name "gtk_grid_layout_child_get_row")
  (return-type "int")
)

(define-method set_column
  (of-object "GtkGridLayoutChild")
  (c-name "gtk_grid_layout_child_set_column")
  (return-type "none")
  (parameters
    '("int" "column")
  )
)

(define-method get_column
  (of-object "GtkGridLayoutChild")
  (c-name "gtk_grid_layout_child_get_column")
  (return-type "int")
)

(define-method set_column_span
  (of-object "GtkGridLayoutChild")
  (c-name "gtk_grid_layout_child_set_column_span")
  (return-type "none")
  (parameters
    '("int" "span")
  )
)

(define-method get_column_span
  (of-object "GtkGridLayoutChild")
  (c-name "gtk_grid_layout_child_get_column_span")
  (return-type "int")
)

(define-method set_row_span
  (of-object "GtkGridLayoutChild")
  (c-name "gtk_grid_layout_child_set_row_span")
  (return-type "none")
  (parameters
    '("int" "span")
  )
)

(define-method get_row_span
  (of-object "GtkGridLayoutChild")
  (c-name "gtk_grid_layout_child_get_row_span")
  (return-type "int")
)



;; From gtkgridview.h

(define-function gtk_grid_view_get_type
  (c-name "gtk_grid_view_get_type")
  (return-type "GType")
)

(define-function gtk_grid_view_new
  (c-name "gtk_grid_view_new")
  (is-constructor-of "GtkGridView")
  (return-type "GtkWidget*")
  (parameters
    '("GtkSelectionModel*" "model")
    '("GtkListItemFactory*" "factory")
  )
)

(define-method get_model
  (of-object "GtkGridView")
  (c-name "gtk_grid_view_get_model")
  (return-type "GtkSelectionModel*")
)

(define-method set_model
  (of-object "GtkGridView")
  (c-name "gtk_grid_view_set_model")
  (return-type "none")
  (parameters
    '("GtkSelectionModel*" "model")
  )
)

(define-method set_factory
  (of-object "GtkGridView")
  (c-name "gtk_grid_view_set_factory")
  (return-type "none")
  (parameters
    '("GtkListItemFactory*" "factory")
  )
)

(define-method get_factory
  (of-object "GtkGridView")
  (c-name "gtk_grid_view_get_factory")
  (return-type "GtkListItemFactory*")
)

(define-method get_min_columns
  (of-object "GtkGridView")
  (c-name "gtk_grid_view_get_min_columns")
  (return-type "guint")
)

(define-method set_min_columns
  (of-object "GtkGridView")
  (c-name "gtk_grid_view_set_min_columns")
  (return-type "none")
  (parameters
    '("guint" "min_columns")
  )
)

(define-method get_max_columns
  (of-object "GtkGridView")
  (c-name "gtk_grid_view_get_max_columns")
  (return-type "guint")
)

(define-method set_max_columns
  (of-object "GtkGridView")
  (c-name "gtk_grid_view_set_max_columns")
  (return-type "none")
  (parameters
    '("guint" "max_columns")
  )
)

(define-method set_enable_rubberband
  (of-object "GtkGridView")
  (c-name "gtk_grid_view_set_enable_rubberband")
  (return-type "none")
  (parameters
    '("gboolean" "enable_rubberband")
  )
)

(define-method get_enable_rubberband
  (of-object "GtkGridView")
  (c-name "gtk_grid_view_get_enable_rubberband")
  (return-type "gboolean")
)

(define-method set_single_click_activate
  (of-object "GtkGridView")
  (c-name "gtk_grid_view_set_single_click_activate")
  (return-type "none")
  (parameters
    '("gboolean" "single_click_activate")
  )
)

(define-method get_single_click_activate
  (of-object "GtkGridView")
  (c-name "gtk_grid_view_get_single_click_activate")
  (return-type "gboolean")
)



;; From gtk.h



;; From gtkheaderbar.h

(define-function gtk_header_bar_get_type
  (c-name "gtk_header_bar_get_type")
  (return-type "GType")
)

(define-function gtk_header_bar_new
  (c-name "gtk_header_bar_new")
  (is-constructor-of "GtkHeaderBar")
  (return-type "GtkWidget*")
)

(define-method set_title_widget
  (of-object "GtkHeaderBar")
  (c-name "gtk_header_bar_set_title_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "title_widget")
  )
)

(define-method get_title_widget
  (of-object "GtkHeaderBar")
  (c-name "gtk_header_bar_get_title_widget")
  (return-type "GtkWidget*")
)

(define-method pack_start
  (of-object "GtkHeaderBar")
  (c-name "gtk_header_bar_pack_start")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method pack_end
  (of-object "GtkHeaderBar")
  (c-name "gtk_header_bar_pack_end")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method remove
  (of-object "GtkHeaderBar")
  (c-name "gtk_header_bar_remove")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_show_title_buttons
  (of-object "GtkHeaderBar")
  (c-name "gtk_header_bar_get_show_title_buttons")
  (return-type "gboolean")
)

(define-method set_show_title_buttons
  (of-object "GtkHeaderBar")
  (c-name "gtk_header_bar_set_show_title_buttons")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method set_decoration_layout
  (of-object "GtkHeaderBar")
  (c-name "gtk_header_bar_set_decoration_layout")
  (return-type "none")
  (parameters
    '("const-char*" "layout")
  )
)

(define-method get_decoration_layout
  (of-object "GtkHeaderBar")
  (c-name "gtk_header_bar_get_decoration_layout")
  (return-type "const-char*")
)



;; From gtkicontheme.h

(define-function gtk_icon_theme_error_quark
  (c-name "gtk_icon_theme_error_quark")
  (return-type "GQuark")
)

(define-function gtk_icon_theme_get_type
  (c-name "gtk_icon_theme_get_type")
  (return-type "GType")
)

(define-function gtk_icon_theme_new
  (c-name "gtk_icon_theme_new")
  (is-constructor-of "GtkIconTheme")
  (return-type "GtkIconTheme*")
)

(define-function gtk_icon_theme_get_for_display
  (c-name "gtk_icon_theme_get_for_display")
  (return-type "GtkIconTheme*")
  (parameters
    '("GdkDisplay*" "display")
  )
)

(define-method get_display
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_get_display")
  (return-type "GdkDisplay*")
)

(define-method set_search_path
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_set_search_path")
  (return-type "none")
  (parameters
    '("const-char*-const*" "path")
  )
)

(define-method get_search_path
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_get_search_path")
  (return-type "char**")
)

(define-method add_search_path
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_add_search_path")
  (return-type "none")
  (parameters
    '("const-char*" "path")
  )
)

(define-method set_resource_path
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_set_resource_path")
  (return-type "none")
  (parameters
    '("const-char*-const*" "path")
  )
)

(define-method get_resource_path
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_get_resource_path")
  (return-type "char**")
)

(define-method add_resource_path
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_add_resource_path")
  (return-type "none")
  (parameters
    '("const-char*" "path")
  )
)

(define-method set_theme_name
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_set_theme_name")
  (return-type "none")
  (parameters
    '("const-char*" "theme_name")
  )
)

(define-method get_theme_name
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_get_theme_name")
  (return-type "char*")
)

(define-method has_icon
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_has_icon")
  (return-type "gboolean")
  (parameters
    '("const-char*" "icon_name")
  )
)

(define-method get_icon_sizes
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_get_icon_sizes")
  (return-type "int*")
  (parameters
    '("const-char*" "icon_name")
  )
)

(define-method lookup_icon
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_lookup_icon")
  (return-type "GtkIconPaintable*")
  (parameters
    '("const-char*" "icon_name")
    '("const-char*[]" "fallbacks")
    '("int" "size")
    '("int" "scale")
    '("GtkTextDirection" "direction")
    '("GtkIconLookupFlags" "flags")
  )
)

(define-method lookup_by_gicon
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_lookup_by_gicon")
  (return-type "GtkIconPaintable*")
  (parameters
    '("GIcon*" "icon")
    '("int" "size")
    '("int" "scale")
    '("GtkTextDirection" "direction")
    '("GtkIconLookupFlags" "flags")
  )
)

(define-function gtk_icon_paintable_new_for_file
  (c-name "gtk_icon_paintable_new_for_file")
  (return-type "GtkIconPaintable*")
  (parameters
    '("GFile*" "file")
    '("int" "size")
    '("int" "scale")
  )
)

(define-method get_icon_names
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_get_icon_names")
  (return-type "char**")
)

(define-function gtk_icon_paintable_get_type
  (c-name "gtk_icon_paintable_get_type")
  (return-type "GType")
)

(define-method get_file
  (of-object "GtkIconPaintable")
  (c-name "gtk_icon_paintable_get_file")
  (return-type "GFile*")
)

(define-method get_icon_name
  (of-object "GtkIconPaintable")
  (c-name "gtk_icon_paintable_get_icon_name")
  (return-type "const-char*")
)

(define-method is_symbolic
  (of-object "GtkIconPaintable")
  (c-name "gtk_icon_paintable_is_symbolic")
  (return-type "gboolean")
)



;; From gtkiconview.h

(define-function gtk_icon_view_get_type
  (c-name "gtk_icon_view_get_type")
  (return-type "GType")
)

(define-function gtk_icon_view_new
  (c-name "gtk_icon_view_new")
  (is-constructor-of "GtkIconView")
  (return-type "GtkWidget*")
)

(define-function gtk_icon_view_new_with_area
  (c-name "gtk_icon_view_new_with_area")
  (return-type "GtkWidget*")
  (parameters
    '("GtkCellArea*" "area")
  )
)

(define-function gtk_icon_view_new_with_model
  (c-name "gtk_icon_view_new_with_model")
  (return-type "GtkWidget*")
  (parameters
    '("GtkTreeModel*" "model")
  )
)

(define-method set_model
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_model")
  (return-type "none")
  (parameters
    '("GtkTreeModel*" "model")
  )
)

(define-method get_model
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_model")
  (return-type "GtkTreeModel*")
)

(define-method set_text_column
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_text_column")
  (return-type "none")
  (parameters
    '("int" "column")
  )
)

(define-method get_text_column
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_text_column")
  (return-type "int")
)

(define-method set_markup_column
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_markup_column")
  (return-type "none")
  (parameters
    '("int" "column")
  )
)

(define-method get_markup_column
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_markup_column")
  (return-type "int")
)

(define-method set_pixbuf_column
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_pixbuf_column")
  (return-type "none")
  (parameters
    '("int" "column")
  )
)

(define-method get_pixbuf_column
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_pixbuf_column")
  (return-type "int")
)

(define-method set_item_orientation
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_item_orientation")
  (return-type "none")
  (parameters
    '("GtkOrientation" "orientation")
  )
)

(define-method get_item_orientation
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_item_orientation")
  (return-type "GtkOrientation")
)

(define-method set_columns
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_columns")
  (return-type "none")
  (parameters
    '("int" "columns")
  )
)

(define-method get_columns
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_columns")
  (return-type "int")
)

(define-method set_item_width
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_item_width")
  (return-type "none")
  (parameters
    '("int" "item_width")
  )
)

(define-method get_item_width
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_item_width")
  (return-type "int")
)

(define-method set_spacing
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_spacing")
  (return-type "none")
  (parameters
    '("int" "spacing")
  )
)

(define-method get_spacing
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_spacing")
  (return-type "int")
)

(define-method set_row_spacing
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_row_spacing")
  (return-type "none")
  (parameters
    '("int" "row_spacing")
  )
)

(define-method get_row_spacing
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_row_spacing")
  (return-type "int")
)

(define-method set_column_spacing
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_column_spacing")
  (return-type "none")
  (parameters
    '("int" "column_spacing")
  )
)

(define-method get_column_spacing
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_column_spacing")
  (return-type "int")
)

(define-method set_margin
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_margin")
  (return-type "none")
  (parameters
    '("int" "margin")
  )
)

(define-method get_margin
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_margin")
  (return-type "int")
)

(define-method set_item_padding
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_item_padding")
  (return-type "none")
  (parameters
    '("int" "item_padding")
  )
)

(define-method get_item_padding
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_item_padding")
  (return-type "int")
)

(define-method get_path_at_pos
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_path_at_pos")
  (return-type "GtkTreePath*")
  (parameters
    '("int" "x")
    '("int" "y")
  )
)

(define-method get_item_at_pos
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_item_at_pos")
  (return-type "gboolean")
  (parameters
    '("int" "x")
    '("int" "y")
    '("GtkTreePath**" "path")
    '("GtkCellRenderer**" "cell")
  )
)

(define-method get_visible_range
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_visible_range")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath**" "start_path")
    '("GtkTreePath**" "end_path")
  )
)

(define-method set_activate_on_single_click
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_activate_on_single_click")
  (return-type "none")
  (parameters
    '("gboolean" "single")
  )
)

(define-method get_activate_on_single_click
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_activate_on_single_click")
  (return-type "gboolean")
)

(define-method selected_foreach
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_selected_foreach")
  (return-type "none")
  (parameters
    '("GtkIconViewForeachFunc" "func")
    '("gpointer" "data")
  )
)

(define-method set_selection_mode
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_selection_mode")
  (return-type "none")
  (parameters
    '("GtkSelectionMode" "mode")
  )
)

(define-method get_selection_mode
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_selection_mode")
  (return-type "GtkSelectionMode")
)

(define-method select_path
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_select_path")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-method unselect_path
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_unselect_path")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-method path_is_selected
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_path_is_selected")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-method get_item_row
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_item_row")
  (return-type "int")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-method get_item_column
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_item_column")
  (return-type "int")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-method get_selected_items
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_selected_items")
  (return-type "GList*")
)

(define-method select_all
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_select_all")
  (return-type "none")
)

(define-method unselect_all
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_unselect_all")
  (return-type "none")
)

(define-method item_activated
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_item_activated")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-method set_cursor
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_cursor")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkCellRenderer*" "cell")
    '("gboolean" "start_editing")
  )
)

(define-method get_cursor
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_cursor")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath**" "path")
    '("GtkCellRenderer**" "cell")
  )
)

(define-method scroll_to_path
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_scroll_to_path")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
    '("gboolean" "use_align")
    '("float" "row_align")
    '("float" "col_align")
  )
)

(define-method enable_model_drag_source
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_enable_model_drag_source")
  (return-type "none")
  (parameters
    '("GdkModifierType" "start_button_mask")
    '("GdkContentFormats*" "formats")
    '("GdkDragAction" "actions")
  )
)

(define-method enable_model_drag_dest
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_enable_model_drag_dest")
  (return-type "none")
  (parameters
    '("GdkContentFormats*" "formats")
    '("GdkDragAction" "actions")
  )
)

(define-method unset_model_drag_source
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_unset_model_drag_source")
  (return-type "none")
)

(define-method unset_model_drag_dest
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_unset_model_drag_dest")
  (return-type "none")
)

(define-method set_reorderable
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_reorderable")
  (return-type "none")
  (parameters
    '("gboolean" "reorderable")
  )
)

(define-method get_reorderable
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_reorderable")
  (return-type "gboolean")
)

(define-method set_drag_dest_item
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_drag_dest_item")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkIconViewDropPosition" "pos")
  )
)

(define-method get_drag_dest_item
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_drag_dest_item")
  (return-type "none")
  (parameters
    '("GtkTreePath**" "path")
    '("GtkIconViewDropPosition*" "pos")
  )
)

(define-method get_dest_item_at_pos
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_dest_item_at_pos")
  (return-type "gboolean")
  (parameters
    '("int" "drag_x")
    '("int" "drag_y")
    '("GtkTreePath**" "path")
    '("GtkIconViewDropPosition*" "pos")
  )
)

(define-method create_drag_icon
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_create_drag_icon")
  (return-type "GdkPaintable*")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-method get_cell_rect
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_cell_rect")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkCellRenderer*" "cell")
    '("GdkRectangle*" "rect")
  )
)

(define-method set_tooltip_item
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_tooltip_item")
  (return-type "none")
  (parameters
    '("GtkTooltip*" "tooltip")
    '("GtkTreePath*" "path")
  )
)

(define-method set_tooltip_cell
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_tooltip_cell")
  (return-type "none")
  (parameters
    '("GtkTooltip*" "tooltip")
    '("GtkTreePath*" "path")
    '("GtkCellRenderer*" "cell")
  )
)

(define-method get_tooltip_context
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_tooltip_context")
  (return-type "gboolean")
  (parameters
    '("int" "x")
    '("int" "y")
    '("gboolean" "keyboard_tip")
    '("GtkTreeModel**" "model")
    '("GtkTreePath**" "path")
    '("GtkTreeIter*" "iter")
  )
)

(define-method set_tooltip_column
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_tooltip_column")
  (return-type "none")
  (parameters
    '("int" "column")
  )
)

(define-method get_tooltip_column
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_tooltip_column")
  (return-type "int")
)



;; From gtkimage.h

(define-function gtk_image_get_type
  (c-name "gtk_image_get_type")
  (return-type "GType")
)

(define-function gtk_image_new
  (c-name "gtk_image_new")
  (is-constructor-of "GtkImage")
  (return-type "GtkWidget*")
)

(define-function gtk_image_new_from_file
  (c-name "gtk_image_new_from_file")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "filename")
  )
)

(define-function gtk_image_new_from_resource
  (c-name "gtk_image_new_from_resource")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "resource_path")
  )
)

(define-function gtk_image_new_from_pixbuf
  (c-name "gtk_image_new_from_pixbuf")
  (return-type "GtkWidget*")
  (parameters
    '("GdkPixbuf*" "pixbuf")
  )
)

(define-function gtk_image_new_from_paintable
  (c-name "gtk_image_new_from_paintable")
  (return-type "GtkWidget*")
  (parameters
    '("GdkPaintable*" "paintable")
  )
)

(define-function gtk_image_new_from_icon_name
  (c-name "gtk_image_new_from_icon_name")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "icon_name")
  )
)

(define-function gtk_image_new_from_gicon
  (c-name "gtk_image_new_from_gicon")
  (return-type "GtkWidget*")
  (parameters
    '("GIcon*" "icon")
  )
)

(define-method clear
  (of-object "GtkImage")
  (c-name "gtk_image_clear")
  (return-type "none")
)

(define-method set_from_file
  (of-object "GtkImage")
  (c-name "gtk_image_set_from_file")
  (return-type "none")
  (parameters
    '("const-char*" "filename")
  )
)

(define-method set_from_resource
  (of-object "GtkImage")
  (c-name "gtk_image_set_from_resource")
  (return-type "none")
  (parameters
    '("const-char*" "resource_path")
  )
)

(define-method set_from_pixbuf
  (of-object "GtkImage")
  (c-name "gtk_image_set_from_pixbuf")
  (return-type "none")
  (parameters
    '("GdkPixbuf*" "pixbuf")
  )
)

(define-method set_from_paintable
  (of-object "GtkImage")
  (c-name "gtk_image_set_from_paintable")
  (return-type "none")
  (parameters
    '("GdkPaintable*" "paintable")
  )
)

(define-method set_from_icon_name
  (of-object "GtkImage")
  (c-name "gtk_image_set_from_icon_name")
  (return-type "none")
  (parameters
    '("const-char*" "icon_name")
  )
)

(define-method set_from_gicon
  (of-object "GtkImage")
  (c-name "gtk_image_set_from_gicon")
  (return-type "none")
  (parameters
    '("GIcon*" "icon")
  )
)

(define-method set_pixel_size
  (of-object "GtkImage")
  (c-name "gtk_image_set_pixel_size")
  (return-type "none")
  (parameters
    '("int" "pixel_size")
  )
)

(define-method set_icon_size
  (of-object "GtkImage")
  (c-name "gtk_image_set_icon_size")
  (return-type "none")
  (parameters
    '("GtkIconSize" "icon_size")
  )
)

(define-method get_storage_type
  (of-object "GtkImage")
  (c-name "gtk_image_get_storage_type")
  (return-type "GtkImageType")
)

(define-method get_paintable
  (of-object "GtkImage")
  (c-name "gtk_image_get_paintable")
  (return-type "GdkPaintable*")
)

(define-method get_icon_name
  (of-object "GtkImage")
  (c-name "gtk_image_get_icon_name")
  (return-type "const-char*")
)

(define-method get_gicon
  (of-object "GtkImage")
  (c-name "gtk_image_get_gicon")
  (return-type "GIcon*")
)

(define-method get_pixel_size
  (of-object "GtkImage")
  (c-name "gtk_image_get_pixel_size")
  (return-type "int")
)

(define-method get_icon_size
  (of-object "GtkImage")
  (c-name "gtk_image_get_icon_size")
  (return-type "GtkIconSize")
)



;; From gtkimcontextbroadway.h

(define-function gtk_im_context_broadway_get_type
  (c-name "gtk_im_context_broadway_get_type")
  (return-type "GType")
)



;; From gtkimcontext.h

(define-function gtk_im_context_get_type
  (c-name "gtk_im_context_get_type")
  (return-type "GType")
)

(define-method set_client_widget
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_set_client_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method get_preedit_string
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_get_preedit_string")
  (return-type "none")
  (parameters
    '("char**" "str")
    '("PangoAttrList**" "attrs")
    '("int*" "cursor_pos")
  )
)

(define-method filter_keypress
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_filter_keypress")
  (return-type "gboolean")
  (parameters
    '("GdkEvent*" "event")
  )
)

(define-method filter_key
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_filter_key")
  (return-type "gboolean")
  (parameters
    '("gboolean" "press")
    '("GdkSurface*" "surface")
    '("GdkDevice*" "device")
    '("guint32" "time")
    '("guint" "keycode")
    '("GdkModifierType" "state")
    '("int" "group")
  )
)

(define-method focus_in
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_focus_in")
  (return-type "none")
)

(define-method focus_out
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_focus_out")
  (return-type "none")
)

(define-method reset
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_reset")
  (return-type "none")
)

(define-method set_cursor_location
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_set_cursor_location")
  (return-type "none")
  (parameters
    '("const-GdkRectangle*" "area")
  )
)

(define-method set_use_preedit
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_set_use_preedit")
  (return-type "none")
  (parameters
    '("gboolean" "use_preedit")
  )
)

(define-method set_surrounding
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_set_surrounding")
  (return-type "none")
  (parameters
    '("const-char*" "text")
    '("int" "len")
    '("int" "cursor_index")
  )
)

(define-method get_surrounding
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_get_surrounding")
  (return-type "gboolean")
  (parameters
    '("char**" "text")
    '("int*" "cursor_index")
  )
)

(define-method delete_surrounding
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_delete_surrounding")
  (return-type "gboolean")
  (parameters
    '("int" "offset")
    '("int" "n_chars")
  )
)



;; From gtkimcontextime.h

(define-function gtk_im_context_ime_get_type
  (c-name "gtk_im_context_ime_get_type")
  (return-type "GType")
)

(define-function gtk_im_context_ime_register_type
  (c-name "gtk_im_context_ime_register_type")
  (return-type "none")
  (parameters
    '("GTypeModule*" "type_module")
  )
)

(define-function gtk_im_context_ime_new
  (c-name "gtk_im_context_ime_new")
  (is-constructor-of "GtkImContextIme")
  (return-type "GtkIMContext*")
)



;; From gtkimcontextquartz.h

(define-function gtk_im_context_quartz_get_type
  (c-name "gtk_im_context_quartz_get_type")
  (return-type "GType")
)



;; From gtkimcontextsimple.h

(define-function gtk_im_context_simple_get_type
  (c-name "gtk_im_context_simple_get_type")
  (return-type "GType")
)

(define-function gtk_im_context_simple_new
  (c-name "gtk_im_context_simple_new")
  (is-constructor-of "GtkImContextSimple")
  (return-type "GtkIMContext*")
)

(define-method add_table
  (of-object "GtkIMContextSimple")
  (c-name "gtk_im_context_simple_add_table")
  (return-type "none")
  (parameters
    '("guint16*" "data")
    '("int" "max_seq_len")
    '("int" "n_seqs")
  )
)

(define-method add_compose_file
  (of-object "GtkIMContextSimple")
  (c-name "gtk_im_context_simple_add_compose_file")
  (return-type "none")
  (parameters
    '("const-char*" "compose_file")
  )
)



;; From gtkimcontextsimpleseqs.h



;; From gtkimcontextwayland.h

(define-function gtk_im_context_wayland_get_type
  (c-name "gtk_im_context_wayland_get_type")
  (return-type "GType")
)



;; From gtkimmodule.h

(define-function gtk_im_modules_init
  (c-name "gtk_im_modules_init")
  (return-type "none")
)



;; From gtkimmulticontext.h

(define-function gtk_im_multicontext_get_type
  (c-name "gtk_im_multicontext_get_type")
  (return-type "GType")
)

(define-function gtk_im_multicontext_new
  (c-name "gtk_im_multicontext_new")
  (is-constructor-of "GtkImMulticontext")
  (return-type "GtkIMContext*")
)

(define-method get_context_id
  (of-object "GtkIMMulticontext")
  (c-name "gtk_im_multicontext_get_context_id")
  (return-type "const-char*")
)

(define-method set_context_id
  (of-object "GtkIMMulticontext")
  (c-name "gtk_im_multicontext_set_context_id")
  (return-type "none")
  (parameters
    '("const-char*" "context_id")
  )
)



;; From gtkinfobar.h

(define-function gtk_info_bar_get_type
  (c-name "gtk_info_bar_get_type")
  (return-type "GType")
)

(define-function gtk_info_bar_new
  (c-name "gtk_info_bar_new")
  (is-constructor-of "GtkInfoBar")
  (return-type "GtkWidget*")
)

(define-function gtk_info_bar_new_with_buttons
  (c-name "gtk_info_bar_new_with_buttons")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "first_button_text")
  )
  (varargs #t)
)

(define-method add_action_widget
  (of-object "GtkInfoBar")
  (c-name "gtk_info_bar_add_action_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("int" "response_id")
  )
)

(define-method remove_action_widget
  (of-object "GtkInfoBar")
  (c-name "gtk_info_bar_remove_action_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method add_button
  (of-object "GtkInfoBar")
  (c-name "gtk_info_bar_add_button")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "button_text")
    '("int" "response_id")
  )
)

(define-method add_buttons
  (of-object "GtkInfoBar")
  (c-name "gtk_info_bar_add_buttons")
  (return-type "none")
  (parameters
    '("const-char*" "first_button_text")
  )
  (varargs #t)
)

(define-method add_child
  (of-object "GtkInfoBar")
  (c-name "gtk_info_bar_add_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method remove_child
  (of-object "GtkInfoBar")
  (c-name "gtk_info_bar_remove_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method set_response_sensitive
  (of-object "GtkInfoBar")
  (c-name "gtk_info_bar_set_response_sensitive")
  (return-type "none")
  (parameters
    '("int" "response_id")
    '("gboolean" "setting")
  )
)

(define-method set_default_response
  (of-object "GtkInfoBar")
  (c-name "gtk_info_bar_set_default_response")
  (return-type "none")
  (parameters
    '("int" "response_id")
  )
)

(define-method response
  (of-object "GtkInfoBar")
  (c-name "gtk_info_bar_response")
  (return-type "none")
  (parameters
    '("int" "response_id")
  )
)

(define-method set_message_type
  (of-object "GtkInfoBar")
  (c-name "gtk_info_bar_set_message_type")
  (return-type "none")
  (parameters
    '("GtkMessageType" "message_type")
  )
)

(define-method get_message_type
  (of-object "GtkInfoBar")
  (c-name "gtk_info_bar_get_message_type")
  (return-type "GtkMessageType")
)

(define-method set_show_close_button
  (of-object "GtkInfoBar")
  (c-name "gtk_info_bar_set_show_close_button")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_show_close_button
  (of-object "GtkInfoBar")
  (c-name "gtk_info_bar_get_show_close_button")
  (return-type "gboolean")
)

(define-method set_revealed
  (of-object "GtkInfoBar")
  (c-name "gtk_info_bar_set_revealed")
  (return-type "none")
  (parameters
    '("gboolean" "revealed")
  )
)

(define-method get_revealed
  (of-object "GtkInfoBar")
  (c-name "gtk_info_bar_get_revealed")
  (return-type "gboolean")
)



;; From gtkintl.h



;; From gtklabel.h

(define-function gtk_label_get_type
  (c-name "gtk_label_get_type")
  (return-type "GType")
)

(define-function gtk_label_new
  (c-name "gtk_label_new")
  (is-constructor-of "GtkLabel")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "str")
  )
)

(define-function gtk_label_new_with_mnemonic
  (c-name "gtk_label_new_with_mnemonic")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "str")
  )
)

(define-method set_text
  (of-object "GtkLabel")
  (c-name "gtk_label_set_text")
  (return-type "none")
  (parameters
    '("const-char*" "str")
  )
)

(define-method get_text
  (of-object "GtkLabel")
  (c-name "gtk_label_get_text")
  (return-type "const-char*")
)

(define-method set_attributes
  (of-object "GtkLabel")
  (c-name "gtk_label_set_attributes")
  (return-type "none")
  (parameters
    '("PangoAttrList*" "attrs")
  )
)

(define-method get_attributes
  (of-object "GtkLabel")
  (c-name "gtk_label_get_attributes")
  (return-type "PangoAttrList*")
)

(define-method set_label
  (of-object "GtkLabel")
  (c-name "gtk_label_set_label")
  (return-type "none")
  (parameters
    '("const-char*" "str")
  )
)

(define-method get_label
  (of-object "GtkLabel")
  (c-name "gtk_label_get_label")
  (return-type "const-char*")
)

(define-method set_markup
  (of-object "GtkLabel")
  (c-name "gtk_label_set_markup")
  (return-type "none")
  (parameters
    '("const-char*" "str")
  )
)

(define-method set_use_markup
  (of-object "GtkLabel")
  (c-name "gtk_label_set_use_markup")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_use_markup
  (of-object "GtkLabel")
  (c-name "gtk_label_get_use_markup")
  (return-type "gboolean")
)

(define-method set_use_underline
  (of-object "GtkLabel")
  (c-name "gtk_label_set_use_underline")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_use_underline
  (of-object "GtkLabel")
  (c-name "gtk_label_get_use_underline")
  (return-type "gboolean")
)

(define-method set_markup_with_mnemonic
  (of-object "GtkLabel")
  (c-name "gtk_label_set_markup_with_mnemonic")
  (return-type "none")
  (parameters
    '("const-char*" "str")
  )
)

(define-method get_mnemonic_keyval
  (of-object "GtkLabel")
  (c-name "gtk_label_get_mnemonic_keyval")
  (return-type "guint")
)

(define-method set_mnemonic_widget
  (of-object "GtkLabel")
  (c-name "gtk_label_set_mnemonic_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method get_mnemonic_widget
  (of-object "GtkLabel")
  (c-name "gtk_label_get_mnemonic_widget")
  (return-type "GtkWidget*")
)

(define-method set_text_with_mnemonic
  (of-object "GtkLabel")
  (c-name "gtk_label_set_text_with_mnemonic")
  (return-type "none")
  (parameters
    '("const-char*" "str")
  )
)

(define-method set_justify
  (of-object "GtkLabel")
  (c-name "gtk_label_set_justify")
  (return-type "none")
  (parameters
    '("GtkJustification" "jtype")
  )
)

(define-method get_justify
  (of-object "GtkLabel")
  (c-name "gtk_label_get_justify")
  (return-type "GtkJustification")
)

(define-method set_ellipsize
  (of-object "GtkLabel")
  (c-name "gtk_label_set_ellipsize")
  (return-type "none")
  (parameters
    '("PangoEllipsizeMode" "mode")
  )
)

(define-method get_ellipsize
  (of-object "GtkLabel")
  (c-name "gtk_label_get_ellipsize")
  (return-type "PangoEllipsizeMode")
)

(define-method set_width_chars
  (of-object "GtkLabel")
  (c-name "gtk_label_set_width_chars")
  (return-type "none")
  (parameters
    '("int" "n_chars")
  )
)

(define-method get_width_chars
  (of-object "GtkLabel")
  (c-name "gtk_label_get_width_chars")
  (return-type "int")
)

(define-method set_max_width_chars
  (of-object "GtkLabel")
  (c-name "gtk_label_set_max_width_chars")
  (return-type "none")
  (parameters
    '("int" "n_chars")
  )
)

(define-method get_max_width_chars
  (of-object "GtkLabel")
  (c-name "gtk_label_get_max_width_chars")
  (return-type "int")
)

(define-method set_lines
  (of-object "GtkLabel")
  (c-name "gtk_label_set_lines")
  (return-type "none")
  (parameters
    '("int" "lines")
  )
)

(define-method get_lines
  (of-object "GtkLabel")
  (c-name "gtk_label_get_lines")
  (return-type "int")
)

(define-method set_wrap
  (of-object "GtkLabel")
  (c-name "gtk_label_set_wrap")
  (return-type "none")
  (parameters
    '("gboolean" "wrap")
  )
)

(define-method get_wrap
  (of-object "GtkLabel")
  (c-name "gtk_label_get_wrap")
  (return-type "gboolean")
)

(define-method set_wrap_mode
  (of-object "GtkLabel")
  (c-name "gtk_label_set_wrap_mode")
  (return-type "none")
  (parameters
    '("PangoWrapMode" "wrap_mode")
  )
)

(define-method get_wrap_mode
  (of-object "GtkLabel")
  (c-name "gtk_label_get_wrap_mode")
  (return-type "PangoWrapMode")
)

(define-method set_selectable
  (of-object "GtkLabel")
  (c-name "gtk_label_set_selectable")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_selectable
  (of-object "GtkLabel")
  (c-name "gtk_label_get_selectable")
  (return-type "gboolean")
)

(define-method select_region
  (of-object "GtkLabel")
  (c-name "gtk_label_select_region")
  (return-type "none")
  (parameters
    '("int" "start_offset")
    '("int" "end_offset")
  )
)

(define-method get_selection_bounds
  (of-object "GtkLabel")
  (c-name "gtk_label_get_selection_bounds")
  (return-type "gboolean")
  (parameters
    '("int*" "start")
    '("int*" "end")
  )
)

(define-method get_layout
  (of-object "GtkLabel")
  (c-name "gtk_label_get_layout")
  (return-type "PangoLayout*")
)

(define-method get_layout_offsets
  (of-object "GtkLabel")
  (c-name "gtk_label_get_layout_offsets")
  (return-type "none")
  (parameters
    '("int*" "x")
    '("int*" "y")
  )
)

(define-method set_single_line_mode
  (of-object "GtkLabel")
  (c-name "gtk_label_set_single_line_mode")
  (return-type "none")
  (parameters
    '("gboolean" "single_line_mode")
  )
)

(define-method get_single_line_mode
  (of-object "GtkLabel")
  (c-name "gtk_label_get_single_line_mode")
  (return-type "gboolean")
)

(define-method get_current_uri
  (of-object "GtkLabel")
  (c-name "gtk_label_get_current_uri")
  (return-type "const-char*")
)

(define-method set_xalign
  (of-object "GtkLabel")
  (c-name "gtk_label_set_xalign")
  (return-type "none")
  (parameters
    '("float" "xalign")
  )
)

(define-method get_xalign
  (of-object "GtkLabel")
  (c-name "gtk_label_get_xalign")
  (return-type "float")
)

(define-method set_yalign
  (of-object "GtkLabel")
  (c-name "gtk_label_set_yalign")
  (return-type "none")
  (parameters
    '("float" "yalign")
  )
)

(define-method get_yalign
  (of-object "GtkLabel")
  (c-name "gtk_label_get_yalign")
  (return-type "float")
)

(define-method set_extra_menu
  (of-object "GtkLabel")
  (c-name "gtk_label_set_extra_menu")
  (return-type "none")
  (parameters
    '("GMenuModel*" "model")
  )
)

(define-method get_extra_menu
  (of-object "GtkLabel")
  (c-name "gtk_label_get_extra_menu")
  (return-type "GMenuModel*")
)



;; From gtklayoutchild.h

(define-method get_layout_manager
  (of-object "GtkLayoutChild")
  (c-name "gtk_layout_child_get_layout_manager")
  (return-type "GtkLayoutManager*")
)

(define-method get_child_widget
  (of-object "GtkLayoutChild")
  (c-name "gtk_layout_child_get_child_widget")
  (return-type "GtkWidget*")
)



;; From gtklayoutmanager.h

(define-method measure
  (of-object "GtkLayoutManager")
  (c-name "gtk_layout_manager_measure")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("GtkOrientation" "orientation")
    '("int" "for_size")
    '("int*" "minimum")
    '("int*" "natural")
    '("int*" "minimum_baseline")
    '("int*" "natural_baseline")
  )
)

(define-method allocate
  (of-object "GtkLayoutManager")
  (c-name "gtk_layout_manager_allocate")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("int" "width")
    '("int" "height")
    '("int" "baseline")
  )
)

(define-method get_request_mode
  (of-object "GtkLayoutManager")
  (c-name "gtk_layout_manager_get_request_mode")
  (return-type "GtkSizeRequestMode")
)

(define-method get_widget
  (of-object "GtkLayoutManager")
  (c-name "gtk_layout_manager_get_widget")
  (return-type "GtkWidget*")
)

(define-method layout_changed
  (of-object "GtkLayoutManager")
  (c-name "gtk_layout_manager_layout_changed")
  (return-type "none")
)

(define-method get_layout_child
  (of-object "GtkLayoutManager")
  (c-name "gtk_layout_manager_get_layout_child")
  (return-type "GtkLayoutChild*")
  (parameters
    '("GtkWidget*" "child")
  )
)



;; From gtklevelbar.h

(define-function gtk_level_bar_get_type
  (c-name "gtk_level_bar_get_type")
  (return-type "GType")
)

(define-function gtk_level_bar_new
  (c-name "gtk_level_bar_new")
  (is-constructor-of "GtkLevelBar")
  (return-type "GtkWidget*")
)

(define-function gtk_level_bar_new_for_interval
  (c-name "gtk_level_bar_new_for_interval")
  (return-type "GtkWidget*")
  (parameters
    '("double" "min_value")
    '("double" "max_value")
  )
)

(define-method set_mode
  (of-object "GtkLevelBar")
  (c-name "gtk_level_bar_set_mode")
  (return-type "none")
  (parameters
    '("GtkLevelBarMode" "mode")
  )
)

(define-method get_mode
  (of-object "GtkLevelBar")
  (c-name "gtk_level_bar_get_mode")
  (return-type "GtkLevelBarMode")
)

(define-method set_value
  (of-object "GtkLevelBar")
  (c-name "gtk_level_bar_set_value")
  (return-type "none")
  (parameters
    '("double" "value")
  )
)

(define-method get_value
  (of-object "GtkLevelBar")
  (c-name "gtk_level_bar_get_value")
  (return-type "double")
)

(define-method set_min_value
  (of-object "GtkLevelBar")
  (c-name "gtk_level_bar_set_min_value")
  (return-type "none")
  (parameters
    '("double" "value")
  )
)

(define-method get_min_value
  (of-object "GtkLevelBar")
  (c-name "gtk_level_bar_get_min_value")
  (return-type "double")
)

(define-method set_max_value
  (of-object "GtkLevelBar")
  (c-name "gtk_level_bar_set_max_value")
  (return-type "none")
  (parameters
    '("double" "value")
  )
)

(define-method get_max_value
  (of-object "GtkLevelBar")
  (c-name "gtk_level_bar_get_max_value")
  (return-type "double")
)

(define-method set_inverted
  (of-object "GtkLevelBar")
  (c-name "gtk_level_bar_set_inverted")
  (return-type "none")
  (parameters
    '("gboolean" "inverted")
  )
)

(define-method get_inverted
  (of-object "GtkLevelBar")
  (c-name "gtk_level_bar_get_inverted")
  (return-type "gboolean")
)

(define-method add_offset_value
  (of-object "GtkLevelBar")
  (c-name "gtk_level_bar_add_offset_value")
  (return-type "none")
  (parameters
    '("const-char*" "name")
    '("double" "value")
  )
)

(define-method remove_offset_value
  (of-object "GtkLevelBar")
  (c-name "gtk_level_bar_remove_offset_value")
  (return-type "none")
  (parameters
    '("const-char*" "name")
  )
)

(define-method get_offset_value
  (of-object "GtkLevelBar")
  (c-name "gtk_level_bar_get_offset_value")
  (return-type "gboolean")
  (parameters
    '("const-char*" "name")
    '("double*" "value")
  )
)



;; From gtklinkbutton.h

(define-function gtk_link_button_get_type
  (c-name "gtk_link_button_get_type")
  (return-type "GType")
)

(define-function gtk_link_button_new
  (c-name "gtk_link_button_new")
  (is-constructor-of "GtkLinkButton")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "uri")
  )
)

(define-function gtk_link_button_new_with_label
  (c-name "gtk_link_button_new_with_label")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "uri")
    '("const-char*" "label")
  )
)

(define-method get_uri
  (of-object "GtkLinkButton")
  (c-name "gtk_link_button_get_uri")
  (return-type "const-char*")
)

(define-method set_uri
  (of-object "GtkLinkButton")
  (c-name "gtk_link_button_set_uri")
  (return-type "none")
  (parameters
    '("const-char*" "uri")
  )
)

(define-method get_visited
  (of-object "GtkLinkButton")
  (c-name "gtk_link_button_get_visited")
  (return-type "gboolean")
)

(define-method set_visited
  (of-object "GtkLinkButton")
  (c-name "gtk_link_button_set_visited")
  (return-type "none")
  (parameters
    '("gboolean" "visited")
  )
)



;; From gtklistbase.h

(define-function gtk_list_base_get_type
  (c-name "gtk_list_base_get_type")
  (return-type "GType")
)



;; From gtklistbox.h

(define-function gtk_list_box_row_get_type
  (c-name "gtk_list_box_row_get_type")
  (return-type "GType")
)

(define-function gtk_list_box_row_new
  (c-name "gtk_list_box_row_new")
  (is-constructor-of "GtkListBoxRow")
  (return-type "GtkWidget*")
)

(define-method set_child
  (of-object "GtkListBoxRow")
  (c-name "gtk_list_box_row_set_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_child
  (of-object "GtkListBoxRow")
  (c-name "gtk_list_box_row_get_child")
  (return-type "GtkWidget*")
)

(define-method get_header
  (of-object "GtkListBoxRow")
  (c-name "gtk_list_box_row_get_header")
  (return-type "GtkWidget*")
)

(define-method set_header
  (of-object "GtkListBoxRow")
  (c-name "gtk_list_box_row_set_header")
  (return-type "none")
  (parameters
    '("GtkWidget*" "header")
  )
)

(define-method get_index
  (of-object "GtkListBoxRow")
  (c-name "gtk_list_box_row_get_index")
  (return-type "int")
)

(define-method changed
  (of-object "GtkListBoxRow")
  (c-name "gtk_list_box_row_changed")
  (return-type "none")
)

(define-method is_selected
  (of-object "GtkListBoxRow")
  (c-name "gtk_list_box_row_is_selected")
  (return-type "gboolean")
)

(define-method set_selectable
  (of-object "GtkListBoxRow")
  (c-name "gtk_list_box_row_set_selectable")
  (return-type "none")
  (parameters
    '("gboolean" "selectable")
  )
)

(define-method get_selectable
  (of-object "GtkListBoxRow")
  (c-name "gtk_list_box_row_get_selectable")
  (return-type "gboolean")
)

(define-method set_activatable
  (of-object "GtkListBoxRow")
  (c-name "gtk_list_box_row_set_activatable")
  (return-type "none")
  (parameters
    '("gboolean" "activatable")
  )
)

(define-method get_activatable
  (of-object "GtkListBoxRow")
  (c-name "gtk_list_box_row_get_activatable")
  (return-type "gboolean")
)

(define-function gtk_list_box_get_type
  (c-name "gtk_list_box_get_type")
  (return-type "GType")
)

(define-method prepend
  (of-object "GtkListBox")
  (c-name "gtk_list_box_prepend")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method append
  (of-object "GtkListBox")
  (c-name "gtk_list_box_append")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method insert
  (of-object "GtkListBox")
  (c-name "gtk_list_box_insert")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("int" "position")
  )
)

(define-method remove
  (of-object "GtkListBox")
  (c-name "gtk_list_box_remove")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_selected_row
  (of-object "GtkListBox")
  (c-name "gtk_list_box_get_selected_row")
  (return-type "GtkListBoxRow*")
)

(define-method get_row_at_index
  (of-object "GtkListBox")
  (c-name "gtk_list_box_get_row_at_index")
  (return-type "GtkListBoxRow*")
  (parameters
    '("int" "index_")
  )
)

(define-method get_row_at_y
  (of-object "GtkListBox")
  (c-name "gtk_list_box_get_row_at_y")
  (return-type "GtkListBoxRow*")
  (parameters
    '("int" "y")
  )
)

(define-method select_row
  (of-object "GtkListBox")
  (c-name "gtk_list_box_select_row")
  (return-type "none")
  (parameters
    '("GtkListBoxRow*" "row")
  )
)

(define-method set_placeholder
  (of-object "GtkListBox")
  (c-name "gtk_list_box_set_placeholder")
  (return-type "none")
  (parameters
    '("GtkWidget*" "placeholder")
  )
)

(define-method set_adjustment
  (of-object "GtkListBox")
  (c-name "gtk_list_box_set_adjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment")
  )
)

(define-method get_adjustment
  (of-object "GtkListBox")
  (c-name "gtk_list_box_get_adjustment")
  (return-type "GtkAdjustment*")
)

(define-method selected_foreach
  (of-object "GtkListBox")
  (c-name "gtk_list_box_selected_foreach")
  (return-type "none")
  (parameters
    '("GtkListBoxForeachFunc" "func")
    '("gpointer" "data")
  )
)

(define-method get_selected_rows
  (of-object "GtkListBox")
  (c-name "gtk_list_box_get_selected_rows")
  (return-type "GList*")
)

(define-method unselect_row
  (of-object "GtkListBox")
  (c-name "gtk_list_box_unselect_row")
  (return-type "none")
  (parameters
    '("GtkListBoxRow*" "row")
  )
)

(define-method select_all
  (of-object "GtkListBox")
  (c-name "gtk_list_box_select_all")
  (return-type "none")
)

(define-method unselect_all
  (of-object "GtkListBox")
  (c-name "gtk_list_box_unselect_all")
  (return-type "none")
)

(define-method set_selection_mode
  (of-object "GtkListBox")
  (c-name "gtk_list_box_set_selection_mode")
  (return-type "none")
  (parameters
    '("GtkSelectionMode" "mode")
  )
)

(define-method get_selection_mode
  (of-object "GtkListBox")
  (c-name "gtk_list_box_get_selection_mode")
  (return-type "GtkSelectionMode")
)

(define-method set_filter_func
  (of-object "GtkListBox")
  (c-name "gtk_list_box_set_filter_func")
  (return-type "none")
  (parameters
    '("GtkListBoxFilterFunc" "filter_func")
    '("gpointer" "user_data")
    '("GDestroyNotify" "destroy")
  )
)

(define-method set_header_func
  (of-object "GtkListBox")
  (c-name "gtk_list_box_set_header_func")
  (return-type "none")
  (parameters
    '("GtkListBoxUpdateHeaderFunc" "update_header")
    '("gpointer" "user_data")
    '("GDestroyNotify" "destroy")
  )
)

(define-method invalidate_filter
  (of-object "GtkListBox")
  (c-name "gtk_list_box_invalidate_filter")
  (return-type "none")
)

(define-method invalidate_sort
  (of-object "GtkListBox")
  (c-name "gtk_list_box_invalidate_sort")
  (return-type "none")
)

(define-method invalidate_headers
  (of-object "GtkListBox")
  (c-name "gtk_list_box_invalidate_headers")
  (return-type "none")
)

(define-method set_sort_func
  (of-object "GtkListBox")
  (c-name "gtk_list_box_set_sort_func")
  (return-type "none")
  (parameters
    '("GtkListBoxSortFunc" "sort_func")
    '("gpointer" "user_data")
    '("GDestroyNotify" "destroy")
  )
)

(define-method set_activate_on_single_click
  (of-object "GtkListBox")
  (c-name "gtk_list_box_set_activate_on_single_click")
  (return-type "none")
  (parameters
    '("gboolean" "single")
  )
)

(define-method get_activate_on_single_click
  (of-object "GtkListBox")
  (c-name "gtk_list_box_get_activate_on_single_click")
  (return-type "gboolean")
)

(define-method drag_unhighlight_row
  (of-object "GtkListBox")
  (c-name "gtk_list_box_drag_unhighlight_row")
  (return-type "none")
)

(define-method drag_highlight_row
  (of-object "GtkListBox")
  (c-name "gtk_list_box_drag_highlight_row")
  (return-type "none")
  (parameters
    '("GtkListBoxRow*" "row")
  )
)

(define-function gtk_list_box_new
  (c-name "gtk_list_box_new")
  (is-constructor-of "GtkListBox")
  (return-type "GtkWidget*")
)

(define-method bind_model
  (of-object "GtkListBox")
  (c-name "gtk_list_box_bind_model")
  (return-type "none")
  (parameters
    '("GListModel*" "model")
    '("GtkListBoxCreateWidgetFunc" "create_widget_func")
    '("gpointer" "user_data")
    '("GDestroyNotify" "user_data_free_func")
  )
)

(define-method set_show_separators
  (of-object "GtkListBox")
  (c-name "gtk_list_box_set_show_separators")
  (return-type "none")
  (parameters
    '("gboolean" "show_separators")
  )
)

(define-method get_show_separators
  (of-object "GtkListBox")
  (c-name "gtk_list_box_get_show_separators")
  (return-type "gboolean")
)



;; From gtklistitemfactory.h

(define-function gtk_list_item_factory_get_type
  (c-name "gtk_list_item_factory_get_type")
  (return-type "GType")
)



;; From gtklistitem.h

(define-function gtk_list_item_get_type
  (c-name "gtk_list_item_get_type")
  (return-type "GType")
)

(define-method get_item
  (of-object "GtkListItem")
  (c-name "gtk_list_item_get_item")
  (return-type "gpointer")
)

(define-method get_position
  (of-object "GtkListItem")
  (c-name "gtk_list_item_get_position")
  (return-type "guint")
)

(define-method get_selected
  (of-object "GtkListItem")
  (c-name "gtk_list_item_get_selected")
  (return-type "gboolean")
)

(define-method get_selectable
  (of-object "GtkListItem")
  (c-name "gtk_list_item_get_selectable")
  (return-type "gboolean")
)

(define-method set_selectable
  (of-object "GtkListItem")
  (c-name "gtk_list_item_set_selectable")
  (return-type "none")
  (parameters
    '("gboolean" "selectable")
  )
)

(define-method get_activatable
  (of-object "GtkListItem")
  (c-name "gtk_list_item_get_activatable")
  (return-type "gboolean")
)

(define-method set_activatable
  (of-object "GtkListItem")
  (c-name "gtk_list_item_set_activatable")
  (return-type "none")
  (parameters
    '("gboolean" "activatable")
  )
)

(define-method set_child
  (of-object "GtkListItem")
  (c-name "gtk_list_item_set_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_child
  (of-object "GtkListItem")
  (c-name "gtk_list_item_get_child")
  (return-type "GtkWidget*")
)



;; From gtkliststore.h

(define-function gtk_list_store_get_type
  (c-name "gtk_list_store_get_type")
  (return-type "GType")
)

(define-function gtk_list_store_new
  (c-name "gtk_list_store_new")
  (is-constructor-of "GtkListStore")
  (return-type "GtkListStore*")
  (parameters
    '("int" "n_columns")
  )
  (varargs #t)
)

(define-function gtk_list_store_newv
  (c-name "gtk_list_store_newv")
  (return-type "GtkListStore*")
  (parameters
    '("int" "n_columns")
    '("GType*" "types")
  )
)

(define-method set_column_types
  (of-object "GtkListStore")
  (c-name "gtk_list_store_set_column_types")
  (return-type "none")
  (parameters
    '("int" "n_columns")
    '("GType*" "types")
  )
)

(define-method set_value
  (of-object "GtkListStore")
  (c-name "gtk_list_store_set_value")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("int" "column")
    '("GValue*" "value")
  )
)

(define-method set
  (of-object "GtkListStore")
  (c-name "gtk_list_store_set")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
  )
  (varargs #t)
)

(define-method set_valuesv
  (of-object "GtkListStore")
  (c-name "gtk_list_store_set_valuesv")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("int*" "columns")
    '("GValue*" "values")
    '("int" "n_values")
  )
)

(define-method set_valist
  (of-object "GtkListStore")
  (c-name "gtk_list_store_set_valist")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("va_list" "var_args")
  )
)

(define-method remove
  (of-object "GtkListStore")
  (c-name "gtk_list_store_remove")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method insert
  (of-object "GtkListStore")
  (c-name "gtk_list_store_insert")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("int" "position")
  )
)

(define-method insert_before
  (of-object "GtkListStore")
  (c-name "gtk_list_store_insert_before")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "sibling")
  )
)

(define-method insert_after
  (of-object "GtkListStore")
  (c-name "gtk_list_store_insert_after")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "sibling")
  )
)

(define-method insert_with_values
  (of-object "GtkListStore")
  (c-name "gtk_list_store_insert_with_values")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("int" "position")
  )
  (varargs #t)
)

(define-method insert_with_valuesv
  (of-object "GtkListStore")
  (c-name "gtk_list_store_insert_with_valuesv")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("int" "position")
    '("int*" "columns")
    '("GValue*" "values")
    '("int" "n_values")
  )
)

(define-method prepend
  (of-object "GtkListStore")
  (c-name "gtk_list_store_prepend")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method append
  (of-object "GtkListStore")
  (c-name "gtk_list_store_append")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method clear
  (of-object "GtkListStore")
  (c-name "gtk_list_store_clear")
  (return-type "none")
)

(define-method iter_is_valid
  (of-object "GtkListStore")
  (c-name "gtk_list_store_iter_is_valid")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method reorder
  (of-object "GtkListStore")
  (c-name "gtk_list_store_reorder")
  (return-type "none")
  (parameters
    '("int*" "new_order")
  )
)

(define-method swap
  (of-object "GtkListStore")
  (c-name "gtk_list_store_swap")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "a")
    '("GtkTreeIter*" "b")
  )
)

(define-method move_after
  (of-object "GtkListStore")
  (c-name "gtk_list_store_move_after")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "position")
  )
)

(define-method move_before
  (of-object "GtkListStore")
  (c-name "gtk_list_store_move_before")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "position")
  )
)



;; From gtklistview.h

(define-function gtk_list_view_get_type
  (c-name "gtk_list_view_get_type")
  (return-type "GType")
)

(define-function gtk_list_view_new
  (c-name "gtk_list_view_new")
  (is-constructor-of "GtkListView")
  (return-type "GtkWidget*")
  (parameters
    '("GtkSelectionModel*" "model")
    '("GtkListItemFactory*" "factory")
  )
)

(define-method get_model
  (of-object "GtkListView")
  (c-name "gtk_list_view_get_model")
  (return-type "GtkSelectionModel*")
)

(define-method set_model
  (of-object "GtkListView")
  (c-name "gtk_list_view_set_model")
  (return-type "none")
  (parameters
    '("GtkSelectionModel*" "model")
  )
)

(define-method set_factory
  (of-object "GtkListView")
  (c-name "gtk_list_view_set_factory")
  (return-type "none")
  (parameters
    '("GtkListItemFactory*" "factory")
  )
)

(define-method get_factory
  (of-object "GtkListView")
  (c-name "gtk_list_view_get_factory")
  (return-type "GtkListItemFactory*")
)

(define-method set_show_separators
  (of-object "GtkListView")
  (c-name "gtk_list_view_set_show_separators")
  (return-type "none")
  (parameters
    '("gboolean" "show_separators")
  )
)

(define-method get_show_separators
  (of-object "GtkListView")
  (c-name "gtk_list_view_get_show_separators")
  (return-type "gboolean")
)

(define-method set_single_click_activate
  (of-object "GtkListView")
  (c-name "gtk_list_view_set_single_click_activate")
  (return-type "none")
  (parameters
    '("gboolean" "single_click_activate")
  )
)

(define-method get_single_click_activate
  (of-object "GtkListView")
  (c-name "gtk_list_view_get_single_click_activate")
  (return-type "gboolean")
)

(define-method set_enable_rubberband
  (of-object "GtkListView")
  (c-name "gtk_list_view_set_enable_rubberband")
  (return-type "none")
  (parameters
    '("gboolean" "enable_rubberband")
  )
)

(define-method get_enable_rubberband
  (of-object "GtkListView")
  (c-name "gtk_list_view_get_enable_rubberband")
  (return-type "gboolean")
)



;; From gtklockbutton.h

(define-function gtk_lock_button_get_type
  (c-name "gtk_lock_button_get_type")
  (return-type "GType")
)

(define-function gtk_lock_button_new
  (c-name "gtk_lock_button_new")
  (is-constructor-of "GtkLockButton")
  (return-type "GtkWidget*")
  (parameters
    '("GPermission*" "permission")
  )
)

(define-method get_permission
  (of-object "GtkLockButton")
  (c-name "gtk_lock_button_get_permission")
  (return-type "GPermission*")
)

(define-method set_permission
  (of-object "GtkLockButton")
  (c-name "gtk_lock_button_set_permission")
  (return-type "none")
  (parameters
    '("GPermission*" "permission")
  )
)



;; From gtkmain.h

(define-function gtk_init
  (c-name "gtk_init")
  (return-type "none")
)

(define-function gtk_init_check
  (c-name "gtk_init_check")
  (return-type "gboolean")
)

(define-function gtk_is_initialized
  (c-name "gtk_is_initialized")
  (return-type "gboolean")
)

(define-function gtk_init_abi_check
  (c-name "gtk_init_abi_check")
  (return-type "none")
  (parameters
    '("int" "num_checks")
    '("size_t" "sizeof_GtkWindow")
    '("size_t" "sizeof_GtkBox")
  )
)

(define-function gtk_init_check_abi_check
  (c-name "gtk_init_check_abi_check")
  (return-type "gboolean")
  (parameters
    '("int" "num_checks")
    '("size_t" "sizeof_GtkWindow")
    '("size_t" "sizeof_GtkBox")
  )
)

(define-function gtk_disable_setlocale
  (c-name "gtk_disable_setlocale")
  (return-type "none")
)

(define-function gtk_get_default_language
  (c-name "gtk_get_default_language")
  (return-type "PangoLanguage*")
)

(define-function gtk_get_locale_direction
  (c-name "gtk_get_locale_direction")
  (return-type "GtkTextDirection")
)



;; From gtkmaplistmodel.h

(define-function gtk_map_list_model_new
  (c-name "gtk_map_list_model_new")
  (is-constructor-of "GtkMapListModel")
  (return-type "GtkMapListModel*")
  (parameters
    '("GListModel*" "model")
    '("GtkMapListModelMapFunc" "map_func")
    '("gpointer" "user_data")
    '("GDestroyNotify" "user_destroy")
  )
)

(define-method set_map_func
  (of-object "GtkMapListModel")
  (c-name "gtk_map_list_model_set_map_func")
  (return-type "none")
  (parameters
    '("GtkMapListModelMapFunc" "map_func")
    '("gpointer" "user_data")
    '("GDestroyNotify" "user_destroy")
  )
)

(define-method set_model
  (of-object "GtkMapListModel")
  (c-name "gtk_map_list_model_set_model")
  (return-type "none")
  (parameters
    '("GListModel*" "model")
  )
)

(define-method get_model
  (of-object "GtkMapListModel")
  (c-name "gtk_map_list_model_get_model")
  (return-type "GListModel*")
)

(define-method has_map
  (of-object "GtkMapListModel")
  (c-name "gtk_map_list_model_has_map")
  (return-type "gboolean")
)



;; From gtkmediacontrols.h

(define-function gtk_media_controls_new
  (c-name "gtk_media_controls_new")
  (is-constructor-of "GtkMediaControls")
  (return-type "GtkWidget*")
  (parameters
    '("GtkMediaStream*" "stream")
  )
)

(define-method get_media_stream
  (of-object "GtkMediaControls")
  (c-name "gtk_media_controls_get_media_stream")
  (return-type "GtkMediaStream*")
)

(define-method set_media_stream
  (of-object "GtkMediaControls")
  (c-name "gtk_media_controls_set_media_stream")
  (return-type "none")
  (parameters
    '("GtkMediaStream*" "stream")
  )
)



;; From gtkmediafile.h

(define-function gtk_media_file_new
  (c-name "gtk_media_file_new")
  (is-constructor-of "GtkMediaFile")
  (return-type "GtkMediaStream*")
)

(define-function gtk_media_file_new_for_filename
  (c-name "gtk_media_file_new_for_filename")
  (return-type "GtkMediaStream*")
  (parameters
    '("const-char*" "filename")
  )
)

(define-function gtk_media_file_new_for_resource
  (c-name "gtk_media_file_new_for_resource")
  (return-type "GtkMediaStream*")
  (parameters
    '("const-char*" "resource_path")
  )
)

(define-function gtk_media_file_new_for_file
  (c-name "gtk_media_file_new_for_file")
  (return-type "GtkMediaStream*")
  (parameters
    '("GFile*" "file")
  )
)

(define-function gtk_media_file_new_for_input_stream
  (c-name "gtk_media_file_new_for_input_stream")
  (return-type "GtkMediaStream*")
  (parameters
    '("GInputStream*" "stream")
  )
)

(define-method clear
  (of-object "GtkMediaFile")
  (c-name "gtk_media_file_clear")
  (return-type "none")
)

(define-method set_filename
  (of-object "GtkMediaFile")
  (c-name "gtk_media_file_set_filename")
  (return-type "none")
  (parameters
    '("const-char*" "filename")
  )
)

(define-method set_resource
  (of-object "GtkMediaFile")
  (c-name "gtk_media_file_set_resource")
  (return-type "none")
  (parameters
    '("const-char*" "resource_path")
  )
)

(define-method set_file
  (of-object "GtkMediaFile")
  (c-name "gtk_media_file_set_file")
  (return-type "none")
  (parameters
    '("GFile*" "file")
  )
)

(define-method get_file
  (of-object "GtkMediaFile")
  (c-name "gtk_media_file_get_file")
  (return-type "GFile*")
)

(define-method set_input_stream
  (of-object "GtkMediaFile")
  (c-name "gtk_media_file_set_input_stream")
  (return-type "none")
  (parameters
    '("GInputStream*" "stream")
  )
)

(define-method get_input_stream
  (of-object "GtkMediaFile")
  (c-name "gtk_media_file_get_input_stream")
  (return-type "GInputStream*")
)



;; From gtkmediastream.h

(define-method is_prepared
  (of-object "GtkMediaStream")
  (c-name "gtk_media_stream_is_prepared")
  (return-type "gboolean")
)

(define-method get_error
  (of-object "GtkMediaStream")
  (c-name "gtk_media_stream_get_error")
  (return-type "const-GError*")
)

(define-method has_audio
  (of-object "GtkMediaStream")
  (c-name "gtk_media_stream_has_audio")
  (return-type "gboolean")
)

(define-method has_video
  (of-object "GtkMediaStream")
  (c-name "gtk_media_stream_has_video")
  (return-type "gboolean")
)

(define-method play
  (of-object "GtkMediaStream")
  (c-name "gtk_media_stream_play")
  (return-type "none")
)

(define-method pause
  (of-object "GtkMediaStream")
  (c-name "gtk_media_stream_pause")
  (return-type "none")
)

(define-method get_playing
  (of-object "GtkMediaStream")
  (c-name "gtk_media_stream_get_playing")
  (return-type "gboolean")
)

(define-method set_playing
  (of-object "GtkMediaStream")
  (c-name "gtk_media_stream_set_playing")
  (return-type "none")
  (parameters
    '("gboolean" "playing")
  )
)

(define-method get_ended
  (of-object "GtkMediaStream")
  (c-name "gtk_media_stream_get_ended")
  (return-type "gboolean")
)

(define-method get_timestamp
  (of-object "GtkMediaStream")
  (c-name "gtk_media_stream_get_timestamp")
  (return-type "gint64")
)

(define-method get_duration
  (of-object "GtkMediaStream")
  (c-name "gtk_media_stream_get_duration")
  (return-type "gint64")
)

(define-method is_seekable
  (of-object "GtkMediaStream")
  (c-name "gtk_media_stream_is_seekable")
  (return-type "gboolean")
)

(define-method is_seeking
  (of-object "GtkMediaStream")
  (c-name "gtk_media_stream_is_seeking")
  (return-type "gboolean")
)

(define-method seek
  (of-object "GtkMediaStream")
  (c-name "gtk_media_stream_seek")
  (return-type "none")
  (parameters
    '("gint64" "timestamp")
  )
)

(define-method get_loop
  (of-object "GtkMediaStream")
  (c-name "gtk_media_stream_get_loop")
  (return-type "gboolean")
)

(define-method set_loop
  (of-object "GtkMediaStream")
  (c-name "gtk_media_stream_set_loop")
  (return-type "none")
  (parameters
    '("gboolean" "loop")
  )
)

(define-method get_muted
  (of-object "GtkMediaStream")
  (c-name "gtk_media_stream_get_muted")
  (return-type "gboolean")
)

(define-method set_muted
  (of-object "GtkMediaStream")
  (c-name "gtk_media_stream_set_muted")
  (return-type "none")
  (parameters
    '("gboolean" "muted")
  )
)

(define-method get_volume
  (of-object "GtkMediaStream")
  (c-name "gtk_media_stream_get_volume")
  (return-type "double")
)

(define-method set_volume
  (of-object "GtkMediaStream")
  (c-name "gtk_media_stream_set_volume")
  (return-type "none")
  (parameters
    '("double" "volume")
  )
)

(define-method realize
  (of-object "GtkMediaStream")
  (c-name "gtk_media_stream_realize")
  (return-type "none")
  (parameters
    '("GdkSurface*" "surface")
  )
)

(define-method unrealize
  (of-object "GtkMediaStream")
  (c-name "gtk_media_stream_unrealize")
  (return-type "none")
  (parameters
    '("GdkSurface*" "surface")
  )
)

(define-method prepared
  (of-object "GtkMediaStream")
  (c-name "gtk_media_stream_prepared")
  (return-type "none")
  (parameters
    '("gboolean" "has_audio")
    '("gboolean" "has_video")
    '("gboolean" "seekable")
    '("gint64" "duration")
  )
)

(define-method unprepared
  (of-object "GtkMediaStream")
  (c-name "gtk_media_stream_unprepared")
  (return-type "none")
)

(define-method update
  (of-object "GtkMediaStream")
  (c-name "gtk_media_stream_update")
  (return-type "none")
  (parameters
    '("gint64" "timestamp")
  )
)

(define-method ended
  (of-object "GtkMediaStream")
  (c-name "gtk_media_stream_ended")
  (return-type "none")
)

(define-method seek_success
  (of-object "GtkMediaStream")
  (c-name "gtk_media_stream_seek_success")
  (return-type "none")
)

(define-method seek_failed
  (of-object "GtkMediaStream")
  (c-name "gtk_media_stream_seek_failed")
  (return-type "none")
)

(define-method gerror
  (of-object "GtkMediaStream")
  (c-name "gtk_media_stream_gerror")
  (return-type "none")
  (parameters
    '("GError*" "error")
  )
)

(define-method error
  (of-object "GtkMediaStream")
  (c-name "gtk_media_stream_error")
  (return-type "none")
  (parameters
    '("GQuark" "domain")
    '("int" "code")
    '("const-char*" "format")
  )
  (varargs #t)
)

(define-method error_valist
  (of-object "GtkMediaStream")
  (c-name "gtk_media_stream_error_valist")
  (return-type "none")
  (parameters
    '("GQuark" "domain")
    '("int" "code")
    '("const-char*" "format")
    '("va_list" "args")
  )
)



;; From gtkmenubutton.h

(define-function gtk_menu_button_get_type
  (c-name "gtk_menu_button_get_type")
  (return-type "GType")
)

(define-function gtk_menu_button_new
  (c-name "gtk_menu_button_new")
  (is-constructor-of "GtkMenuButton")
  (return-type "GtkWidget*")
)

(define-method set_popover
  (of-object "GtkMenuButton")
  (c-name "gtk_menu_button_set_popover")
  (return-type "none")
  (parameters
    '("GtkWidget*" "popover")
  )
)

(define-method get_popover
  (of-object "GtkMenuButton")
  (c-name "gtk_menu_button_get_popover")
  (return-type "GtkPopover*")
)

(define-method set_direction
  (of-object "GtkMenuButton")
  (c-name "gtk_menu_button_set_direction")
  (return-type "none")
  (parameters
    '("GtkArrowType" "direction")
  )
)

(define-method get_direction
  (of-object "GtkMenuButton")
  (c-name "gtk_menu_button_get_direction")
  (return-type "GtkArrowType")
)

(define-method set_menu_model
  (of-object "GtkMenuButton")
  (c-name "gtk_menu_button_set_menu_model")
  (return-type "none")
  (parameters
    '("GMenuModel*" "menu_model")
  )
)

(define-method get_menu_model
  (of-object "GtkMenuButton")
  (c-name "gtk_menu_button_get_menu_model")
  (return-type "GMenuModel*")
)

(define-method set_icon_name
  (of-object "GtkMenuButton")
  (c-name "gtk_menu_button_set_icon_name")
  (return-type "none")
  (parameters
    '("const-char*" "icon_name")
  )
)

(define-method get_icon_name
  (of-object "GtkMenuButton")
  (c-name "gtk_menu_button_get_icon_name")
  (return-type "const-char*")
)

(define-method set_label
  (of-object "GtkMenuButton")
  (c-name "gtk_menu_button_set_label")
  (return-type "none")
  (parameters
    '("const-char*" "label")
  )
)

(define-method get_label
  (of-object "GtkMenuButton")
  (c-name "gtk_menu_button_get_label")
  (return-type "const-char*")
)

(define-method set_use_underline
  (of-object "GtkMenuButton")
  (c-name "gtk_menu_button_set_use_underline")
  (return-type "none")
  (parameters
    '("gboolean" "use_underline")
  )
)

(define-method get_use_underline
  (of-object "GtkMenuButton")
  (c-name "gtk_menu_button_get_use_underline")
  (return-type "gboolean")
)

(define-method set_has_frame
  (of-object "GtkMenuButton")
  (c-name "gtk_menu_button_set_has_frame")
  (return-type "none")
  (parameters
    '("gboolean" "has_frame")
  )
)

(define-method get_has_frame
  (of-object "GtkMenuButton")
  (c-name "gtk_menu_button_get_has_frame")
  (return-type "gboolean")
)

(define-method popup
  (of-object "GtkMenuButton")
  (c-name "gtk_menu_button_popup")
  (return-type "none")
)

(define-method popdown
  (of-object "GtkMenuButton")
  (c-name "gtk_menu_button_popdown")
  (return-type "none")
)

(define-method set_create_popup_func
  (of-object "GtkMenuButton")
  (c-name "gtk_menu_button_set_create_popup_func")
  (return-type "none")
  (parameters
    '("GtkMenuButtonCreatePopupFunc" "func")
    '("gpointer" "user_data")
    '("GDestroyNotify" "destroy_notify")
  )
)



;; From gtkmessagedialog.h

(define-function gtk_message_dialog_get_type
  (c-name "gtk_message_dialog_get_type")
  (return-type "GType")
)

(define-function gtk_message_dialog_new
  (c-name "gtk_message_dialog_new")
  (is-constructor-of "GtkMessageDialog")
  (return-type "GtkWidget*")
  (parameters
    '("GtkWindow*" "parent")
    '("GtkDialogFlags" "flags")
    '("GtkMessageType" "type")
    '("GtkButtonsType" "buttons")
    '("const-char*" "message_format")
  )
  (varargs #t)
)

(define-function gtk_message_dialog_new_with_markup
  (c-name "gtk_message_dialog_new_with_markup")
  (return-type "GtkWidget*")
  (parameters
    '("GtkWindow*" "parent")
    '("GtkDialogFlags" "flags")
    '("GtkMessageType" "type")
    '("GtkButtonsType" "buttons")
    '("const-char*" "message_format")
  )
  (varargs #t)
)

(define-method set_markup
  (of-object "GtkMessageDialog")
  (c-name "gtk_message_dialog_set_markup")
  (return-type "none")
  (parameters
    '("const-char*" "str")
  )
)

(define-method format_secondary_text
  (of-object "GtkMessageDialog")
  (c-name "gtk_message_dialog_format_secondary_text")
  (return-type "none")
  (parameters
    '("const-char*" "message_format")
  )
  (varargs #t)
)

(define-method format_secondary_markup
  (of-object "GtkMessageDialog")
  (c-name "gtk_message_dialog_format_secondary_markup")
  (return-type "none")
  (parameters
    '("const-char*" "message_format")
  )
  (varargs #t)
)

(define-method get_message_area
  (of-object "GtkMessageDialog")
  (c-name "gtk_message_dialog_get_message_area")
  (return-type "GtkWidget*")
)



;; From gtkmountoperation.h

(define-function gtk_mount_operation_get_type
  (c-name "gtk_mount_operation_get_type")
  (return-type "GType")
)

(define-function gtk_mount_operation_new
  (c-name "gtk_mount_operation_new")
  (is-constructor-of "GtkMountOperation")
  (return-type "GMountOperation*")
  (parameters
    '("GtkWindow*" "parent")
  )
)

(define-method is_showing
  (of-object "GtkMountOperation")
  (c-name "gtk_mount_operation_is_showing")
  (return-type "gboolean")
)

(define-method set_parent
  (of-object "GtkMountOperation")
  (c-name "gtk_mount_operation_set_parent")
  (return-type "none")
  (parameters
    '("GtkWindow*" "parent")
  )
)

(define-method get_parent
  (of-object "GtkMountOperation")
  (c-name "gtk_mount_operation_get_parent")
  (return-type "GtkWindow*")
)

(define-method set_display
  (of-object "GtkMountOperation")
  (c-name "gtk_mount_operation_set_display")
  (return-type "none")
  (parameters
    '("GdkDisplay*" "display")
  )
)

(define-method get_display
  (of-object "GtkMountOperation")
  (c-name "gtk_mount_operation_get_display")
  (return-type "GdkDisplay*")
)



;; From gtkmultifilter.h

(define-method append
  (of-object "GtkMultiFilter")
  (c-name "gtk_multi_filter_append")
  (return-type "none")
  (parameters
    '("GtkFilter*" "filter")
  )
)

(define-method remove
  (of-object "GtkMultiFilter")
  (c-name "gtk_multi_filter_remove")
  (return-type "none")
  (parameters
    '("guint" "position")
  )
)

(define-function gtk_any_filter_new
  (c-name "gtk_any_filter_new")
  (is-constructor-of "GtkAnyFilter")
  (return-type "GtkAnyFilter*")
)

(define-function gtk_every_filter_new
  (c-name "gtk_every_filter_new")
  (is-constructor-of "GtkEveryFilter")
  (return-type "GtkEveryFilter*")
)



;; From gtkmultiselection.h

(define-function gtk_multi_selection_new
  (c-name "gtk_multi_selection_new")
  (is-constructor-of "GtkMultiSelection")
  (return-type "GtkMultiSelection*")
  (parameters
    '("GListModel*" "model")
  )
)

(define-method get_model
  (of-object "GtkMultiSelection")
  (c-name "gtk_multi_selection_get_model")
  (return-type "GListModel*")
)

(define-method set_model
  (of-object "GtkMultiSelection")
  (c-name "gtk_multi_selection_set_model")
  (return-type "none")
  (parameters
    '("GListModel*" "model")
  )
)



;; From gtkmultisorter.h

(define-function gtk_multi_sorter_new
  (c-name "gtk_multi_sorter_new")
  (is-constructor-of "GtkMultiSorter")
  (return-type "GtkMultiSorter*")
)

(define-method append
  (of-object "GtkMultiSorter")
  (c-name "gtk_multi_sorter_append")
  (return-type "none")
  (parameters
    '("GtkSorter*" "sorter")
  )
)

(define-method remove
  (of-object "GtkMultiSorter")
  (c-name "gtk_multi_sorter_remove")
  (return-type "none")
  (parameters
    '("guint" "position")
  )
)



;; From gtknativedialog.h

(define-method show
  (of-object "GtkNativeDialog")
  (c-name "gtk_native_dialog_show")
  (return-type "none")
)

(define-method hide
  (of-object "GtkNativeDialog")
  (c-name "gtk_native_dialog_hide")
  (return-type "none")
)

(define-method destroy
  (of-object "GtkNativeDialog")
  (c-name "gtk_native_dialog_destroy")
  (return-type "none")
)

(define-method get_visible
  (of-object "GtkNativeDialog")
  (c-name "gtk_native_dialog_get_visible")
  (return-type "gboolean")
)

(define-method set_modal
  (of-object "GtkNativeDialog")
  (c-name "gtk_native_dialog_set_modal")
  (return-type "none")
  (parameters
    '("gboolean" "modal")
  )
)

(define-method get_modal
  (of-object "GtkNativeDialog")
  (c-name "gtk_native_dialog_get_modal")
  (return-type "gboolean")
)

(define-method set_title
  (of-object "GtkNativeDialog")
  (c-name "gtk_native_dialog_set_title")
  (return-type "none")
  (parameters
    '("const-char*" "title")
  )
)

(define-method get_title
  (of-object "GtkNativeDialog")
  (c-name "gtk_native_dialog_get_title")
  (return-type "const-char*")
)

(define-method set_transient_for
  (of-object "GtkNativeDialog")
  (c-name "gtk_native_dialog_set_transient_for")
  (return-type "none")
  (parameters
    '("GtkWindow*" "parent")
  )
)

(define-method get_transient_for
  (of-object "GtkNativeDialog")
  (c-name "gtk_native_dialog_get_transient_for")
  (return-type "GtkWindow*")
)



;; From gtknative.h

(define-method realize
  (of-object "GtkNative")
  (c-name "gtk_native_realize")
  (return-type "none")
)

(define-method unrealize
  (of-object "GtkNative")
  (c-name "gtk_native_unrealize")
  (return-type "none")
)

(define-function gtk_native_get_for_surface
  (c-name "gtk_native_get_for_surface")
  (return-type "GtkNative*")
  (parameters
    '("GdkSurface*" "surface")
  )
)

(define-method get_surface
  (of-object "GtkNative")
  (c-name "gtk_native_get_surface")
  (return-type "GdkSurface*")
)

(define-method get_renderer
  (of-object "GtkNative")
  (c-name "gtk_native_get_renderer")
  (return-type "GskRenderer*")
)

(define-method get_surface_transform
  (of-object "GtkNative")
  (c-name "gtk_native_get_surface_transform")
  (return-type "none")
  (parameters
    '("double*" "x")
    '("double*" "y")
  )
)



;; From gtknoselection.h

(define-function gtk_no_selection_new
  (c-name "gtk_no_selection_new")
  (is-constructor-of "GtkNoSelection")
  (return-type "GtkNoSelection*")
  (parameters
    '("GListModel*" "model")
  )
)

(define-method get_model
  (of-object "GtkNoSelection")
  (c-name "gtk_no_selection_get_model")
  (return-type "GListModel*")
)

(define-method set_model
  (of-object "GtkNoSelection")
  (c-name "gtk_no_selection_set_model")
  (return-type "none")
  (parameters
    '("GListModel*" "model")
  )
)



;; From gtknotebook.h

(define-function gtk_notebook_get_type
  (c-name "gtk_notebook_get_type")
  (return-type "GType")
)

(define-function gtk_notebook_new
  (c-name "gtk_notebook_new")
  (is-constructor-of "GtkNotebook")
  (return-type "GtkWidget*")
)

(define-method append_page
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_append_page")
  (return-type "int")
  (parameters
    '("GtkWidget*" "child")
    '("GtkWidget*" "tab_label")
  )
)

(define-method append_page_menu
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_append_page_menu")
  (return-type "int")
  (parameters
    '("GtkWidget*" "child")
    '("GtkWidget*" "tab_label")
    '("GtkWidget*" "menu_label")
  )
)

(define-method prepend_page
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_prepend_page")
  (return-type "int")
  (parameters
    '("GtkWidget*" "child")
    '("GtkWidget*" "tab_label")
  )
)

(define-method prepend_page_menu
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_prepend_page_menu")
  (return-type "int")
  (parameters
    '("GtkWidget*" "child")
    '("GtkWidget*" "tab_label")
    '("GtkWidget*" "menu_label")
  )
)

(define-method insert_page
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_insert_page")
  (return-type "int")
  (parameters
    '("GtkWidget*" "child")
    '("GtkWidget*" "tab_label")
    '("int" "position")
  )
)

(define-method insert_page_menu
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_insert_page_menu")
  (return-type "int")
  (parameters
    '("GtkWidget*" "child")
    '("GtkWidget*" "tab_label")
    '("GtkWidget*" "menu_label")
    '("int" "position")
  )
)

(define-method remove_page
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_remove_page")
  (return-type "none")
  (parameters
    '("int" "page_num")
  )
)

(define-method set_group_name
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_group_name")
  (return-type "none")
  (parameters
    '("const-char*" "group_name")
  )
)

(define-method get_group_name
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_group_name")
  (return-type "const-char*")
)

(define-method get_current_page
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_current_page")
  (return-type "int")
)

(define-method get_nth_page
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_nth_page")
  (return-type "GtkWidget*")
  (parameters
    '("int" "page_num")
  )
)

(define-method get_n_pages
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_n_pages")
  (return-type "int")
)

(define-method page_num
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_page_num")
  (return-type "int")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method set_current_page
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_current_page")
  (return-type "none")
  (parameters
    '("int" "page_num")
  )
)

(define-method next_page
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_next_page")
  (return-type "none")
)

(define-method prev_page
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_prev_page")
  (return-type "none")
)

(define-method set_show_border
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_show_border")
  (return-type "none")
  (parameters
    '("gboolean" "show_border")
  )
)

(define-method get_show_border
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_show_border")
  (return-type "gboolean")
)

(define-method set_show_tabs
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_show_tabs")
  (return-type "none")
  (parameters
    '("gboolean" "show_tabs")
  )
)

(define-method get_show_tabs
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_show_tabs")
  (return-type "gboolean")
)

(define-method set_tab_pos
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_tab_pos")
  (return-type "none")
  (parameters
    '("GtkPositionType" "pos")
  )
)

(define-method get_tab_pos
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_tab_pos")
  (return-type "GtkPositionType")
)

(define-method set_scrollable
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_scrollable")
  (return-type "none")
  (parameters
    '("gboolean" "scrollable")
  )
)

(define-method get_scrollable
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_scrollable")
  (return-type "gboolean")
)

(define-method popup_enable
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_popup_enable")
  (return-type "none")
)

(define-method popup_disable
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_popup_disable")
  (return-type "none")
)

(define-method get_tab_label
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_tab_label")
  (return-type "GtkWidget*")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method set_tab_label
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_tab_label")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("GtkWidget*" "tab_label")
  )
)

(define-method set_tab_label_text
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_tab_label_text")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("const-char*" "tab_text")
  )
)

(define-method get_tab_label_text
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_tab_label_text")
  (return-type "const-char*")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_menu_label
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_menu_label")
  (return-type "GtkWidget*")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method set_menu_label
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_menu_label")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("GtkWidget*" "menu_label")
  )
)

(define-method set_menu_label_text
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_menu_label_text")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("const-char*" "menu_text")
  )
)

(define-method get_menu_label_text
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_menu_label_text")
  (return-type "const-char*")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method reorder_child
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_reorder_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("int" "position")
  )
)

(define-method get_tab_reorderable
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_tab_reorderable")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method set_tab_reorderable
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_tab_reorderable")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("gboolean" "reorderable")
  )
)

(define-method get_tab_detachable
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_tab_detachable")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method set_tab_detachable
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_tab_detachable")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("gboolean" "detachable")
  )
)

(define-method detach_tab
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_detach_tab")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_action_widget
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_action_widget")
  (return-type "GtkWidget*")
  (parameters
    '("GtkPackType" "pack_type")
  )
)

(define-method set_action_widget
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_action_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("GtkPackType" "pack_type")
  )
)

(define-function gtk_notebook_page_get_type
  (c-name "gtk_notebook_page_get_type")
  (return-type "GType")
)

(define-method get_page
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_page")
  (return-type "GtkNotebookPage*")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_child
  (of-object "GtkNotebookPage")
  (c-name "gtk_notebook_page_get_child")
  (return-type "GtkWidget*")
)

(define-method get_pages
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_pages")
  (return-type "GListModel*")
)



;; From gtknumericsorter.h

(define-function gtk_numeric_sorter_new
  (c-name "gtk_numeric_sorter_new")
  (is-constructor-of "GtkNumericSorter")
  (return-type "GtkNumericSorter*")
  (parameters
    '("GtkExpression*" "expression")
  )
)

(define-method get_expression
  (of-object "GtkNumericSorter")
  (c-name "gtk_numeric_sorter_get_expression")
  (return-type "GtkExpression*")
)

(define-method set_expression
  (of-object "GtkNumericSorter")
  (c-name "gtk_numeric_sorter_set_expression")
  (return-type "none")
  (parameters
    '("GtkExpression*" "expression")
  )
)

(define-method get_sort_order
  (of-object "GtkNumericSorter")
  (c-name "gtk_numeric_sorter_get_sort_order")
  (return-type "GtkSortType")
)

(define-method set_sort_order
  (of-object "GtkNumericSorter")
  (c-name "gtk_numeric_sorter_set_sort_order")
  (return-type "none")
  (parameters
    '("GtkSortType" "sort_order")
  )
)



;; From gtkorientable.h

(define-function gtk_orientable_get_type
  (c-name "gtk_orientable_get_type")
  (return-type "GType")
)

(define-method set_orientation
  (of-object "GtkOrientable")
  (c-name "gtk_orientable_set_orientation")
  (return-type "none")
  (parameters
    '("GtkOrientation" "orientation")
  )
)

(define-method get_orientation
  (of-object "GtkOrientable")
  (c-name "gtk_orientable_get_orientation")
  (return-type "GtkOrientation")
)



;; From gtkoverlay.h

(define-function gtk_overlay_get_type
  (c-name "gtk_overlay_get_type")
  (return-type "GType")
)

(define-function gtk_overlay_new
  (c-name "gtk_overlay_new")
  (is-constructor-of "GtkOverlay")
  (return-type "GtkWidget*")
)

(define-method add_overlay
  (of-object "GtkOverlay")
  (c-name "gtk_overlay_add_overlay")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method remove_overlay
  (of-object "GtkOverlay")
  (c-name "gtk_overlay_remove_overlay")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method set_child
  (of-object "GtkOverlay")
  (c-name "gtk_overlay_set_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_child
  (of-object "GtkOverlay")
  (c-name "gtk_overlay_get_child")
  (return-type "GtkWidget*")
)

(define-method get_measure_overlay
  (of-object "GtkOverlay")
  (c-name "gtk_overlay_get_measure_overlay")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method set_measure_overlay
  (of-object "GtkOverlay")
  (c-name "gtk_overlay_set_measure_overlay")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("gboolean" "measure")
  )
)

(define-method get_clip_overlay
  (of-object "GtkOverlay")
  (c-name "gtk_overlay_get_clip_overlay")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method set_clip_overlay
  (of-object "GtkOverlay")
  (c-name "gtk_overlay_set_clip_overlay")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("gboolean" "clip_overlay")
  )
)



;; From gtkoverlaylayout.h

(define-function gtk_overlay_layout_new
  (c-name "gtk_overlay_layout_new")
  (is-constructor-of "GtkOverlayLayout")
  (return-type "GtkLayoutManager*")
)

(define-method set_measure
  (of-object "GtkOverlayLayoutChild")
  (c-name "gtk_overlay_layout_child_set_measure")
  (return-type "none")
  (parameters
    '("gboolean" "measure")
  )
)

(define-method get_measure
  (of-object "GtkOverlayLayoutChild")
  (c-name "gtk_overlay_layout_child_get_measure")
  (return-type "gboolean")
)

(define-method set_clip_overlay
  (of-object "GtkOverlayLayoutChild")
  (c-name "gtk_overlay_layout_child_set_clip_overlay")
  (return-type "none")
  (parameters
    '("gboolean" "clip_overlay")
  )
)

(define-method get_clip_overlay
  (of-object "GtkOverlayLayoutChild")
  (c-name "gtk_overlay_layout_child_get_clip_overlay")
  (return-type "gboolean")
)



;; From gtkpadcontroller.h

(define-function gtk_pad_controller_get_type
  (c-name "gtk_pad_controller_get_type")
  (return-type "GType")
)

(define-function gtk_pad_controller_new
  (c-name "gtk_pad_controller_new")
  (is-constructor-of "GtkPadController")
  (return-type "GtkPadController*")
  (parameters
    '("GActionGroup*" "group")
    '("GdkDevice*" "pad")
  )
)

(define-method set_action_entries
  (of-object "GtkPadController")
  (c-name "gtk_pad_controller_set_action_entries")
  (return-type "none")
  (parameters
    '("const-GtkPadActionEntry*" "entries")
    '("int" "n_entries")
  )
)

(define-method set_action
  (of-object "GtkPadController")
  (c-name "gtk_pad_controller_set_action")
  (return-type "none")
  (parameters
    '("GtkPadActionType" "type")
    '("int" "index")
    '("int" "mode")
    '("const-char*" "label")
    '("const-char*" "action_name")
  )
)



;; From gtkpagesetup.h

(define-function gtk_page_setup_get_type
  (c-name "gtk_page_setup_get_type")
  (return-type "GType")
)

(define-function gtk_page_setup_new
  (c-name "gtk_page_setup_new")
  (is-constructor-of "GtkPageSetup")
  (return-type "GtkPageSetup*")
)

(define-method copy
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_copy")
  (return-type "GtkPageSetup*")
)

(define-method get_orientation
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_get_orientation")
  (return-type "GtkPageOrientation")
)

(define-method set_orientation
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_set_orientation")
  (return-type "none")
  (parameters
    '("GtkPageOrientation" "orientation")
  )
)

(define-method get_paper_size
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_get_paper_size")
  (return-type "GtkPaperSize*")
)

(define-method set_paper_size
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_set_paper_size")
  (return-type "none")
  (parameters
    '("GtkPaperSize*" "size")
  )
)

(define-method get_top_margin
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_get_top_margin")
  (return-type "double")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-method set_top_margin
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_set_top_margin")
  (return-type "none")
  (parameters
    '("double" "margin")
    '("GtkUnit" "unit")
  )
)

(define-method get_bottom_margin
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_get_bottom_margin")
  (return-type "double")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-method set_bottom_margin
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_set_bottom_margin")
  (return-type "none")
  (parameters
    '("double" "margin")
    '("GtkUnit" "unit")
  )
)

(define-method get_left_margin
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_get_left_margin")
  (return-type "double")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-method set_left_margin
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_set_left_margin")
  (return-type "none")
  (parameters
    '("double" "margin")
    '("GtkUnit" "unit")
  )
)

(define-method get_right_margin
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_get_right_margin")
  (return-type "double")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-method set_right_margin
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_set_right_margin")
  (return-type "none")
  (parameters
    '("double" "margin")
    '("GtkUnit" "unit")
  )
)

(define-method set_paper_size_and_default_margins
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_set_paper_size_and_default_margins")
  (return-type "none")
  (parameters
    '("GtkPaperSize*" "size")
  )
)

(define-method get_paper_width
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_get_paper_width")
  (return-type "double")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-method get_paper_height
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_get_paper_height")
  (return-type "double")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-method get_page_width
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_get_page_width")
  (return-type "double")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-method get_page_height
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_get_page_height")
  (return-type "double")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-function gtk_page_setup_new_from_file
  (c-name "gtk_page_setup_new_from_file")
  (return-type "GtkPageSetup*")
  (parameters
    '("const-char*" "file_name")
    '("GError**" "error")
  )
)

(define-method load_file
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_load_file")
  (return-type "gboolean")
  (parameters
    '("const-char*" "file_name")
    '("GError**" "error")
  )
)

(define-method to_file
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_to_file")
  (return-type "gboolean")
  (parameters
    '("const-char*" "file_name")
    '("GError**" "error")
  )
)

(define-function gtk_page_setup_new_from_key_file
  (c-name "gtk_page_setup_new_from_key_file")
  (return-type "GtkPageSetup*")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-char*" "group_name")
    '("GError**" "error")
  )
)

(define-method load_key_file
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_load_key_file")
  (return-type "gboolean")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-char*" "group_name")
    '("GError**" "error")
  )
)

(define-method to_key_file
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_to_key_file")
  (return-type "none")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-char*" "group_name")
  )
)

(define-method to_gvariant
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_to_gvariant")
  (return-type "GVariant*")
)

(define-function gtk_page_setup_new_from_gvariant
  (c-name "gtk_page_setup_new_from_gvariant")
  (return-type "GtkPageSetup*")
  (parameters
    '("GVariant*" "variant")
  )
)



;; From gtkpagesetupunixdialog.h

(define-function gtk_page_setup_unix_dialog_get_type
  (c-name "gtk_page_setup_unix_dialog_get_type")
  (return-type "GType")
)

(define-function gtk_page_setup_unix_dialog_new
  (c-name "gtk_page_setup_unix_dialog_new")
  (is-constructor-of "GtkPageSetupUnixDialog")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "title")
    '("GtkWindow*" "parent")
  )
)

(define-method set_page_setup
  (of-object "GtkPageSetupUnixDialog")
  (c-name "gtk_page_setup_unix_dialog_set_page_setup")
  (return-type "none")
  (parameters
    '("GtkPageSetup*" "page_setup")
  )
)

(define-method get_page_setup
  (of-object "GtkPageSetupUnixDialog")
  (c-name "gtk_page_setup_unix_dialog_get_page_setup")
  (return-type "GtkPageSetup*")
)

(define-method set_print_settings
  (of-object "GtkPageSetupUnixDialog")
  (c-name "gtk_page_setup_unix_dialog_set_print_settings")
  (return-type "none")
  (parameters
    '("GtkPrintSettings*" "print_settings")
  )
)

(define-method get_print_settings
  (of-object "GtkPageSetupUnixDialog")
  (c-name "gtk_page_setup_unix_dialog_get_print_settings")
  (return-type "GtkPrintSettings*")
)



;; From gtkpaned.h

(define-function gtk_paned_get_type
  (c-name "gtk_paned_get_type")
  (return-type "GType")
)

(define-function gtk_paned_new
  (c-name "gtk_paned_new")
  (is-constructor-of "GtkPaned")
  (return-type "GtkWidget*")
  (parameters
    '("GtkOrientation" "orientation")
  )
)

(define-method set_start_child
  (of-object "GtkPaned")
  (c-name "gtk_paned_set_start_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_start_child
  (of-object "GtkPaned")
  (c-name "gtk_paned_get_start_child")
  (return-type "GtkWidget*")
)

(define-method set_resize_start_child
  (of-object "GtkPaned")
  (c-name "gtk_paned_set_resize_start_child")
  (return-type "none")
  (parameters
    '("gboolean" "resize")
  )
)

(define-method get_resize_start_child
  (of-object "GtkPaned")
  (c-name "gtk_paned_get_resize_start_child")
  (return-type "gboolean")
)

(define-method set_end_child
  (of-object "GtkPaned")
  (c-name "gtk_paned_set_end_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_end_child
  (of-object "GtkPaned")
  (c-name "gtk_paned_get_end_child")
  (return-type "GtkWidget*")
)

(define-method set_shrink_start_child
  (of-object "GtkPaned")
  (c-name "gtk_paned_set_shrink_start_child")
  (return-type "none")
  (parameters
    '("gboolean" "resize")
  )
)

(define-method get_shrink_start_child
  (of-object "GtkPaned")
  (c-name "gtk_paned_get_shrink_start_child")
  (return-type "gboolean")
)

(define-method set_resize_end_child
  (of-object "GtkPaned")
  (c-name "gtk_paned_set_resize_end_child")
  (return-type "none")
  (parameters
    '("gboolean" "resize")
  )
)

(define-method get_resize_end_child
  (of-object "GtkPaned")
  (c-name "gtk_paned_get_resize_end_child")
  (return-type "gboolean")
)

(define-method set_shrink_end_child
  (of-object "GtkPaned")
  (c-name "gtk_paned_set_shrink_end_child")
  (return-type "none")
  (parameters
    '("gboolean" "resize")
  )
)

(define-method get_shrink_end_child
  (of-object "GtkPaned")
  (c-name "gtk_paned_get_shrink_end_child")
  (return-type "gboolean")
)

(define-method get_position
  (of-object "GtkPaned")
  (c-name "gtk_paned_get_position")
  (return-type "int")
)

(define-method set_position
  (of-object "GtkPaned")
  (c-name "gtk_paned_set_position")
  (return-type "none")
  (parameters
    '("int" "position")
  )
)

(define-method set_wide_handle
  (of-object "GtkPaned")
  (c-name "gtk_paned_set_wide_handle")
  (return-type "none")
  (parameters
    '("gboolean" "wide")
  )
)

(define-method get_wide_handle
  (of-object "GtkPaned")
  (c-name "gtk_paned_get_wide_handle")
  (return-type "gboolean")
)



;; From gtkpango.h

(define-method attribute_tag_start
  (of-object "GtkBuildable")
  (c-name "gtk_buildable_attribute_tag_start")
  (return-type "gboolean")
  (parameters
    '("GtkBuilder*" "builder")
    '("GObject*" "child")
    '("const-char*" "tagname")
    '("GtkBuildableParser*" "parser")
    '("gpointer*" "data")
  )
)

(define-function gtk_pango_attribute_start_element
  (c-name "gtk_pango_attribute_start_element")
  (return-type "none")
  (parameters
    '("GtkBuildableParseContext*" "context")
    '("const-char*" "element_name")
    '("const-char**" "names")
    '("const-char**" "values")
    '("gpointer" "user_data")
    '("GError**" "error")
  )
)



;; From gtkpapersize.h

(define-function gtk_paper_size_get_type
  (c-name "gtk_paper_size_get_type")
  (return-type "GType")
)

(define-function gtk_paper_size_new
  (c-name "gtk_paper_size_new")
  (is-constructor-of "GtkPaperSize")
  (return-type "GtkPaperSize*")
  (parameters
    '("const-char*" "name")
  )
)

(define-function gtk_paper_size_new_from_ppd
  (c-name "gtk_paper_size_new_from_ppd")
  (return-type "GtkPaperSize*")
  (parameters
    '("const-char*" "ppd_name")
    '("const-char*" "ppd_display_name")
    '("double" "width")
    '("double" "height")
  )
)

(define-function gtk_paper_size_new_from_ipp
  (c-name "gtk_paper_size_new_from_ipp")
  (return-type "GtkPaperSize*")
  (parameters
    '("const-char*" "ipp_name")
    '("double" "width")
    '("double" "height")
  )
)

(define-function gtk_paper_size_new_custom
  (c-name "gtk_paper_size_new_custom")
  (return-type "GtkPaperSize*")
  (parameters
    '("const-char*" "name")
    '("const-char*" "display_name")
    '("double" "width")
    '("double" "height")
    '("GtkUnit" "unit")
  )
)

(define-method copy
  (of-object "GtkPaperSize")
  (c-name "gtk_paper_size_copy")
  (return-type "GtkPaperSize*")
)

(define-method free
  (of-object "GtkPaperSize")
  (c-name "gtk_paper_size_free")
  (return-type "none")
)

(define-method is_equal
  (of-object "GtkPaperSize")
  (c-name "gtk_paper_size_is_equal")
  (return-type "gboolean")
  (parameters
    '("GtkPaperSize*" "size2")
  )
)

(define-function gtk_paper_size_get_paper_sizes
  (c-name "gtk_paper_size_get_paper_sizes")
  (return-type "GList*")
  (parameters
    '("gboolean" "include_custom")
  )
)

(define-method get_name
  (of-object "GtkPaperSize")
  (c-name "gtk_paper_size_get_name")
  (return-type "const-char*")
)

(define-method get_display_name
  (of-object "GtkPaperSize")
  (c-name "gtk_paper_size_get_display_name")
  (return-type "const-char*")
)

(define-method get_ppd_name
  (of-object "GtkPaperSize")
  (c-name "gtk_paper_size_get_ppd_name")
  (return-type "const-char*")
)

(define-method get_width
  (of-object "GtkPaperSize")
  (c-name "gtk_paper_size_get_width")
  (return-type "double")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-method get_height
  (of-object "GtkPaperSize")
  (c-name "gtk_paper_size_get_height")
  (return-type "double")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-method is_custom
  (of-object "GtkPaperSize")
  (c-name "gtk_paper_size_is_custom")
  (return-type "gboolean")
)

(define-method is_ipp
  (of-object "GtkPaperSize")
  (c-name "gtk_paper_size_is_ipp")
  (return-type "gboolean")
)

(define-method set_size
  (of-object "GtkPaperSize")
  (c-name "gtk_paper_size_set_size")
  (return-type "none")
  (parameters
    '("double" "width")
    '("double" "height")
    '("GtkUnit" "unit")
  )
)

(define-method get_default_top_margin
  (of-object "GtkPaperSize")
  (c-name "gtk_paper_size_get_default_top_margin")
  (return-type "double")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-method get_default_bottom_margin
  (of-object "GtkPaperSize")
  (c-name "gtk_paper_size_get_default_bottom_margin")
  (return-type "double")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-method get_default_left_margin
  (of-object "GtkPaperSize")
  (c-name "gtk_paper_size_get_default_left_margin")
  (return-type "double")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-method get_default_right_margin
  (of-object "GtkPaperSize")
  (c-name "gtk_paper_size_get_default_right_margin")
  (return-type "double")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-function gtk_paper_size_get_default
  (c-name "gtk_paper_size_get_default")
  (return-type "const-char*")
)

(define-function gtk_paper_size_new_from_key_file
  (c-name "gtk_paper_size_new_from_key_file")
  (return-type "GtkPaperSize*")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-char*" "group_name")
    '("GError**" "error")
  )
)

(define-method to_key_file
  (of-object "GtkPaperSize")
  (c-name "gtk_paper_size_to_key_file")
  (return-type "none")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-char*" "group_name")
  )
)

(define-function gtk_paper_size_new_from_gvariant
  (c-name "gtk_paper_size_new_from_gvariant")
  (return-type "GtkPaperSize*")
  (parameters
    '("GVariant*" "variant")
  )
)

(define-method to_gvariant
  (of-object "GtkPaperSize")
  (c-name "gtk_paper_size_to_gvariant")
  (return-type "GVariant*")
)



;; From gtkpasswordentry.h

(define-function gtk_password_entry_get_type
  (c-name "gtk_password_entry_get_type")
  (return-type "GType")
)

(define-function gtk_password_entry_new
  (c-name "gtk_password_entry_new")
  (is-constructor-of "GtkPasswordEntry")
  (return-type "GtkWidget*")
)

(define-method set_show_peek_icon
  (of-object "GtkPasswordEntry")
  (c-name "gtk_password_entry_set_show_peek_icon")
  (return-type "none")
  (parameters
    '("gboolean" "show_peek_icon")
  )
)

(define-method get_show_peek_icon
  (of-object "GtkPasswordEntry")
  (c-name "gtk_password_entry_get_show_peek_icon")
  (return-type "gboolean")
)

(define-method set_extra_menu
  (of-object "GtkPasswordEntry")
  (c-name "gtk_password_entry_set_extra_menu")
  (return-type "none")
  (parameters
    '("GMenuModel*" "model")
  )
)

(define-method get_extra_menu
  (of-object "GtkPasswordEntry")
  (c-name "gtk_password_entry_get_extra_menu")
  (return-type "GMenuModel*")
)



;; From gtkpathbar.h

(define-function gtk_path_bar_get_type
  (c-name "gtk_path_bar_get_type")
  (return-type "GType")
)



;; From gtkpicture.h

(define-function gtk_picture_new
  (c-name "gtk_picture_new")
  (is-constructor-of "GtkPicture")
  (return-type "GtkWidget*")
)

(define-function gtk_picture_new_for_paintable
  (c-name "gtk_picture_new_for_paintable")
  (return-type "GtkWidget*")
  (parameters
    '("GdkPaintable*" "paintable")
  )
)

(define-function gtk_picture_new_for_pixbuf
  (c-name "gtk_picture_new_for_pixbuf")
  (return-type "GtkWidget*")
  (parameters
    '("GdkPixbuf*" "pixbuf")
  )
)

(define-function gtk_picture_new_for_file
  (c-name "gtk_picture_new_for_file")
  (return-type "GtkWidget*")
  (parameters
    '("GFile*" "file")
  )
)

(define-function gtk_picture_new_for_filename
  (c-name "gtk_picture_new_for_filename")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "filename")
  )
)

(define-function gtk_picture_new_for_resource
  (c-name "gtk_picture_new_for_resource")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "resource_path")
  )
)

(define-method set_paintable
  (of-object "GtkPicture")
  (c-name "gtk_picture_set_paintable")
  (return-type "none")
  (parameters
    '("GdkPaintable*" "paintable")
  )
)

(define-method get_paintable
  (of-object "GtkPicture")
  (c-name "gtk_picture_get_paintable")
  (return-type "GdkPaintable*")
)

(define-method set_file
  (of-object "GtkPicture")
  (c-name "gtk_picture_set_file")
  (return-type "none")
  (parameters
    '("GFile*" "file")
  )
)

(define-method get_file
  (of-object "GtkPicture")
  (c-name "gtk_picture_get_file")
  (return-type "GFile*")
)

(define-method set_filename
  (of-object "GtkPicture")
  (c-name "gtk_picture_set_filename")
  (return-type "none")
  (parameters
    '("const-char*" "filename")
  )
)

(define-method set_resource
  (of-object "GtkPicture")
  (c-name "gtk_picture_set_resource")
  (return-type "none")
  (parameters
    '("const-char*" "resource_path")
  )
)

(define-method set_pixbuf
  (of-object "GtkPicture")
  (c-name "gtk_picture_set_pixbuf")
  (return-type "none")
  (parameters
    '("GdkPixbuf*" "pixbuf")
  )
)

(define-method set_keep_aspect_ratio
  (of-object "GtkPicture")
  (c-name "gtk_picture_set_keep_aspect_ratio")
  (return-type "none")
  (parameters
    '("gboolean" "keep_aspect_ratio")
  )
)

(define-method get_keep_aspect_ratio
  (of-object "GtkPicture")
  (c-name "gtk_picture_get_keep_aspect_ratio")
  (return-type "gboolean")
)

(define-method set_can_shrink
  (of-object "GtkPicture")
  (c-name "gtk_picture_set_can_shrink")
  (return-type "none")
  (parameters
    '("gboolean" "can_shrink")
  )
)

(define-method get_can_shrink
  (of-object "GtkPicture")
  (c-name "gtk_picture_get_can_shrink")
  (return-type "gboolean")
)

(define-method set_alternative_text
  (of-object "GtkPicture")
  (c-name "gtk_picture_set_alternative_text")
  (return-type "none")
  (parameters
    '("const-char*" "alternative_text")
  )
)

(define-method get_alternative_text
  (of-object "GtkPicture")
  (c-name "gtk_picture_get_alternative_text")
  (return-type "const-char*")
)



;; From gtkpopover.h

(define-function gtk_popover_get_type
  (c-name "gtk_popover_get_type")
  (return-type "GType")
)

(define-function gtk_popover_new
  (c-name "gtk_popover_new")
  (is-constructor-of "GtkPopover")
  (return-type "GtkWidget*")
)

(define-method set_child
  (of-object "GtkPopover")
  (c-name "gtk_popover_set_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_child
  (of-object "GtkPopover")
  (c-name "gtk_popover_get_child")
  (return-type "GtkWidget*")
)

(define-method set_pointing_to
  (of-object "GtkPopover")
  (c-name "gtk_popover_set_pointing_to")
  (return-type "none")
  (parameters
    '("const-GdkRectangle*" "rect")
  )
)

(define-method get_pointing_to
  (of-object "GtkPopover")
  (c-name "gtk_popover_get_pointing_to")
  (return-type "gboolean")
  (parameters
    '("GdkRectangle*" "rect")
  )
)

(define-method set_position
  (of-object "GtkPopover")
  (c-name "gtk_popover_set_position")
  (return-type "none")
  (parameters
    '("GtkPositionType" "position")
  )
)

(define-method get_position
  (of-object "GtkPopover")
  (c-name "gtk_popover_get_position")
  (return-type "GtkPositionType")
)

(define-method set_autohide
  (of-object "GtkPopover")
  (c-name "gtk_popover_set_autohide")
  (return-type "none")
  (parameters
    '("gboolean" "autohide")
  )
)

(define-method get_autohide
  (of-object "GtkPopover")
  (c-name "gtk_popover_get_autohide")
  (return-type "gboolean")
)

(define-method set_has_arrow
  (of-object "GtkPopover")
  (c-name "gtk_popover_set_has_arrow")
  (return-type "none")
  (parameters
    '("gboolean" "has_arrow")
  )
)

(define-method get_has_arrow
  (of-object "GtkPopover")
  (c-name "gtk_popover_get_has_arrow")
  (return-type "gboolean")
)

(define-method set_mnemonics_visible
  (of-object "GtkPopover")
  (c-name "gtk_popover_set_mnemonics_visible")
  (return-type "none")
  (parameters
    '("gboolean" "mnemonics_visible")
  )
)

(define-method get_mnemonics_visible
  (of-object "GtkPopover")
  (c-name "gtk_popover_get_mnemonics_visible")
  (return-type "gboolean")
)

(define-method popup
  (of-object "GtkPopover")
  (c-name "gtk_popover_popup")
  (return-type "none")
)

(define-method popdown
  (of-object "GtkPopover")
  (c-name "gtk_popover_popdown")
  (return-type "none")
)

(define-method set_offset
  (of-object "GtkPopover")
  (c-name "gtk_popover_set_offset")
  (return-type "none")
  (parameters
    '("int" "x_offset")
    '("int" "y_offset")
  )
)

(define-method get_offset
  (of-object "GtkPopover")
  (c-name "gtk_popover_get_offset")
  (return-type "none")
  (parameters
    '("int*" "x_offset")
    '("int*" "y_offset")
  )
)

(define-method set_cascade_popdown
  (of-object "GtkPopover")
  (c-name "gtk_popover_set_cascade_popdown")
  (return-type "none")
  (parameters
    '("gboolean" "cascade_popdown")
  )
)

(define-method get_cascade_popdown
  (of-object "GtkPopover")
  (c-name "gtk_popover_get_cascade_popdown")
  (return-type "gboolean")
)

(define-method set_default_widget
  (of-object "GtkPopover")
  (c-name "gtk_popover_set_default_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method present
  (of-object "GtkPopover")
  (c-name "gtk_popover_present")
  (return-type "none")
)



;; From gtkpopovermenubar.h

(define-function gtk_popover_menu_bar_get_type
  (c-name "gtk_popover_menu_bar_get_type")
  (return-type "GType")
)

(define-function gtk_popover_menu_bar_new_from_model
  (c-name "gtk_popover_menu_bar_new_from_model")
  (return-type "GtkWidget*")
  (parameters
    '("GMenuModel*" "model")
  )
)

(define-method set_menu_model
  (of-object "GtkPopoverMenuBar")
  (c-name "gtk_popover_menu_bar_set_menu_model")
  (return-type "none")
  (parameters
    '("GMenuModel*" "model")
  )
)

(define-method get_menu_model
  (of-object "GtkPopoverMenuBar")
  (c-name "gtk_popover_menu_bar_get_menu_model")
  (return-type "GMenuModel*")
)

(define-method add_child
  (of-object "GtkPopoverMenuBar")
  (c-name "gtk_popover_menu_bar_add_child")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "child")
    '("const-char*" "id")
  )
)

(define-method remove_child
  (of-object "GtkPopoverMenuBar")
  (c-name "gtk_popover_menu_bar_remove_child")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "child")
  )
)



;; From gtkpopovermenu.h

(define-function gtk_popover_menu_get_type
  (c-name "gtk_popover_menu_get_type")
  (return-type "GType")
)

(define-function gtk_popover_menu_new_from_model
  (c-name "gtk_popover_menu_new_from_model")
  (return-type "GtkWidget*")
  (parameters
    '("GMenuModel*" "model")
  )
)

(define-function gtk_popover_menu_new_from_model_full
  (c-name "gtk_popover_menu_new_from_model_full")
  (return-type "GtkWidget*")
  (parameters
    '("GMenuModel*" "model")
    '("GtkPopoverMenuFlags" "flags")
  )
)

(define-method set_menu_model
  (of-object "GtkPopoverMenu")
  (c-name "gtk_popover_menu_set_menu_model")
  (return-type "none")
  (parameters
    '("GMenuModel*" "model")
  )
)

(define-method get_menu_model
  (of-object "GtkPopoverMenu")
  (c-name "gtk_popover_menu_get_menu_model")
  (return-type "GMenuModel*")
)

(define-method add_child
  (of-object "GtkPopoverMenu")
  (c-name "gtk_popover_menu_add_child")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "child")
    '("const-char*" "id")
  )
)

(define-method remove_child
  (of-object "GtkPopoverMenu")
  (c-name "gtk_popover_menu_remove_child")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "child")
  )
)



;; From gtkprintcontext.h

(define-function gtk_print_context_get_type
  (c-name "gtk_print_context_get_type")
  (return-type "GType")
)

(define-method get_cairo_context
  (of-object "GtkPrintContext")
  (c-name "gtk_print_context_get_cairo_context")
  (return-type "cairo_t*")
)

(define-method get_page_setup
  (of-object "GtkPrintContext")
  (c-name "gtk_print_context_get_page_setup")
  (return-type "GtkPageSetup*")
)

(define-method get_width
  (of-object "GtkPrintContext")
  (c-name "gtk_print_context_get_width")
  (return-type "double")
)

(define-method get_height
  (of-object "GtkPrintContext")
  (c-name "gtk_print_context_get_height")
  (return-type "double")
)

(define-method get_dpi_x
  (of-object "GtkPrintContext")
  (c-name "gtk_print_context_get_dpi_x")
  (return-type "double")
)

(define-method get_dpi_y
  (of-object "GtkPrintContext")
  (c-name "gtk_print_context_get_dpi_y")
  (return-type "double")
)

(define-method get_hard_margins
  (of-object "GtkPrintContext")
  (c-name "gtk_print_context_get_hard_margins")
  (return-type "gboolean")
  (parameters
    '("double*" "top")
    '("double*" "bottom")
    '("double*" "left")
    '("double*" "right")
  )
)

(define-method get_pango_fontmap
  (of-object "GtkPrintContext")
  (c-name "gtk_print_context_get_pango_fontmap")
  (return-type "PangoFontMap*")
)

(define-method create_pango_context
  (of-object "GtkPrintContext")
  (c-name "gtk_print_context_create_pango_context")
  (return-type "PangoContext*")
)

(define-method create_pango_layout
  (of-object "GtkPrintContext")
  (c-name "gtk_print_context_create_pango_layout")
  (return-type "PangoLayout*")
)

(define-method set_cairo_context
  (of-object "GtkPrintContext")
  (c-name "gtk_print_context_set_cairo_context")
  (return-type "none")
  (parameters
    '("cairo_t*" "cr")
    '("double" "dpi_x")
    '("double" "dpi_y")
  )
)



;; From gtkprinter.h

(define-function gtk_print_capabilities_get_type
  (c-name "gtk_print_capabilities_get_type")
  (return-type "GType")
)

(define-function gtk_printer_get_type
  (c-name "gtk_printer_get_type")
  (return-type "GType")
)

(define-function gtk_printer_new
  (c-name "gtk_printer_new")
  (is-constructor-of "GtkPrinter")
  (return-type "GtkPrinter*")
  (parameters
    '("const-char*" "name")
    '("GtkPrintBackend*" "backend")
    '("gboolean" "virtual_")
  )
)

(define-method get_backend
  (of-object "GtkPrinter")
  (c-name "gtk_printer_get_backend")
  (return-type "GtkPrintBackend*")
)

(define-method get_name
  (of-object "GtkPrinter")
  (c-name "gtk_printer_get_name")
  (return-type "const-char*")
)

(define-method get_state_message
  (of-object "GtkPrinter")
  (c-name "gtk_printer_get_state_message")
  (return-type "const-char*")
)

(define-method get_description
  (of-object "GtkPrinter")
  (c-name "gtk_printer_get_description")
  (return-type "const-char*")
)

(define-method get_location
  (of-object "GtkPrinter")
  (c-name "gtk_printer_get_location")
  (return-type "const-char*")
)

(define-method get_icon_name
  (of-object "GtkPrinter")
  (c-name "gtk_printer_get_icon_name")
  (return-type "const-char*")
)

(define-method get_job_count
  (of-object "GtkPrinter")
  (c-name "gtk_printer_get_job_count")
  (return-type "int")
)

(define-method is_active
  (of-object "GtkPrinter")
  (c-name "gtk_printer_is_active")
  (return-type "gboolean")
)

(define-method is_paused
  (of-object "GtkPrinter")
  (c-name "gtk_printer_is_paused")
  (return-type "gboolean")
)

(define-method is_accepting_jobs
  (of-object "GtkPrinter")
  (c-name "gtk_printer_is_accepting_jobs")
  (return-type "gboolean")
)

(define-method is_virtual
  (of-object "GtkPrinter")
  (c-name "gtk_printer_is_virtual")
  (return-type "gboolean")
)

(define-method is_default
  (of-object "GtkPrinter")
  (c-name "gtk_printer_is_default")
  (return-type "gboolean")
)

(define-method accepts_pdf
  (of-object "GtkPrinter")
  (c-name "gtk_printer_accepts_pdf")
  (return-type "gboolean")
)

(define-method accepts_ps
  (of-object "GtkPrinter")
  (c-name "gtk_printer_accepts_ps")
  (return-type "gboolean")
)

(define-method list_papers
  (of-object "GtkPrinter")
  (c-name "gtk_printer_list_papers")
  (return-type "GList*")
)

(define-method get_default_page_size
  (of-object "GtkPrinter")
  (c-name "gtk_printer_get_default_page_size")
  (return-type "GtkPageSetup*")
)

(define-method compare
  (of-object "GtkPrinter")
  (c-name "gtk_printer_compare")
  (return-type "int")
  (parameters
    '("GtkPrinter*" "b")
  )
)

(define-method has_details
  (of-object "GtkPrinter")
  (c-name "gtk_printer_has_details")
  (return-type "gboolean")
)

(define-method request_details
  (of-object "GtkPrinter")
  (c-name "gtk_printer_request_details")
  (return-type "none")
)

(define-method get_capabilities
  (of-object "GtkPrinter")
  (c-name "gtk_printer_get_capabilities")
  (return-type "GtkPrintCapabilities")
)

(define-method get_hard_margins
  (of-object "GtkPrinter")
  (c-name "gtk_printer_get_hard_margins")
  (return-type "gboolean")
  (parameters
    '("double*" "top")
    '("double*" "bottom")
    '("double*" "left")
    '("double*" "right")
  )
)

(define-method get_hard_margins_for_paper_size
  (of-object "GtkPrinter")
  (c-name "gtk_printer_get_hard_margins_for_paper_size")
  (return-type "gboolean")
  (parameters
    '("GtkPaperSize*" "paper_size")
    '("double*" "top")
    '("double*" "bottom")
    '("double*" "left")
    '("double*" "right")
  )
)

(define-function gtk_enumerate_printers
  (c-name "gtk_enumerate_printers")
  (return-type "none")
  (parameters
    '("GtkPrinterFunc" "func")
    '("gpointer" "data")
    '("GDestroyNotify" "destroy")
    '("gboolean" "wait")
  )
)



;; From gtkprinteroption.h

(define-function gtk_printer_option_get_type
  (c-name "gtk_printer_option_get_type")
  (return-type "GType")
)

(define-function gtk_printer_option_new
  (c-name "gtk_printer_option_new")
  (is-constructor-of "GtkPrinterOption")
  (return-type "GtkPrinterOption*")
  (parameters
    '("const-char*" "name")
    '("const-char*" "display_text")
    '("GtkPrinterOptionType" "type")
  )
)

(define-method set
  (of-object "GtkPrinterOption")
  (c-name "gtk_printer_option_set")
  (return-type "none")
  (parameters
    '("const-char*" "value")
  )
)

(define-method set_has_conflict
  (of-object "GtkPrinterOption")
  (c-name "gtk_printer_option_set_has_conflict")
  (return-type "none")
  (parameters
    '("gboolean" "has_conflict")
  )
)

(define-method clear_has_conflict
  (of-object "GtkPrinterOption")
  (c-name "gtk_printer_option_clear_has_conflict")
  (return-type "none")
)

(define-method set_boolean
  (of-object "GtkPrinterOption")
  (c-name "gtk_printer_option_set_boolean")
  (return-type "none")
  (parameters
    '("gboolean" "value")
  )
)

(define-method allocate_choices
  (of-object "GtkPrinterOption")
  (c-name "gtk_printer_option_allocate_choices")
  (return-type "none")
  (parameters
    '("int" "num")
  )
)

(define-method choices_from_array
  (of-object "GtkPrinterOption")
  (c-name "gtk_printer_option_choices_from_array")
  (return-type "none")
  (parameters
    '("int" "num_choices")
    '("const-char**" "choices")
    '("const-char**" "choices_display")
  )
)

(define-method has_choice
  (of-object "GtkPrinterOption")
  (c-name "gtk_printer_option_has_choice")
  (return-type "gboolean")
  (parameters
    '("const-char*" "choice")
  )
)

(define-method set_activates_default
  (of-object "GtkPrinterOption")
  (c-name "gtk_printer_option_set_activates_default")
  (return-type "none")
  (parameters
    '("gboolean" "activates")
  )
)

(define-method get_activates_default
  (of-object "GtkPrinterOption")
  (c-name "gtk_printer_option_get_activates_default")
  (return-type "gboolean")
)



;; From gtkprinteroptionset.h

(define-function gtk_printer_option_set_get_type
  (c-name "gtk_printer_option_set_get_type")
  (return-type "GType")
)

(define-function gtk_printer_option_set_new
  (c-name "gtk_printer_option_set_new")
  (is-constructor-of "GtkPrinterOptionSet")
  (return-type "GtkPrinterOptionSet*")
)

(define-method add
  (of-object "GtkPrinterOptionSet")
  (c-name "gtk_printer_option_set_add")
  (return-type "none")
  (parameters
    '("GtkPrinterOption*" "option")
  )
)

(define-method remove
  (of-object "GtkPrinterOptionSet")
  (c-name "gtk_printer_option_set_remove")
  (return-type "none")
  (parameters
    '("GtkPrinterOption*" "option")
  )
)

(define-method lookup
  (of-object "GtkPrinterOptionSet")
  (c-name "gtk_printer_option_set_lookup")
  (return-type "GtkPrinterOption*")
  (parameters
    '("const-char*" "name")
  )
)

(define-method foreach
  (of-object "GtkPrinterOptionSet")
  (c-name "gtk_printer_option_set_foreach")
  (return-type "none")
  (parameters
    '("GtkPrinterOptionSetFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-method clear_conflicts
  (of-object "GtkPrinterOptionSet")
  (c-name "gtk_printer_option_set_clear_conflicts")
  (return-type "none")
)

(define-method get_groups
  (of-object "GtkPrinterOptionSet")
  (c-name "gtk_printer_option_set_get_groups")
  (return-type "GList*")
)

(define-method foreach_in_group
  (of-object "GtkPrinterOptionSet")
  (c-name "gtk_printer_option_set_foreach_in_group")
  (return-type "none")
  (parameters
    '("const-char*" "group")
    '("GtkPrinterOptionSetFunc" "func")
    '("gpointer" "user_data")
  )
)



;; From gtkprinteroptionwidget.h

(define-function gtk_printer_option_widget_get_type
  (c-name "gtk_printer_option_widget_get_type")
  (return-type "GType")
)

(define-method widget_new
  (of-object "GtkPrinterOption")
  (c-name "gtk_printer_option_widget_new")
  (return-type "GtkWidget*")
)

(define-method set_source
  (of-object "GtkPrinterOptionWidget")
  (c-name "gtk_printer_option_widget_set_source")
  (return-type "none")
  (parameters
    '("GtkPrinterOption*" "source")
  )
)

(define-method has_external_label
  (of-object "GtkPrinterOptionWidget")
  (c-name "gtk_printer_option_widget_has_external_label")
  (return-type "gboolean")
)

(define-method get_external_label
  (of-object "GtkPrinterOptionWidget")
  (c-name "gtk_printer_option_widget_get_external_label")
  (return-type "GtkWidget*")
)

(define-method get_value
  (of-object "GtkPrinterOptionWidget")
  (c-name "gtk_printer_option_widget_get_value")
  (return-type "const-char*")
)



;; From gtkprintjob.h

(define-function gtk_print_job_get_type
  (c-name "gtk_print_job_get_type")
  (return-type "GType")
)

(define-function gtk_print_job_new
  (c-name "gtk_print_job_new")
  (is-constructor-of "GtkPrintJob")
  (return-type "GtkPrintJob*")
  (parameters
    '("const-char*" "title")
    '("GtkPrinter*" "printer")
    '("GtkPrintSettings*" "settings")
    '("GtkPageSetup*" "page_setup")
  )
)

(define-method get_settings
  (of-object "GtkPrintJob")
  (c-name "gtk_print_job_get_settings")
  (return-type "GtkPrintSettings*")
)

(define-method get_printer
  (of-object "GtkPrintJob")
  (c-name "gtk_print_job_get_printer")
  (return-type "GtkPrinter*")
)

(define-method get_title
  (of-object "GtkPrintJob")
  (c-name "gtk_print_job_get_title")
  (return-type "const-char*")
)

(define-method get_status
  (of-object "GtkPrintJob")
  (c-name "gtk_print_job_get_status")
  (return-type "GtkPrintStatus")
)

(define-method set_source_file
  (of-object "GtkPrintJob")
  (c-name "gtk_print_job_set_source_file")
  (return-type "gboolean")
  (parameters
    '("const-char*" "filename")
    '("GError**" "error")
  )
)

(define-method set_source_fd
  (of-object "GtkPrintJob")
  (c-name "gtk_print_job_set_source_fd")
  (return-type "gboolean")
  (parameters
    '("int" "fd")
    '("GError**" "error")
  )
)

(define-method get_surface
  (of-object "GtkPrintJob")
  (c-name "gtk_print_job_get_surface")
  (return-type "cairo_surface_t*")
  (parameters
    '("GError**" "error")
  )
)

(define-method set_track_print_status
  (of-object "GtkPrintJob")
  (c-name "gtk_print_job_set_track_print_status")
  (return-type "none")
  (parameters
    '("gboolean" "track_status")
  )
)

(define-method get_track_print_status
  (of-object "GtkPrintJob")
  (c-name "gtk_print_job_get_track_print_status")
  (return-type "gboolean")
)

(define-method send
  (of-object "GtkPrintJob")
  (c-name "gtk_print_job_send")
  (return-type "none")
  (parameters
    '("GtkPrintJobCompleteFunc" "callback")
    '("gpointer" "user_data")
    '("GDestroyNotify" "dnotify")
  )
)

(define-method get_pages
  (of-object "GtkPrintJob")
  (c-name "gtk_print_job_get_pages")
  (return-type "GtkPrintPages")
)

(define-method set_pages
  (of-object "GtkPrintJob")
  (c-name "gtk_print_job_set_pages")
  (return-type "none")
  (parameters
    '("GtkPrintPages" "pages")
  )
)

(define-method get_page_ranges
  (of-object "GtkPrintJob")
  (c-name "gtk_print_job_get_page_ranges")
  (return-type "GtkPageRange*")
  (parameters
    '("int*" "n_ranges")
  )
)

(define-method set_page_ranges
  (of-object "GtkPrintJob")
  (c-name "gtk_print_job_set_page_ranges")
  (return-type "none")
  (parameters
    '("GtkPageRange*" "ranges")
    '("int" "n_ranges")
  )
)

(define-method get_page_set
  (of-object "GtkPrintJob")
  (c-name "gtk_print_job_get_page_set")
  (return-type "GtkPageSet")
)

(define-method set_page_set
  (of-object "GtkPrintJob")
  (c-name "gtk_print_job_set_page_set")
  (return-type "none")
  (parameters
    '("GtkPageSet" "page_set")
  )
)

(define-method get_num_copies
  (of-object "GtkPrintJob")
  (c-name "gtk_print_job_get_num_copies")
  (return-type "int")
)

(define-method set_num_copies
  (of-object "GtkPrintJob")
  (c-name "gtk_print_job_set_num_copies")
  (return-type "none")
  (parameters
    '("int" "num_copies")
  )
)

(define-method get_scale
  (of-object "GtkPrintJob")
  (c-name "gtk_print_job_get_scale")
  (return-type "double")
)

(define-method set_scale
  (of-object "GtkPrintJob")
  (c-name "gtk_print_job_set_scale")
  (return-type "none")
  (parameters
    '("double" "scale")
  )
)

(define-method get_n_up
  (of-object "GtkPrintJob")
  (c-name "gtk_print_job_get_n_up")
  (return-type "guint")
)

(define-method set_n_up
  (of-object "GtkPrintJob")
  (c-name "gtk_print_job_set_n_up")
  (return-type "none")
  (parameters
    '("guint" "n_up")
  )
)

(define-method get_n_up_layout
  (of-object "GtkPrintJob")
  (c-name "gtk_print_job_get_n_up_layout")
  (return-type "GtkNumberUpLayout")
)

(define-method set_n_up_layout
  (of-object "GtkPrintJob")
  (c-name "gtk_print_job_set_n_up_layout")
  (return-type "none")
  (parameters
    '("GtkNumberUpLayout" "layout")
  )
)

(define-method get_rotate
  (of-object "GtkPrintJob")
  (c-name "gtk_print_job_get_rotate")
  (return-type "gboolean")
)

(define-method set_rotate
  (of-object "GtkPrintJob")
  (c-name "gtk_print_job_set_rotate")
  (return-type "none")
  (parameters
    '("gboolean" "rotate")
  )
)

(define-method get_collate
  (of-object "GtkPrintJob")
  (c-name "gtk_print_job_get_collate")
  (return-type "gboolean")
)

(define-method set_collate
  (of-object "GtkPrintJob")
  (c-name "gtk_print_job_set_collate")
  (return-type "none")
  (parameters
    '("gboolean" "collate")
  )
)

(define-method get_reverse
  (of-object "GtkPrintJob")
  (c-name "gtk_print_job_get_reverse")
  (return-type "gboolean")
)

(define-method set_reverse
  (of-object "GtkPrintJob")
  (c-name "gtk_print_job_set_reverse")
  (return-type "none")
  (parameters
    '("gboolean" "reverse")
  )
)



;; From gtkprintoperation.h

(define-function gtk_print_error_quark
  (c-name "gtk_print_error_quark")
  (return-type "GQuark")
)

(define-function gtk_print_operation_get_type
  (c-name "gtk_print_operation_get_type")
  (return-type "GType")
)

(define-function gtk_print_operation_new
  (c-name "gtk_print_operation_new")
  (is-constructor-of "GtkPrintOperation")
  (return-type "GtkPrintOperation*")
)

(define-method set_default_page_setup
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_set_default_page_setup")
  (return-type "none")
  (parameters
    '("GtkPageSetup*" "default_page_setup")
  )
)

(define-method get_default_page_setup
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_get_default_page_setup")
  (return-type "GtkPageSetup*")
)

(define-method set_print_settings
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_set_print_settings")
  (return-type "none")
  (parameters
    '("GtkPrintSettings*" "print_settings")
  )
)

(define-method get_print_settings
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_get_print_settings")
  (return-type "GtkPrintSettings*")
)

(define-method set_job_name
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_set_job_name")
  (return-type "none")
  (parameters
    '("const-char*" "job_name")
  )
)

(define-method set_n_pages
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_set_n_pages")
  (return-type "none")
  (parameters
    '("int" "n_pages")
  )
)

(define-method set_current_page
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_set_current_page")
  (return-type "none")
  (parameters
    '("int" "current_page")
  )
)

(define-method set_use_full_page
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_set_use_full_page")
  (return-type "none")
  (parameters
    '("gboolean" "full_page")
  )
)

(define-method set_unit
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_set_unit")
  (return-type "none")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-method set_export_filename
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_set_export_filename")
  (return-type "none")
  (parameters
    '("const-char*" "filename")
  )
)

(define-method set_track_print_status
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_set_track_print_status")
  (return-type "none")
  (parameters
    '("gboolean" "track_status")
  )
)

(define-method set_show_progress
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_set_show_progress")
  (return-type "none")
  (parameters
    '("gboolean" "show_progress")
  )
)

(define-method set_allow_async
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_set_allow_async")
  (return-type "none")
  (parameters
    '("gboolean" "allow_async")
  )
)

(define-method set_custom_tab_label
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_set_custom_tab_label")
  (return-type "none")
  (parameters
    '("const-char*" "label")
  )
)

(define-method run
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_run")
  (return-type "GtkPrintOperationResult")
  (parameters
    '("GtkPrintOperationAction" "action")
    '("GtkWindow*" "parent")
    '("GError**" "error")
  )
)

(define-method get_error
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_get_error")
  (return-type "none")
  (parameters
    '("GError**" "error")
  )
)

(define-method get_status
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_get_status")
  (return-type "GtkPrintStatus")
)

(define-method get_status_string
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_get_status_string")
  (return-type "const-char*")
)

(define-method is_finished
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_is_finished")
  (return-type "gboolean")
)

(define-method cancel
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_cancel")
  (return-type "none")
)

(define-method draw_page_finish
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_draw_page_finish")
  (return-type "none")
)

(define-method set_defer_drawing
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_set_defer_drawing")
  (return-type "none")
)

(define-method set_support_selection
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_set_support_selection")
  (return-type "none")
  (parameters
    '("gboolean" "support_selection")
  )
)

(define-method get_support_selection
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_get_support_selection")
  (return-type "gboolean")
)

(define-method set_has_selection
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_set_has_selection")
  (return-type "none")
  (parameters
    '("gboolean" "has_selection")
  )
)

(define-method get_has_selection
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_get_has_selection")
  (return-type "gboolean")
)

(define-method set_embed_page_setup
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_set_embed_page_setup")
  (return-type "none")
  (parameters
    '("gboolean" "embed")
  )
)

(define-method get_embed_page_setup
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_get_embed_page_setup")
  (return-type "gboolean")
)

(define-method get_n_pages_to_print
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_get_n_pages_to_print")
  (return-type "int")
)

(define-function gtk_print_run_page_setup_dialog
  (c-name "gtk_print_run_page_setup_dialog")
  (return-type "GtkPageSetup*")
  (parameters
    '("GtkWindow*" "parent")
    '("GtkPageSetup*" "page_setup")
    '("GtkPrintSettings*" "settings")
  )
)

(define-function gtk_print_run_page_setup_dialog_async
  (c-name "gtk_print_run_page_setup_dialog_async")
  (return-type "none")
  (parameters
    '("GtkWindow*" "parent")
    '("GtkPageSetup*" "page_setup")
    '("GtkPrintSettings*" "settings")
    '("GtkPageSetupDoneFunc" "done_cb")
    '("gpointer" "data")
  )
)



;; From gtkprintoperation-portal.h

(define-method portal_run_dialog
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_portal_run_dialog")
  (return-type "GtkPrintOperationResult")
  (parameters
    '("gboolean" "show_dialog")
    '("GtkWindow*" "parent")
    '("gboolean*" "do_print")
  )
)

(define-method portal_run_dialog_async
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_portal_run_dialog_async")
  (return-type "none")
  (parameters
    '("gboolean" "show_dialog")
    '("GtkWindow*" "parent")
    '("GtkPrintOperationPrintFunc" "print_cb")
  )
)

(define-method portal_launch_preview
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_portal_launch_preview")
  (return-type "none")
  (parameters
    '("cairo_surface_t*" "surface")
    '("GtkWindow*" "parent")
    '("const-char*" "filename")
  )
)



;; From gtkprintoperationpreview.h

(define-function gtk_print_operation_preview_get_type
  (c-name "gtk_print_operation_preview_get_type")
  (return-type "GType")
)

(define-method render_page
  (of-object "GtkPrintOperationPreview")
  (c-name "gtk_print_operation_preview_render_page")
  (return-type "none")
  (parameters
    '("int" "page_nr")
  )
)

(define-method end_preview
  (of-object "GtkPrintOperationPreview")
  (c-name "gtk_print_operation_preview_end_preview")
  (return-type "none")
)

(define-method is_selected
  (of-object "GtkPrintOperationPreview")
  (c-name "gtk_print_operation_preview_is_selected")
  (return-type "gboolean")
  (parameters
    '("int" "page_nr")
  )
)



;; From gtkprintsettings.h

(define-function gtk_print_settings_get_type
  (c-name "gtk_print_settings_get_type")
  (return-type "GType")
)

(define-function gtk_print_settings_new
  (c-name "gtk_print_settings_new")
  (is-constructor-of "GtkPrintSettings")
  (return-type "GtkPrintSettings*")
)

(define-method copy
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_copy")
  (return-type "GtkPrintSettings*")
)

(define-function gtk_print_settings_new_from_file
  (c-name "gtk_print_settings_new_from_file")
  (return-type "GtkPrintSettings*")
  (parameters
    '("const-char*" "file_name")
    '("GError**" "error")
  )
)

(define-method load_file
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_load_file")
  (return-type "gboolean")
  (parameters
    '("const-char*" "file_name")
    '("GError**" "error")
  )
)

(define-method to_file
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_to_file")
  (return-type "gboolean")
  (parameters
    '("const-char*" "file_name")
    '("GError**" "error")
  )
)

(define-function gtk_print_settings_new_from_key_file
  (c-name "gtk_print_settings_new_from_key_file")
  (return-type "GtkPrintSettings*")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-char*" "group_name")
    '("GError**" "error")
  )
)

(define-method load_key_file
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_load_key_file")
  (return-type "gboolean")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-char*" "group_name")
    '("GError**" "error")
  )
)

(define-method to_key_file
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_to_key_file")
  (return-type "none")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-char*" "group_name")
  )
)

(define-method has_key
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_has_key")
  (return-type "gboolean")
  (parameters
    '("const-char*" "key")
  )
)

(define-method get
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get")
  (return-type "const-char*")
  (parameters
    '("const-char*" "key")
  )
)

(define-method set
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("const-char*" "value")
  )
)

(define-method unset
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_unset")
  (return-type "none")
  (parameters
    '("const-char*" "key")
  )
)

(define-method foreach
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_foreach")
  (return-type "none")
  (parameters
    '("GtkPrintSettingsFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-method get_bool
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_bool")
  (return-type "gboolean")
  (parameters
    '("const-char*" "key")
  )
)

(define-method set_bool
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_bool")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("gboolean" "value")
  )
)

(define-method get_double
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_double")
  (return-type "double")
  (parameters
    '("const-char*" "key")
  )
)

(define-method get_double_with_default
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_double_with_default")
  (return-type "double")
  (parameters
    '("const-char*" "key")
    '("double" "def")
  )
)

(define-method set_double
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_double")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("double" "value")
  )
)

(define-method get_length
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_length")
  (return-type "double")
  (parameters
    '("const-char*" "key")
    '("GtkUnit" "unit")
  )
)

(define-method set_length
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_length")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("double" "value")
    '("GtkUnit" "unit")
  )
)

(define-method get_int
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_int")
  (return-type "int")
  (parameters
    '("const-char*" "key")
  )
)

(define-method get_int_with_default
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_int_with_default")
  (return-type "int")
  (parameters
    '("const-char*" "key")
    '("int" "def")
  )
)

(define-method set_int
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_int")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("int" "value")
  )
)

(define-method get_printer
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_printer")
  (return-type "const-char*")
)

(define-method set_printer
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_printer")
  (return-type "none")
  (parameters
    '("const-char*" "printer")
  )
)

(define-method get_orientation
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_orientation")
  (return-type "GtkPageOrientation")
)

(define-method set_orientation
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_orientation")
  (return-type "none")
  (parameters
    '("GtkPageOrientation" "orientation")
  )
)

(define-method get_paper_size
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_paper_size")
  (return-type "GtkPaperSize*")
)

(define-method set_paper_size
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_paper_size")
  (return-type "none")
  (parameters
    '("GtkPaperSize*" "paper_size")
  )
)

(define-method get_paper_width
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_paper_width")
  (return-type "double")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-method set_paper_width
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_paper_width")
  (return-type "none")
  (parameters
    '("double" "width")
    '("GtkUnit" "unit")
  )
)

(define-method get_paper_height
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_paper_height")
  (return-type "double")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-method set_paper_height
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_paper_height")
  (return-type "none")
  (parameters
    '("double" "height")
    '("GtkUnit" "unit")
  )
)

(define-method get_use_color
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_use_color")
  (return-type "gboolean")
)

(define-method set_use_color
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_use_color")
  (return-type "none")
  (parameters
    '("gboolean" "use_color")
  )
)

(define-method get_collate
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_collate")
  (return-type "gboolean")
)

(define-method set_collate
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_collate")
  (return-type "none")
  (parameters
    '("gboolean" "collate")
  )
)

(define-method get_reverse
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_reverse")
  (return-type "gboolean")
)

(define-method set_reverse
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_reverse")
  (return-type "none")
  (parameters
    '("gboolean" "reverse")
  )
)

(define-method get_duplex
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_duplex")
  (return-type "GtkPrintDuplex")
)

(define-method set_duplex
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_duplex")
  (return-type "none")
  (parameters
    '("GtkPrintDuplex" "duplex")
  )
)

(define-method get_quality
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_quality")
  (return-type "GtkPrintQuality")
)

(define-method set_quality
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_quality")
  (return-type "none")
  (parameters
    '("GtkPrintQuality" "quality")
  )
)

(define-method get_n_copies
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_n_copies")
  (return-type "int")
)

(define-method set_n_copies
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_n_copies")
  (return-type "none")
  (parameters
    '("int" "num_copies")
  )
)

(define-method get_number_up
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_number_up")
  (return-type "int")
)

(define-method set_number_up
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_number_up")
  (return-type "none")
  (parameters
    '("int" "number_up")
  )
)

(define-method get_number_up_layout
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_number_up_layout")
  (return-type "GtkNumberUpLayout")
)

(define-method set_number_up_layout
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_number_up_layout")
  (return-type "none")
  (parameters
    '("GtkNumberUpLayout" "number_up_layout")
  )
)

(define-method get_resolution
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_resolution")
  (return-type "int")
)

(define-method set_resolution
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_resolution")
  (return-type "none")
  (parameters
    '("int" "resolution")
  )
)

(define-method get_resolution_x
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_resolution_x")
  (return-type "int")
)

(define-method get_resolution_y
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_resolution_y")
  (return-type "int")
)

(define-method set_resolution_xy
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_resolution_xy")
  (return-type "none")
  (parameters
    '("int" "resolution_x")
    '("int" "resolution_y")
  )
)

(define-method get_printer_lpi
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_printer_lpi")
  (return-type "double")
)

(define-method set_printer_lpi
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_printer_lpi")
  (return-type "none")
  (parameters
    '("double" "lpi")
  )
)

(define-method get_scale
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_scale")
  (return-type "double")
)

(define-method set_scale
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_scale")
  (return-type "none")
  (parameters
    '("double" "scale")
  )
)

(define-method get_print_pages
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_print_pages")
  (return-type "GtkPrintPages")
)

(define-method set_print_pages
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_print_pages")
  (return-type "none")
  (parameters
    '("GtkPrintPages" "pages")
  )
)

(define-method get_page_ranges
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_page_ranges")
  (return-type "GtkPageRange*")
  (parameters
    '("int*" "num_ranges")
  )
)

(define-method set_page_ranges
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_page_ranges")
  (return-type "none")
  (parameters
    '("GtkPageRange*" "page_ranges")
    '("int" "num_ranges")
  )
)

(define-method get_page_set
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_page_set")
  (return-type "GtkPageSet")
)

(define-method set_page_set
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_page_set")
  (return-type "none")
  (parameters
    '("GtkPageSet" "page_set")
  )
)

(define-method get_default_source
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_default_source")
  (return-type "const-char*")
)

(define-method set_default_source
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_default_source")
  (return-type "none")
  (parameters
    '("const-char*" "default_source")
  )
)

(define-method get_media_type
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_media_type")
  (return-type "const-char*")
)

(define-method set_media_type
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_media_type")
  (return-type "none")
  (parameters
    '("const-char*" "media_type")
  )
)

(define-method get_dither
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_dither")
  (return-type "const-char*")
)

(define-method set_dither
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_dither")
  (return-type "none")
  (parameters
    '("const-char*" "dither")
  )
)

(define-method get_finishings
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_finishings")
  (return-type "const-char*")
)

(define-method set_finishings
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_finishings")
  (return-type "none")
  (parameters
    '("const-char*" "finishings")
  )
)

(define-method get_output_bin
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_output_bin")
  (return-type "const-char*")
)

(define-method set_output_bin
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_output_bin")
  (return-type "none")
  (parameters
    '("const-char*" "output_bin")
  )
)

(define-method to_gvariant
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_to_gvariant")
  (return-type "GVariant*")
)

(define-function gtk_print_settings_new_from_gvariant
  (c-name "gtk_print_settings_new_from_gvariant")
  (return-type "GtkPrintSettings*")
  (parameters
    '("GVariant*" "variant")
  )
)



;; From gtkprintunixdialog.h

(define-function gtk_print_unix_dialog_get_type
  (c-name "gtk_print_unix_dialog_get_type")
  (return-type "GType")
)

(define-function gtk_print_unix_dialog_new
  (c-name "gtk_print_unix_dialog_new")
  (is-constructor-of "GtkPrintUnixDialog")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "title")
    '("GtkWindow*" "parent")
  )
)

(define-method set_page_setup
  (of-object "GtkPrintUnixDialog")
  (c-name "gtk_print_unix_dialog_set_page_setup")
  (return-type "none")
  (parameters
    '("GtkPageSetup*" "page_setup")
  )
)

(define-method get_page_setup
  (of-object "GtkPrintUnixDialog")
  (c-name "gtk_print_unix_dialog_get_page_setup")
  (return-type "GtkPageSetup*")
)

(define-method set_current_page
  (of-object "GtkPrintUnixDialog")
  (c-name "gtk_print_unix_dialog_set_current_page")
  (return-type "none")
  (parameters
    '("int" "current_page")
  )
)

(define-method get_current_page
  (of-object "GtkPrintUnixDialog")
  (c-name "gtk_print_unix_dialog_get_current_page")
  (return-type "int")
)

(define-method set_settings
  (of-object "GtkPrintUnixDialog")
  (c-name "gtk_print_unix_dialog_set_settings")
  (return-type "none")
  (parameters
    '("GtkPrintSettings*" "settings")
  )
)

(define-method get_settings
  (of-object "GtkPrintUnixDialog")
  (c-name "gtk_print_unix_dialog_get_settings")
  (return-type "GtkPrintSettings*")
)

(define-method get_selected_printer
  (of-object "GtkPrintUnixDialog")
  (c-name "gtk_print_unix_dialog_get_selected_printer")
  (return-type "GtkPrinter*")
)

(define-method add_custom_tab
  (of-object "GtkPrintUnixDialog")
  (c-name "gtk_print_unix_dialog_add_custom_tab")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("GtkWidget*" "tab_label")
  )
)

(define-method set_manual_capabilities
  (of-object "GtkPrintUnixDialog")
  (c-name "gtk_print_unix_dialog_set_manual_capabilities")
  (return-type "none")
  (parameters
    '("GtkPrintCapabilities" "capabilities")
  )
)

(define-method get_manual_capabilities
  (of-object "GtkPrintUnixDialog")
  (c-name "gtk_print_unix_dialog_get_manual_capabilities")
  (return-type "GtkPrintCapabilities")
)

(define-method set_support_selection
  (of-object "GtkPrintUnixDialog")
  (c-name "gtk_print_unix_dialog_set_support_selection")
  (return-type "none")
  (parameters
    '("gboolean" "support_selection")
  )
)

(define-method get_support_selection
  (of-object "GtkPrintUnixDialog")
  (c-name "gtk_print_unix_dialog_get_support_selection")
  (return-type "gboolean")
)

(define-method set_has_selection
  (of-object "GtkPrintUnixDialog")
  (c-name "gtk_print_unix_dialog_set_has_selection")
  (return-type "none")
  (parameters
    '("gboolean" "has_selection")
  )
)

(define-method get_has_selection
  (of-object "GtkPrintUnixDialog")
  (c-name "gtk_print_unix_dialog_get_has_selection")
  (return-type "gboolean")
)

(define-method set_embed_page_setup
  (of-object "GtkPrintUnixDialog")
  (c-name "gtk_print_unix_dialog_set_embed_page_setup")
  (return-type "none")
  (parameters
    '("gboolean" "embed")
  )
)

(define-method get_embed_page_setup
  (of-object "GtkPrintUnixDialog")
  (c-name "gtk_print_unix_dialog_get_embed_page_setup")
  (return-type "gboolean")
)

(define-method get_page_setup_set
  (of-object "GtkPrintUnixDialog")
  (c-name "gtk_print_unix_dialog_get_page_setup_set")
  (return-type "gboolean")
)



;; From gtkprintutils.h



;; From gtkprint-win32.h

(define-method free
  (of-object "GtkPrintWin32Devnames")
  (c-name "gtk_print_win32_devnames_free")
  (return-type "none")
)

(define-function gtk_print_win32_devnames_from_win32
  (c-name "gtk_print_win32_devnames_from_win32")
  (return-type "GtkPrintWin32Devnames*")
  (parameters
    '("HGLOBAL" "global")
  )
)

(define-function gtk_print_win32_devnames_from_printer_name
  (c-name "gtk_print_win32_devnames_from_printer_name")
  (return-type "GtkPrintWin32Devnames*")
  (parameters
    '("const-char*" "printer")
  )
)

(define-method to_win32
  (of-object "GtkPrintWin32Devnames")
  (c-name "gtk_print_win32_devnames_to_win32")
  (return-type "HGLOBAL")
)

(define-function gtk_print_win32_devnames_to_win32_from_printer_name
  (c-name "gtk_print_win32_devnames_to_win32_from_printer_name")
  (return-type "HGLOBAL")
  (parameters
    '("const-char*" "printer")
  )
)



;; From gtkprogressbar.h

(define-function gtk_progress_bar_get_type
  (c-name "gtk_progress_bar_get_type")
  (return-type "GType")
)

(define-function gtk_progress_bar_new
  (c-name "gtk_progress_bar_new")
  (is-constructor-of "GtkProgressBar")
  (return-type "GtkWidget*")
)

(define-method pulse
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_pulse")
  (return-type "none")
)

(define-method set_text
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_set_text")
  (return-type "none")
  (parameters
    '("const-char*" "text")
  )
)

(define-method set_fraction
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_set_fraction")
  (return-type "none")
  (parameters
    '("double" "fraction")
  )
)

(define-method set_pulse_step
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_set_pulse_step")
  (return-type "none")
  (parameters
    '("double" "fraction")
  )
)

(define-method set_inverted
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_set_inverted")
  (return-type "none")
  (parameters
    '("gboolean" "inverted")
  )
)

(define-method get_text
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_get_text")
  (return-type "const-char*")
)

(define-method get_fraction
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_get_fraction")
  (return-type "double")
)

(define-method get_pulse_step
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_get_pulse_step")
  (return-type "double")
)

(define-method get_inverted
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_get_inverted")
  (return-type "gboolean")
)

(define-method set_ellipsize
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_set_ellipsize")
  (return-type "none")
  (parameters
    '("PangoEllipsizeMode" "mode")
  )
)

(define-method get_ellipsize
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_get_ellipsize")
  (return-type "PangoEllipsizeMode")
)

(define-method set_show_text
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_set_show_text")
  (return-type "none")
  (parameters
    '("gboolean" "show_text")
  )
)

(define-method get_show_text
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_get_show_text")
  (return-type "gboolean")
)



;; From gtkquartz.h



;; From gtkquery.h

(define-function gtk_query_get_type
  (c-name "gtk_query_get_type")
  (return-type "GType")
)

(define-function gtk_query_new
  (c-name "gtk_query_new")
  (is-constructor-of "GtkQuery")
  (return-type "GtkQuery*")
)

(define-method get_text
  (of-object "GtkQuery")
  (c-name "gtk_query_get_text")
  (return-type "const-char*")
)

(define-method set_text
  (of-object "GtkQuery")
  (c-name "gtk_query_set_text")
  (return-type "none")
  (parameters
    '("const-char*" "text")
  )
)

(define-method get_location
  (of-object "GtkQuery")
  (c-name "gtk_query_get_location")
  (return-type "GFile*")
)

(define-method set_location
  (of-object "GtkQuery")
  (c-name "gtk_query_set_location")
  (return-type "none")
  (parameters
    '("GFile*" "file")
  )
)

(define-method matches_string
  (of-object "GtkQuery")
  (c-name "gtk_query_matches_string")
  (return-type "gboolean")
  (parameters
    '("const-char*" "string")
  )
)



;; From gtkrange.h

(define-function gtk_range_get_type
  (c-name "gtk_range_get_type")
  (return-type "GType")
)

(define-method set_adjustment
  (of-object "GtkRange")
  (c-name "gtk_range_set_adjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment")
  )
)

(define-method get_adjustment
  (of-object "GtkRange")
  (c-name "gtk_range_get_adjustment")
  (return-type "GtkAdjustment*")
)

(define-method set_inverted
  (of-object "GtkRange")
  (c-name "gtk_range_set_inverted")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_inverted
  (of-object "GtkRange")
  (c-name "gtk_range_get_inverted")
  (return-type "gboolean")
)

(define-method set_flippable
  (of-object "GtkRange")
  (c-name "gtk_range_set_flippable")
  (return-type "none")
  (parameters
    '("gboolean" "flippable")
  )
)

(define-method get_flippable
  (of-object "GtkRange")
  (c-name "gtk_range_get_flippable")
  (return-type "gboolean")
)

(define-method set_slider_size_fixed
  (of-object "GtkRange")
  (c-name "gtk_range_set_slider_size_fixed")
  (return-type "none")
  (parameters
    '("gboolean" "size_fixed")
  )
)

(define-method get_slider_size_fixed
  (of-object "GtkRange")
  (c-name "gtk_range_get_slider_size_fixed")
  (return-type "gboolean")
)

(define-method get_range_rect
  (of-object "GtkRange")
  (c-name "gtk_range_get_range_rect")
  (return-type "none")
  (parameters
    '("GdkRectangle*" "range_rect")
  )
)

(define-method get_slider_range
  (of-object "GtkRange")
  (c-name "gtk_range_get_slider_range")
  (return-type "none")
  (parameters
    '("int*" "slider_start")
    '("int*" "slider_end")
  )
)

(define-method set_increments
  (of-object "GtkRange")
  (c-name "gtk_range_set_increments")
  (return-type "none")
  (parameters
    '("double" "step")
    '("double" "page")
  )
)

(define-method set_range
  (of-object "GtkRange")
  (c-name "gtk_range_set_range")
  (return-type "none")
  (parameters
    '("double" "min")
    '("double" "max")
  )
)

(define-method set_value
  (of-object "GtkRange")
  (c-name "gtk_range_set_value")
  (return-type "none")
  (parameters
    '("double" "value")
  )
)

(define-method get_value
  (of-object "GtkRange")
  (c-name "gtk_range_get_value")
  (return-type "double")
)

(define-method set_show_fill_level
  (of-object "GtkRange")
  (c-name "gtk_range_set_show_fill_level")
  (return-type "none")
  (parameters
    '("gboolean" "show_fill_level")
  )
)

(define-method get_show_fill_level
  (of-object "GtkRange")
  (c-name "gtk_range_get_show_fill_level")
  (return-type "gboolean")
)

(define-method set_restrict_to_fill_level
  (of-object "GtkRange")
  (c-name "gtk_range_set_restrict_to_fill_level")
  (return-type "none")
  (parameters
    '("gboolean" "restrict_to_fill_level")
  )
)

(define-method get_restrict_to_fill_level
  (of-object "GtkRange")
  (c-name "gtk_range_get_restrict_to_fill_level")
  (return-type "gboolean")
)

(define-method set_fill_level
  (of-object "GtkRange")
  (c-name "gtk_range_set_fill_level")
  (return-type "none")
  (parameters
    '("double" "fill_level")
  )
)

(define-method get_fill_level
  (of-object "GtkRange")
  (c-name "gtk_range_get_fill_level")
  (return-type "double")
)

(define-method set_round_digits
  (of-object "GtkRange")
  (c-name "gtk_range_set_round_digits")
  (return-type "none")
  (parameters
    '("int" "round_digits")
  )
)

(define-method get_round_digits
  (of-object "GtkRange")
  (c-name "gtk_range_get_round_digits")
  (return-type "int")
)



;; From gtkrecentmanager.h

(define-function gtk_recent_manager_error_quark
  (c-name "gtk_recent_manager_error_quark")
  (return-type "GQuark")
)

(define-function gtk_recent_manager_get_type
  (c-name "gtk_recent_manager_get_type")
  (return-type "GType")
)

(define-function gtk_recent_manager_new
  (c-name "gtk_recent_manager_new")
  (is-constructor-of "GtkRecentManager")
  (return-type "GtkRecentManager*")
)

(define-function gtk_recent_manager_get_default
  (c-name "gtk_recent_manager_get_default")
  (return-type "GtkRecentManager*")
)

(define-method add_item
  (of-object "GtkRecentManager")
  (c-name "gtk_recent_manager_add_item")
  (return-type "gboolean")
  (parameters
    '("const-char*" "uri")
  )
)

(define-method add_full
  (of-object "GtkRecentManager")
  (c-name "gtk_recent_manager_add_full")
  (return-type "gboolean")
  (parameters
    '("const-char*" "uri")
    '("const-GtkRecentData*" "recent_data")
  )
)

(define-method remove_item
  (of-object "GtkRecentManager")
  (c-name "gtk_recent_manager_remove_item")
  (return-type "gboolean")
  (parameters
    '("const-char*" "uri")
    '("GError**" "error")
  )
)

(define-method lookup_item
  (of-object "GtkRecentManager")
  (c-name "gtk_recent_manager_lookup_item")
  (return-type "GtkRecentInfo*")
  (parameters
    '("const-char*" "uri")
    '("GError**" "error")
  )
)

(define-method has_item
  (of-object "GtkRecentManager")
  (c-name "gtk_recent_manager_has_item")
  (return-type "gboolean")
  (parameters
    '("const-char*" "uri")
  )
)

(define-method move_item
  (of-object "GtkRecentManager")
  (c-name "gtk_recent_manager_move_item")
  (return-type "gboolean")
  (parameters
    '("const-char*" "uri")
    '("const-char*" "new_uri")
    '("GError**" "error")
  )
)

(define-method get_items
  (of-object "GtkRecentManager")
  (c-name "gtk_recent_manager_get_items")
  (return-type "GList*")
)

(define-method purge_items
  (of-object "GtkRecentManager")
  (c-name "gtk_recent_manager_purge_items")
  (return-type "int")
  (parameters
    '("GError**" "error")
  )
)

(define-function gtk_recent_info_get_type
  (c-name "gtk_recent_info_get_type")
  (return-type "GType")
)

(define-method ref
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_ref")
  (return-type "GtkRecentInfo*")
)

(define-method unref
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_unref")
  (return-type "none")
)

(define-method get_uri
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_get_uri")
  (return-type "const-char*")
)

(define-method get_display_name
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_get_display_name")
  (return-type "const-char*")
)

(define-method get_description
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_get_description")
  (return-type "const-char*")
)

(define-method get_mime_type
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_get_mime_type")
  (return-type "const-char*")
)

(define-method get_added
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_get_added")
  (return-type "GDateTime*")
)

(define-method get_modified
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_get_modified")
  (return-type "GDateTime*")
)

(define-method get_visited
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_get_visited")
  (return-type "GDateTime*")
)

(define-method get_private_hint
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_get_private_hint")
  (return-type "gboolean")
)

(define-method get_application_info
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_get_application_info")
  (return-type "gboolean")
  (parameters
    '("const-char*" "app_name")
    '("const-char**" "app_exec")
    '("guint*" "count")
    '("GDateTime**" "stamp")
  )
)

(define-method create_app_info
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_create_app_info")
  (return-type "GAppInfo*")
  (parameters
    '("const-char*" "app_name")
    '("GError**" "error")
  )
)

(define-method get_applications
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_get_applications")
  (return-type "char**")
  (parameters
    '("gsize*" "length")
  )
)

(define-method last_application
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_last_application")
  (return-type "char*")
)

(define-method has_application
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_has_application")
  (return-type "gboolean")
  (parameters
    '("const-char*" "app_name")
  )
)

(define-method get_groups
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_get_groups")
  (return-type "char**")
  (parameters
    '("gsize*" "length")
  )
)

(define-method has_group
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_has_group")
  (return-type "gboolean")
  (parameters
    '("const-char*" "group_name")
  )
)

(define-method get_gicon
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_get_gicon")
  (return-type "GIcon*")
)

(define-method get_short_name
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_get_short_name")
  (return-type "char*")
)

(define-method get_uri_display
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_get_uri_display")
  (return-type "char*")
)

(define-method get_age
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_get_age")
  (return-type "int")
)

(define-method is_local
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_is_local")
  (return-type "gboolean")
)

(define-method exists
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_exists")
  (return-type "gboolean")
)

(define-method match
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_match")
  (return-type "gboolean")
  (parameters
    '("GtkRecentInfo*" "info_b")
  )
)



;; From gtkrender.h

(define-function gtk_render_check
  (c-name "gtk_render_check")
  (return-type "none")
  (parameters
    '("GtkStyleContext*" "context")
    '("cairo_t*" "cr")
    '("double" "x")
    '("double" "y")
    '("double" "width")
    '("double" "height")
  )
)

(define-function gtk_render_option
  (c-name "gtk_render_option")
  (return-type "none")
  (parameters
    '("GtkStyleContext*" "context")
    '("cairo_t*" "cr")
    '("double" "x")
    '("double" "y")
    '("double" "width")
    '("double" "height")
  )
)

(define-function gtk_render_arrow
  (c-name "gtk_render_arrow")
  (return-type "none")
  (parameters
    '("GtkStyleContext*" "context")
    '("cairo_t*" "cr")
    '("double" "angle")
    '("double" "x")
    '("double" "y")
    '("double" "size")
  )
)

(define-function gtk_render_background
  (c-name "gtk_render_background")
  (return-type "none")
  (parameters
    '("GtkStyleContext*" "context")
    '("cairo_t*" "cr")
    '("double" "x")
    '("double" "y")
    '("double" "width")
    '("double" "height")
  )
)

(define-function gtk_render_frame
  (c-name "gtk_render_frame")
  (return-type "none")
  (parameters
    '("GtkStyleContext*" "context")
    '("cairo_t*" "cr")
    '("double" "x")
    '("double" "y")
    '("double" "width")
    '("double" "height")
  )
)

(define-function gtk_render_expander
  (c-name "gtk_render_expander")
  (return-type "none")
  (parameters
    '("GtkStyleContext*" "context")
    '("cairo_t*" "cr")
    '("double" "x")
    '("double" "y")
    '("double" "width")
    '("double" "height")
  )
)

(define-function gtk_render_focus
  (c-name "gtk_render_focus")
  (return-type "none")
  (parameters
    '("GtkStyleContext*" "context")
    '("cairo_t*" "cr")
    '("double" "x")
    '("double" "y")
    '("double" "width")
    '("double" "height")
  )
)

(define-function gtk_render_layout
  (c-name "gtk_render_layout")
  (return-type "none")
  (parameters
    '("GtkStyleContext*" "context")
    '("cairo_t*" "cr")
    '("double" "x")
    '("double" "y")
    '("PangoLayout*" "layout")
  )
)

(define-function gtk_render_line
  (c-name "gtk_render_line")
  (return-type "none")
  (parameters
    '("GtkStyleContext*" "context")
    '("cairo_t*" "cr")
    '("double" "x0")
    '("double" "y0")
    '("double" "x1")
    '("double" "y1")
  )
)

(define-function gtk_render_handle
  (c-name "gtk_render_handle")
  (return-type "none")
  (parameters
    '("GtkStyleContext*" "context")
    '("cairo_t*" "cr")
    '("double" "x")
    '("double" "y")
    '("double" "width")
    '("double" "height")
  )
)

(define-function gtk_render_activity
  (c-name "gtk_render_activity")
  (return-type "none")
  (parameters
    '("GtkStyleContext*" "context")
    '("cairo_t*" "cr")
    '("double" "x")
    '("double" "y")
    '("double" "width")
    '("double" "height")
  )
)

(define-function gtk_render_icon
  (c-name "gtk_render_icon")
  (return-type "none")
  (parameters
    '("GtkStyleContext*" "context")
    '("cairo_t*" "cr")
    '("GdkTexture*" "texture")
    '("double" "x")
    '("double" "y")
  )
)



;; From gtkrevealer.h

(define-function gtk_revealer_get_type
  (c-name "gtk_revealer_get_type")
  (return-type "GType")
)

(define-function gtk_revealer_new
  (c-name "gtk_revealer_new")
  (is-constructor-of "GtkRevealer")
  (return-type "GtkWidget*")
)

(define-method get_reveal_child
  (of-object "GtkRevealer")
  (c-name "gtk_revealer_get_reveal_child")
  (return-type "gboolean")
)

(define-method set_reveal_child
  (of-object "GtkRevealer")
  (c-name "gtk_revealer_set_reveal_child")
  (return-type "none")
  (parameters
    '("gboolean" "reveal_child")
  )
)

(define-method get_child_revealed
  (of-object "GtkRevealer")
  (c-name "gtk_revealer_get_child_revealed")
  (return-type "gboolean")
)

(define-method get_transition_duration
  (of-object "GtkRevealer")
  (c-name "gtk_revealer_get_transition_duration")
  (return-type "guint")
)

(define-method set_transition_duration
  (of-object "GtkRevealer")
  (c-name "gtk_revealer_set_transition_duration")
  (return-type "none")
  (parameters
    '("guint" "duration")
  )
)

(define-method set_transition_type
  (of-object "GtkRevealer")
  (c-name "gtk_revealer_set_transition_type")
  (return-type "none")
  (parameters
    '("GtkRevealerTransitionType" "transition")
  )
)

(define-method get_transition_type
  (of-object "GtkRevealer")
  (c-name "gtk_revealer_get_transition_type")
  (return-type "GtkRevealerTransitionType")
)

(define-method set_child
  (of-object "GtkRevealer")
  (c-name "gtk_revealer_set_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_child
  (of-object "GtkRevealer")
  (c-name "gtk_revealer_get_child")
  (return-type "GtkWidget*")
)



;; From gtkroot.h

(define-method get_display
  (of-object "GtkRoot")
  (c-name "gtk_root_get_display")
  (return-type "GdkDisplay*")
)

(define-method set_focus
  (of-object "GtkRoot")
  (c-name "gtk_root_set_focus")
  (return-type "none")
  (parameters
    '("GtkWidget*" "focus")
  )
)

(define-method get_focus
  (of-object "GtkRoot")
  (c-name "gtk_root_get_focus")
  (return-type "GtkWidget*")
)



;; From gtkscalebutton.h

(define-function gtk_scale_button_get_type
  (c-name "gtk_scale_button_get_type")
  (return-type "GType")
)

(define-function gtk_scale_button_new
  (c-name "gtk_scale_button_new")
  (is-constructor-of "GtkScaleButton")
  (return-type "GtkWidget*")
  (parameters
    '("double" "min")
    '("double" "max")
    '("double" "step")
    '("const-char**" "icons")
  )
)

(define-method set_icons
  (of-object "GtkScaleButton")
  (c-name "gtk_scale_button_set_icons")
  (return-type "none")
  (parameters
    '("const-char**" "icons")
  )
)

(define-method get_value
  (of-object "GtkScaleButton")
  (c-name "gtk_scale_button_get_value")
  (return-type "double")
)

(define-method set_value
  (of-object "GtkScaleButton")
  (c-name "gtk_scale_button_set_value")
  (return-type "none")
  (parameters
    '("double" "value")
  )
)

(define-method get_adjustment
  (of-object "GtkScaleButton")
  (c-name "gtk_scale_button_get_adjustment")
  (return-type "GtkAdjustment*")
)

(define-method set_adjustment
  (of-object "GtkScaleButton")
  (c-name "gtk_scale_button_set_adjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment")
  )
)

(define-method get_plus_button
  (of-object "GtkScaleButton")
  (c-name "gtk_scale_button_get_plus_button")
  (return-type "GtkWidget*")
)

(define-method get_minus_button
  (of-object "GtkScaleButton")
  (c-name "gtk_scale_button_get_minus_button")
  (return-type "GtkWidget*")
)

(define-method get_popup
  (of-object "GtkScaleButton")
  (c-name "gtk_scale_button_get_popup")
  (return-type "GtkWidget*")
)



;; From gtkscale.h

(define-function gtk_scale_get_type
  (c-name "gtk_scale_get_type")
  (return-type "GType")
)

(define-function gtk_scale_new
  (c-name "gtk_scale_new")
  (is-constructor-of "GtkScale")
  (return-type "GtkWidget*")
  (parameters
    '("GtkOrientation" "orientation")
    '("GtkAdjustment*" "adjustment")
  )
)

(define-function gtk_scale_new_with_range
  (c-name "gtk_scale_new_with_range")
  (return-type "GtkWidget*")
  (parameters
    '("GtkOrientation" "orientation")
    '("double" "min")
    '("double" "max")
    '("double" "step")
  )
)

(define-method set_digits
  (of-object "GtkScale")
  (c-name "gtk_scale_set_digits")
  (return-type "none")
  (parameters
    '("int" "digits")
  )
)

(define-method get_digits
  (of-object "GtkScale")
  (c-name "gtk_scale_get_digits")
  (return-type "int")
)

(define-method set_draw_value
  (of-object "GtkScale")
  (c-name "gtk_scale_set_draw_value")
  (return-type "none")
  (parameters
    '("gboolean" "draw_value")
  )
)

(define-method get_draw_value
  (of-object "GtkScale")
  (c-name "gtk_scale_get_draw_value")
  (return-type "gboolean")
)

(define-method set_has_origin
  (of-object "GtkScale")
  (c-name "gtk_scale_set_has_origin")
  (return-type "none")
  (parameters
    '("gboolean" "has_origin")
  )
)

(define-method get_has_origin
  (of-object "GtkScale")
  (c-name "gtk_scale_get_has_origin")
  (return-type "gboolean")
)

(define-method set_value_pos
  (of-object "GtkScale")
  (c-name "gtk_scale_set_value_pos")
  (return-type "none")
  (parameters
    '("GtkPositionType" "pos")
  )
)

(define-method get_value_pos
  (of-object "GtkScale")
  (c-name "gtk_scale_get_value_pos")
  (return-type "GtkPositionType")
)

(define-method get_layout
  (of-object "GtkScale")
  (c-name "gtk_scale_get_layout")
  (return-type "PangoLayout*")
)

(define-method get_layout_offsets
  (of-object "GtkScale")
  (c-name "gtk_scale_get_layout_offsets")
  (return-type "none")
  (parameters
    '("int*" "x")
    '("int*" "y")
  )
)

(define-method add_mark
  (of-object "GtkScale")
  (c-name "gtk_scale_add_mark")
  (return-type "none")
  (parameters
    '("double" "value")
    '("GtkPositionType" "position")
    '("const-char*" "markup")
  )
)

(define-method clear_marks
  (of-object "GtkScale")
  (c-name "gtk_scale_clear_marks")
  (return-type "none")
)

(define-method set_format_value_func
  (of-object "GtkScale")
  (c-name "gtk_scale_set_format_value_func")
  (return-type "none")
  (parameters
    '("GtkScaleFormatValueFunc" "func")
    '("gpointer" "user_data")
    '("GDestroyNotify" "destroy_notify")
  )
)



;; From gtkscrollable.h

(define-function gtk_scrollable_get_type
  (c-name "gtk_scrollable_get_type")
  (return-type "GType")
)

(define-method get_hadjustment
  (of-object "GtkScrollable")
  (c-name "gtk_scrollable_get_hadjustment")
  (return-type "GtkAdjustment*")
)

(define-method set_hadjustment
  (of-object "GtkScrollable")
  (c-name "gtk_scrollable_set_hadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "hadjustment")
  )
)

(define-method get_vadjustment
  (of-object "GtkScrollable")
  (c-name "gtk_scrollable_get_vadjustment")
  (return-type "GtkAdjustment*")
)

(define-method set_vadjustment
  (of-object "GtkScrollable")
  (c-name "gtk_scrollable_set_vadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "vadjustment")
  )
)

(define-method get_hscroll_policy
  (of-object "GtkScrollable")
  (c-name "gtk_scrollable_get_hscroll_policy")
  (return-type "GtkScrollablePolicy")
)

(define-method set_hscroll_policy
  (of-object "GtkScrollable")
  (c-name "gtk_scrollable_set_hscroll_policy")
  (return-type "none")
  (parameters
    '("GtkScrollablePolicy" "policy")
  )
)

(define-method get_vscroll_policy
  (of-object "GtkScrollable")
  (c-name "gtk_scrollable_get_vscroll_policy")
  (return-type "GtkScrollablePolicy")
)

(define-method set_vscroll_policy
  (of-object "GtkScrollable")
  (c-name "gtk_scrollable_set_vscroll_policy")
  (return-type "none")
  (parameters
    '("GtkScrollablePolicy" "policy")
  )
)

(define-method get_border
  (of-object "GtkScrollable")
  (c-name "gtk_scrollable_get_border")
  (return-type "gboolean")
  (parameters
    '("GtkBorder*" "border")
  )
)



;; From gtkscrollbar.h

(define-function gtk_scrollbar_get_type
  (c-name "gtk_scrollbar_get_type")
  (return-type "GType")
)

(define-function gtk_scrollbar_new
  (c-name "gtk_scrollbar_new")
  (is-constructor-of "GtkScrollbar")
  (return-type "GtkWidget*")
  (parameters
    '("GtkOrientation" "orientation")
    '("GtkAdjustment*" "adjustment")
  )
)

(define-method set_adjustment
  (of-object "GtkScrollbar")
  (c-name "gtk_scrollbar_set_adjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment")
  )
)

(define-method get_adjustment
  (of-object "GtkScrollbar")
  (c-name "gtk_scrollbar_get_adjustment")
  (return-type "GtkAdjustment*")
)



;; From gtkscrolledwindow.h

(define-function gtk_scrolled_window_get_type
  (c-name "gtk_scrolled_window_get_type")
  (return-type "GType")
)

(define-function gtk_scrolled_window_new
  (c-name "gtk_scrolled_window_new")
  (is-constructor-of "GtkScrolledWindow")
  (return-type "GtkWidget*")
)

(define-method set_hadjustment
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_set_hadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "hadjustment")
  )
)

(define-method set_vadjustment
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_set_vadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "vadjustment")
  )
)

(define-method get_hadjustment
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_get_hadjustment")
  (return-type "GtkAdjustment*")
)

(define-method get_vadjustment
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_get_vadjustment")
  (return-type "GtkAdjustment*")
)

(define-method get_hscrollbar
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_get_hscrollbar")
  (return-type "GtkWidget*")
)

(define-method get_vscrollbar
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_get_vscrollbar")
  (return-type "GtkWidget*")
)

(define-method set_policy
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_set_policy")
  (return-type "none")
  (parameters
    '("GtkPolicyType" "hscrollbar_policy")
    '("GtkPolicyType" "vscrollbar_policy")
  )
)

(define-method get_policy
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_get_policy")
  (return-type "none")
  (parameters
    '("GtkPolicyType*" "hscrollbar_policy")
    '("GtkPolicyType*" "vscrollbar_policy")
  )
)

(define-method set_placement
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_set_placement")
  (return-type "none")
  (parameters
    '("GtkCornerType" "window_placement")
  )
)

(define-method unset_placement
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_unset_placement")
  (return-type "none")
)

(define-method get_placement
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_get_placement")
  (return-type "GtkCornerType")
)

(define-method set_has_frame
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_set_has_frame")
  (return-type "none")
  (parameters
    '("gboolean" "has_frame")
  )
)

(define-method get_has_frame
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_get_has_frame")
  (return-type "gboolean")
)

(define-method get_min_content_width
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_get_min_content_width")
  (return-type "int")
)

(define-method set_min_content_width
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_set_min_content_width")
  (return-type "none")
  (parameters
    '("int" "width")
  )
)

(define-method get_min_content_height
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_get_min_content_height")
  (return-type "int")
)

(define-method set_min_content_height
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_set_min_content_height")
  (return-type "none")
  (parameters
    '("int" "height")
  )
)

(define-method set_kinetic_scrolling
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_set_kinetic_scrolling")
  (return-type "none")
  (parameters
    '("gboolean" "kinetic_scrolling")
  )
)

(define-method get_kinetic_scrolling
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_get_kinetic_scrolling")
  (return-type "gboolean")
)

(define-method set_overlay_scrolling
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_set_overlay_scrolling")
  (return-type "none")
  (parameters
    '("gboolean" "overlay_scrolling")
  )
)

(define-method get_overlay_scrolling
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_get_overlay_scrolling")
  (return-type "gboolean")
)

(define-method set_max_content_width
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_set_max_content_width")
  (return-type "none")
  (parameters
    '("int" "width")
  )
)

(define-method get_max_content_width
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_get_max_content_width")
  (return-type "int")
)

(define-method set_max_content_height
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_set_max_content_height")
  (return-type "none")
  (parameters
    '("int" "height")
  )
)

(define-method get_max_content_height
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_get_max_content_height")
  (return-type "int")
)

(define-method set_propagate_natural_width
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_set_propagate_natural_width")
  (return-type "none")
  (parameters
    '("gboolean" "propagate")
  )
)

(define-method get_propagate_natural_width
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_get_propagate_natural_width")
  (return-type "gboolean")
)

(define-method set_propagate_natural_height
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_set_propagate_natural_height")
  (return-type "none")
  (parameters
    '("gboolean" "propagate")
  )
)

(define-method get_propagate_natural_height
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_get_propagate_natural_height")
  (return-type "gboolean")
)

(define-method set_child
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_set_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_child
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_get_child")
  (return-type "GtkWidget*")
)



;; From gtksearchbar.h

(define-function gtk_search_bar_get_type
  (c-name "gtk_search_bar_get_type")
  (return-type "GType")
)

(define-function gtk_search_bar_new
  (c-name "gtk_search_bar_new")
  (is-constructor-of "GtkSearchBar")
  (return-type "GtkWidget*")
)

(define-method connect_entry
  (of-object "GtkSearchBar")
  (c-name "gtk_search_bar_connect_entry")
  (return-type "none")
  (parameters
    '("GtkEditable*" "entry")
  )
)

(define-method get_search_mode
  (of-object "GtkSearchBar")
  (c-name "gtk_search_bar_get_search_mode")
  (return-type "gboolean")
)

(define-method set_search_mode
  (of-object "GtkSearchBar")
  (c-name "gtk_search_bar_set_search_mode")
  (return-type "none")
  (parameters
    '("gboolean" "search_mode")
  )
)

(define-method get_show_close_button
  (of-object "GtkSearchBar")
  (c-name "gtk_search_bar_get_show_close_button")
  (return-type "gboolean")
)

(define-method set_show_close_button
  (of-object "GtkSearchBar")
  (c-name "gtk_search_bar_set_show_close_button")
  (return-type "none")
  (parameters
    '("gboolean" "visible")
  )
)

(define-method set_key_capture_widget
  (of-object "GtkSearchBar")
  (c-name "gtk_search_bar_set_key_capture_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method get_key_capture_widget
  (of-object "GtkSearchBar")
  (c-name "gtk_search_bar_get_key_capture_widget")
  (return-type "GtkWidget*")
)

(define-method set_child
  (of-object "GtkSearchBar")
  (c-name "gtk_search_bar_set_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_child
  (of-object "GtkSearchBar")
  (c-name "gtk_search_bar_get_child")
  (return-type "GtkWidget*")
)



;; From gtksearchengine.h



;; From gtksearchenginemodel.h



;; From gtksearchenginequartz.h



;; From gtksearchenginetracker3.h



;; From gtksearchentry.h

(define-function gtk_search_entry_get_type
  (c-name "gtk_search_entry_get_type")
  (return-type "GType")
)

(define-function gtk_search_entry_new
  (c-name "gtk_search_entry_new")
  (is-constructor-of "GtkSearchEntry")
  (return-type "GtkWidget*")
)

(define-method set_key_capture_widget
  (of-object "GtkSearchEntry")
  (c-name "gtk_search_entry_set_key_capture_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method get_key_capture_widget
  (of-object "GtkSearchEntry")
  (c-name "gtk_search_entry_get_key_capture_widget")
  (return-type "GtkWidget*")
)



;; From gtkselectionfiltermodel.h

(define-function gtk_selection_filter_model_new
  (c-name "gtk_selection_filter_model_new")
  (is-constructor-of "GtkSelectionFilterModel")
  (return-type "GtkSelectionFilterModel*")
  (parameters
    '("GtkSelectionModel*" "model")
  )
)

(define-method set_model
  (of-object "GtkSelectionFilterModel")
  (c-name "gtk_selection_filter_model_set_model")
  (return-type "none")
  (parameters
    '("GtkSelectionModel*" "model")
  )
)

(define-method get_model
  (of-object "GtkSelectionFilterModel")
  (c-name "gtk_selection_filter_model_get_model")
  (return-type "GtkSelectionModel*")
)



;; From gtkselectionmodel.h

(define-method is_selected
  (of-object "GtkSelectionModel")
  (c-name "gtk_selection_model_is_selected")
  (return-type "gboolean")
  (parameters
    '("guint" "position")
  )
)

(define-method get_selection
  (of-object "GtkSelectionModel")
  (c-name "gtk_selection_model_get_selection")
  (return-type "GtkBitset*")
)

(define-method get_selection_in_range
  (of-object "GtkSelectionModel")
  (c-name "gtk_selection_model_get_selection_in_range")
  (return-type "GtkBitset*")
  (parameters
    '("guint" "position")
    '("guint" "n_items")
  )
)

(define-method select_item
  (of-object "GtkSelectionModel")
  (c-name "gtk_selection_model_select_item")
  (return-type "gboolean")
  (parameters
    '("guint" "position")
    '("gboolean" "unselect_rest")
  )
)

(define-method unselect_item
  (of-object "GtkSelectionModel")
  (c-name "gtk_selection_model_unselect_item")
  (return-type "gboolean")
  (parameters
    '("guint" "position")
  )
)

(define-method select_range
  (of-object "GtkSelectionModel")
  (c-name "gtk_selection_model_select_range")
  (return-type "gboolean")
  (parameters
    '("guint" "position")
    '("guint" "n_items")
    '("gboolean" "unselect_rest")
  )
)

(define-method unselect_range
  (of-object "GtkSelectionModel")
  (c-name "gtk_selection_model_unselect_range")
  (return-type "gboolean")
  (parameters
    '("guint" "position")
    '("guint" "n_items")
  )
)

(define-method select_all
  (of-object "GtkSelectionModel")
  (c-name "gtk_selection_model_select_all")
  (return-type "gboolean")
)

(define-method unselect_all
  (of-object "GtkSelectionModel")
  (c-name "gtk_selection_model_unselect_all")
  (return-type "gboolean")
)

(define-method set_selection
  (of-object "GtkSelectionModel")
  (c-name "gtk_selection_model_set_selection")
  (return-type "gboolean")
  (parameters
    '("GtkBitset*" "selected")
    '("GtkBitset*" "mask")
  )
)

(define-method selection_changed
  (of-object "GtkSelectionModel")
  (c-name "gtk_selection_model_selection_changed")
  (return-type "none")
  (parameters
    '("guint" "position")
    '("guint" "n_items")
  )
)



;; From gtkseparator.h

(define-function gtk_separator_get_type
  (c-name "gtk_separator_get_type")
  (return-type "GType")
)

(define-function gtk_separator_new
  (c-name "gtk_separator_new")
  (is-constructor-of "GtkSeparator")
  (return-type "GtkWidget*")
  (parameters
    '("GtkOrientation" "orientation")
  )
)



;; From gtksettings.h

(define-function gtk_settings_get_type
  (c-name "gtk_settings_get_type")
  (return-type "GType")
)

(define-function gtk_settings_get_default
  (c-name "gtk_settings_get_default")
  (return-type "GtkSettings*")
)

(define-function gtk_settings_get_for_display
  (c-name "gtk_settings_get_for_display")
  (return-type "GtkSettings*")
  (parameters
    '("GdkDisplay*" "display")
  )
)

(define-method reset_property
  (of-object "GtkSettings")
  (c-name "gtk_settings_reset_property")
  (return-type "none")
  (parameters
    '("const-char*" "name")
  )
)



;; From gtkshortcutaction.h

(define-method to_string
  (of-object "GtkShortcutAction")
  (c-name "gtk_shortcut_action_to_string")
  (return-type "char*")
)

(define-function gtk_shortcut_action_parse_string
  (c-name "gtk_shortcut_action_parse_string")
  (return-type "GtkShortcutAction*")
  (parameters
    '("const-char*" "string")
  )
)

(define-method print
  (of-object "GtkShortcutAction")
  (c-name "gtk_shortcut_action_print")
  (return-type "none")
  (parameters
    '("GString*" "string")
  )
)

(define-method activate
  (of-object "GtkShortcutAction")
  (c-name "gtk_shortcut_action_activate")
  (return-type "gboolean")
  (parameters
    '("GtkShortcutActionFlags" "flags")
    '("GtkWidget*" "widget")
    '("GVariant*" "args")
  )
)

(define-function gtk_nothing_action_get
  (c-name "gtk_nothing_action_get")
  (return-type "GtkShortcutAction*")
)

(define-function gtk_callback_action_new
  (c-name "gtk_callback_action_new")
  (is-constructor-of "GtkCallbackAction")
  (return-type "GtkShortcutAction*")
  (parameters
    '("GtkShortcutFunc" "callback")
    '("gpointer" "data")
    '("GDestroyNotify" "destroy")
  )
)

(define-function gtk_mnemonic_action_get
  (c-name "gtk_mnemonic_action_get")
  (return-type "GtkShortcutAction*")
)

(define-function gtk_activate_action_get
  (c-name "gtk_activate_action_get")
  (return-type "GtkShortcutAction*")
)

(define-function gtk_signal_action_new
  (c-name "gtk_signal_action_new")
  (is-constructor-of "GtkSignalAction")
  (return-type "GtkShortcutAction*")
  (parameters
    '("const-char*" "signal_name")
  )
)

(define-method get_signal_name
  (of-object "GtkSignalAction")
  (c-name "gtk_signal_action_get_signal_name")
  (return-type "const-char*")
)

(define-function gtk_named_action_new
  (c-name "gtk_named_action_new")
  (is-constructor-of "GtkNamedAction")
  (return-type "GtkShortcutAction*")
  (parameters
    '("const-char*" "name")
  )
)

(define-method get_action_name
  (of-object "GtkNamedAction")
  (c-name "gtk_named_action_get_action_name")
  (return-type "const-char*")
)



;; From gtkshortcutcontroller.h

(define-function gtk_shortcut_controller_get_type
  (c-name "gtk_shortcut_controller_get_type")
  (return-type "GType")
)

(define-function gtk_shortcut_controller_new
  (c-name "gtk_shortcut_controller_new")
  (is-constructor-of "GtkShortcutController")
  (return-type "GtkEventController*")
)

(define-function gtk_shortcut_controller_new_for_model
  (c-name "gtk_shortcut_controller_new_for_model")
  (return-type "GtkEventController*")
  (parameters
    '("GListModel*" "model")
  )
)

(define-method set_mnemonics_modifiers
  (of-object "GtkShortcutController")
  (c-name "gtk_shortcut_controller_set_mnemonics_modifiers")
  (return-type "none")
  (parameters
    '("GdkModifierType" "modifiers")
  )
)

(define-method get_mnemonics_modifiers
  (of-object "GtkShortcutController")
  (c-name "gtk_shortcut_controller_get_mnemonics_modifiers")
  (return-type "GdkModifierType")
)

(define-method set_scope
  (of-object "GtkShortcutController")
  (c-name "gtk_shortcut_controller_set_scope")
  (return-type "none")
  (parameters
    '("GtkShortcutScope" "scope")
  )
)

(define-method get_scope
  (of-object "GtkShortcutController")
  (c-name "gtk_shortcut_controller_get_scope")
  (return-type "GtkShortcutScope")
)

(define-method add_shortcut
  (of-object "GtkShortcutController")
  (c-name "gtk_shortcut_controller_add_shortcut")
  (return-type "none")
  (parameters
    '("GtkShortcut*" "shortcut")
  )
)

(define-method remove_shortcut
  (of-object "GtkShortcutController")
  (c-name "gtk_shortcut_controller_remove_shortcut")
  (return-type "none")
  (parameters
    '("GtkShortcut*" "shortcut")
  )
)



;; From gtkshortcut.h

(define-function gtk_shortcut_new
  (c-name "gtk_shortcut_new")
  (is-constructor-of "GtkShortcut")
  (return-type "GtkShortcut*")
  (parameters
    '("GtkShortcutTrigger*" "trigger")
    '("GtkShortcutAction*" "action")
  )
)

(define-function gtk_shortcut_new_with_arguments
  (c-name "gtk_shortcut_new_with_arguments")
  (return-type "GtkShortcut*")
  (parameters
    '("GtkShortcutTrigger*" "trigger")
    '("GtkShortcutAction*" "action")
    '("const-char*" "format_string")
  )
  (varargs #t)
)

(define-method get_trigger
  (of-object "GtkShortcut")
  (c-name "gtk_shortcut_get_trigger")
  (return-type "GtkShortcutTrigger*")
)

(define-method set_trigger
  (of-object "GtkShortcut")
  (c-name "gtk_shortcut_set_trigger")
  (return-type "none")
  (parameters
    '("GtkShortcutTrigger*" "trigger")
  )
)

(define-method get_action
  (of-object "GtkShortcut")
  (c-name "gtk_shortcut_get_action")
  (return-type "GtkShortcutAction*")
)

(define-method set_action
  (of-object "GtkShortcut")
  (c-name "gtk_shortcut_set_action")
  (return-type "none")
  (parameters
    '("GtkShortcutAction*" "action")
  )
)

(define-method get_arguments
  (of-object "GtkShortcut")
  (c-name "gtk_shortcut_get_arguments")
  (return-type "GVariant*")
)

(define-method set_arguments
  (of-object "GtkShortcut")
  (c-name "gtk_shortcut_set_arguments")
  (return-type "none")
  (parameters
    '("GVariant*" "args")
  )
)



;; From gtkshortcutlabel.h

(define-function gtk_shortcut_label_get_type
  (c-name "gtk_shortcut_label_get_type")
  (return-type "GType")
)

(define-function gtk_shortcut_label_new
  (c-name "gtk_shortcut_label_new")
  (is-constructor-of "GtkShortcutLabel")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "accelerator")
  )
)

(define-method get_accelerator
  (of-object "GtkShortcutLabel")
  (c-name "gtk_shortcut_label_get_accelerator")
  (return-type "const-char*")
)

(define-method set_accelerator
  (of-object "GtkShortcutLabel")
  (c-name "gtk_shortcut_label_set_accelerator")
  (return-type "none")
  (parameters
    '("const-char*" "accelerator")
  )
)

(define-method get_disabled_text
  (of-object "GtkShortcutLabel")
  (c-name "gtk_shortcut_label_get_disabled_text")
  (return-type "const-char*")
)

(define-method set_disabled_text
  (of-object "GtkShortcutLabel")
  (c-name "gtk_shortcut_label_set_disabled_text")
  (return-type "none")
  (parameters
    '("const-char*" "disabled_text")
  )
)



;; From gtkshortcutmanager.h



;; From gtkshortcutsgroup.h

(define-function gtk_shortcuts_group_get_type
  (c-name "gtk_shortcuts_group_get_type")
  (return-type "GType")
)



;; From gtkshortcutssection.h

(define-function gtk_shortcuts_section_get_type
  (c-name "gtk_shortcuts_section_get_type")
  (return-type "GType")
)



;; From gtkshortcutsshortcut.h

(define-function gtk_shortcuts_shortcut_get_type
  (c-name "gtk_shortcuts_shortcut_get_type")
  (return-type "GType")
)



;; From gtkshortcutswindow.h

(define-function gtk_shortcuts_window_get_type
  (c-name "gtk_shortcuts_window_get_type")
  (return-type "GType")
)



;; From gtkshortcuttrigger.h

(define-function gtk_shortcut_trigger_parse_string
  (c-name "gtk_shortcut_trigger_parse_string")
  (return-type "GtkShortcutTrigger*")
  (parameters
    '("const-char*" "string")
  )
)

(define-method to_string
  (of-object "GtkShortcutTrigger")
  (c-name "gtk_shortcut_trigger_to_string")
  (return-type "char*")
)

(define-method print
  (of-object "GtkShortcutTrigger")
  (c-name "gtk_shortcut_trigger_print")
  (return-type "none")
  (parameters
    '("GString*" "string")
  )
)

(define-method to_label
  (of-object "GtkShortcutTrigger")
  (c-name "gtk_shortcut_trigger_to_label")
  (return-type "char*")
  (parameters
    '("GdkDisplay*" "display")
  )
)

(define-method print_label
  (of-object "GtkShortcutTrigger")
  (c-name "gtk_shortcut_trigger_print_label")
  (return-type "gboolean")
  (parameters
    '("GdkDisplay*" "display")
    '("GString*" "string")
  )
)

(define-function gtk_shortcut_trigger_hash
  (c-name "gtk_shortcut_trigger_hash")
  (return-type "guint")
  (parameters
    '("gconstpointer" "trigger")
  )
)

(define-function gtk_shortcut_trigger_equal
  (c-name "gtk_shortcut_trigger_equal")
  (return-type "gboolean")
  (parameters
    '("gconstpointer" "trigger1")
    '("gconstpointer" "trigger2")
  )
)

(define-function gtk_shortcut_trigger_compare
  (c-name "gtk_shortcut_trigger_compare")
  (return-type "int")
  (parameters
    '("gconstpointer" "trigger1")
    '("gconstpointer" "trigger2")
  )
)

(define-method trigger
  (of-object "GtkShortcutTrigger")
  (c-name "gtk_shortcut_trigger_trigger")
  (return-type "GdkKeyMatch")
  (parameters
    '("GdkEvent*" "event")
    '("gboolean" "enable_mnemonics")
  )
)

(define-function gtk_never_trigger_get
  (c-name "gtk_never_trigger_get")
  (return-type "GtkShortcutTrigger*")
)

(define-function gtk_keyval_trigger_new
  (c-name "gtk_keyval_trigger_new")
  (is-constructor-of "GtkKeyvalTrigger")
  (return-type "GtkShortcutTrigger*")
  (parameters
    '("guint" "keyval")
    '("GdkModifierType" "modifiers")
  )
)

(define-method get_modifiers
  (of-object "GtkKeyvalTrigger")
  (c-name "gtk_keyval_trigger_get_modifiers")
  (return-type "GdkModifierType")
)

(define-method get_keyval
  (of-object "GtkKeyvalTrigger")
  (c-name "gtk_keyval_trigger_get_keyval")
  (return-type "guint")
)

(define-function gtk_mnemonic_trigger_new
  (c-name "gtk_mnemonic_trigger_new")
  (is-constructor-of "GtkMnemonicTrigger")
  (return-type "GtkShortcutTrigger*")
  (parameters
    '("guint" "keyval")
  )
)

(define-method get_keyval
  (of-object "GtkMnemonicTrigger")
  (c-name "gtk_mnemonic_trigger_get_keyval")
  (return-type "guint")
)

(define-function gtk_alternative_trigger_new
  (c-name "gtk_alternative_trigger_new")
  (is-constructor-of "GtkAlternativeTrigger")
  (return-type "GtkShortcutTrigger*")
  (parameters
    '("GtkShortcutTrigger*" "first")
    '("GtkShortcutTrigger*" "second")
  )
)

(define-method get_first
  (of-object "GtkAlternativeTrigger")
  (c-name "gtk_alternative_trigger_get_first")
  (return-type "GtkShortcutTrigger*")
)

(define-method get_second
  (of-object "GtkAlternativeTrigger")
  (c-name "gtk_alternative_trigger_get_second")
  (return-type "GtkShortcutTrigger*")
)



;; From gtkshow.h

(define-function gtk_show_uri_full
  (c-name "gtk_show_uri_full")
  (return-type "none")
  (parameters
    '("GtkWindow*" "parent")
    '("const-char*" "uri")
    '("guint32" "timestamp")
    '("GCancellable*" "cancellable")
    '("GAsyncReadyCallback" "callback")
    '("gpointer" "user_data")
  )
)

(define-function gtk_show_uri_full_finish
  (c-name "gtk_show_uri_full_finish")
  (return-type "gboolean")
  (parameters
    '("GtkWindow*" "parent")
    '("GAsyncResult*" "result")
    '("GError**" "error")
  )
)

(define-function gtk_show_uri
  (c-name "gtk_show_uri")
  (return-type "none")
  (parameters
    '("GtkWindow*" "parent")
    '("const-char*" "uri")
    '("guint32" "timestamp")
  )
)



;; From gtksignallistitemfactory.h

(define-function gtk_signal_list_item_factory_get_type
  (c-name "gtk_signal_list_item_factory_get_type")
  (return-type "GType")
)

(define-function gtk_signal_list_item_factory_new
  (c-name "gtk_signal_list_item_factory_new")
  (is-constructor-of "GtkSignalListItemFactory")
  (return-type "GtkListItemFactory*")
)



;; From gtksingleselection.h

(define-function gtk_single_selection_new
  (c-name "gtk_single_selection_new")
  (is-constructor-of "GtkSingleSelection")
  (return-type "GtkSingleSelection*")
  (parameters
    '("GListModel*" "model")
  )
)

(define-method get_model
  (of-object "GtkSingleSelection")
  (c-name "gtk_single_selection_get_model")
  (return-type "GListModel*")
)

(define-method set_model
  (of-object "GtkSingleSelection")
  (c-name "gtk_single_selection_set_model")
  (return-type "none")
  (parameters
    '("GListModel*" "model")
  )
)

(define-method get_selected
  (of-object "GtkSingleSelection")
  (c-name "gtk_single_selection_get_selected")
  (return-type "guint")
)

(define-method set_selected
  (of-object "GtkSingleSelection")
  (c-name "gtk_single_selection_set_selected")
  (return-type "none")
  (parameters
    '("guint" "position")
  )
)

(define-method get_selected_item
  (of-object "GtkSingleSelection")
  (c-name "gtk_single_selection_get_selected_item")
  (return-type "gpointer")
)

(define-method get_autoselect
  (of-object "GtkSingleSelection")
  (c-name "gtk_single_selection_get_autoselect")
  (return-type "gboolean")
)

(define-method set_autoselect
  (of-object "GtkSingleSelection")
  (c-name "gtk_single_selection_set_autoselect")
  (return-type "none")
  (parameters
    '("gboolean" "autoselect")
  )
)

(define-method get_can_unselect
  (of-object "GtkSingleSelection")
  (c-name "gtk_single_selection_get_can_unselect")
  (return-type "gboolean")
)

(define-method set_can_unselect
  (of-object "GtkSingleSelection")
  (c-name "gtk_single_selection_set_can_unselect")
  (return-type "none")
  (parameters
    '("gboolean" "can_unselect")
  )
)



;; From gtksizegroup.h

(define-function gtk_size_group_get_type
  (c-name "gtk_size_group_get_type")
  (return-type "GType")
)

(define-function gtk_size_group_new
  (c-name "gtk_size_group_new")
  (is-constructor-of "GtkSizeGroup")
  (return-type "GtkSizeGroup*")
  (parameters
    '("GtkSizeGroupMode" "mode")
  )
)

(define-method set_mode
  (of-object "GtkSizeGroup")
  (c-name "gtk_size_group_set_mode")
  (return-type "none")
  (parameters
    '("GtkSizeGroupMode" "mode")
  )
)

(define-method get_mode
  (of-object "GtkSizeGroup")
  (c-name "gtk_size_group_get_mode")
  (return-type "GtkSizeGroupMode")
)

(define-method add_widget
  (of-object "GtkSizeGroup")
  (c-name "gtk_size_group_add_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method remove_widget
  (of-object "GtkSizeGroup")
  (c-name "gtk_size_group_remove_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method get_widgets
  (of-object "GtkSizeGroup")
  (c-name "gtk_size_group_get_widgets")
  (return-type "GSList*")
)



;; From gtksizerequest.h

(define-function gtk_distribute_natural_allocation
  (c-name "gtk_distribute_natural_allocation")
  (return-type "int")
  (parameters
    '("int" "extra_space")
    '("guint" "n_requested_sizes")
    '("GtkRequestedSize*" "sizes")
  )
)



;; From gtkslicelistmodel.h

(define-function gtk_slice_list_model_new
  (c-name "gtk_slice_list_model_new")
  (is-constructor-of "GtkSliceListModel")
  (return-type "GtkSliceListModel*")
  (parameters
    '("GListModel*" "model")
    '("guint" "offset")
    '("guint" "size")
  )
)

(define-method set_model
  (of-object "GtkSliceListModel")
  (c-name "gtk_slice_list_model_set_model")
  (return-type "none")
  (parameters
    '("GListModel*" "model")
  )
)

(define-method get_model
  (of-object "GtkSliceListModel")
  (c-name "gtk_slice_list_model_get_model")
  (return-type "GListModel*")
)

(define-method set_offset
  (of-object "GtkSliceListModel")
  (c-name "gtk_slice_list_model_set_offset")
  (return-type "none")
  (parameters
    '("guint" "offset")
  )
)

(define-method get_offset
  (of-object "GtkSliceListModel")
  (c-name "gtk_slice_list_model_get_offset")
  (return-type "guint")
)

(define-method set_size
  (of-object "GtkSliceListModel")
  (c-name "gtk_slice_list_model_set_size")
  (return-type "none")
  (parameters
    '("guint" "size")
  )
)

(define-method get_size
  (of-object "GtkSliceListModel")
  (c-name "gtk_slice_list_model_get_size")
  (return-type "guint")
)



;; From gtksnapshot.h

(define-function gtk_snapshot_new
  (c-name "gtk_snapshot_new")
  (is-constructor-of "GtkSnapshot")
  (return-type "GtkSnapshot*")
)

(define-method free_to_node
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_free_to_node")
  (return-type "GskRenderNode*")
)

(define-method free_to_paintable
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_free_to_paintable")
  (return-type "GdkPaintable*")
  (parameters
    '("const-graphene_size_t*" "size")
  )
)

(define-method to_node
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_to_node")
  (return-type "GskRenderNode*")
)

(define-method to_paintable
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_to_paintable")
  (return-type "GdkPaintable*")
  (parameters
    '("const-graphene_size_t*" "size")
  )
)

(define-method push_debug
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_push_debug")
  (return-type "none")
  (parameters
    '("const-char*" "message")
  )
  (varargs #t)
)

(define-method push_opacity
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_push_opacity")
  (return-type "none")
  (parameters
    '("double" "opacity")
  )
)

(define-method push_blur
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_push_blur")
  (return-type "none")
  (parameters
    '("double" "radius")
  )
)

(define-method push_color_matrix
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_push_color_matrix")
  (return-type "none")
  (parameters
    '("const-graphene_matrix_t*" "color_matrix")
    '("const-graphene_vec4_t*" "color_offset")
  )
)

(define-method push_repeat
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_push_repeat")
  (return-type "none")
  (parameters
    '("const-graphene_rect_t*" "bounds")
    '("const-graphene_rect_t*" "child_bounds")
  )
)

(define-method push_clip
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_push_clip")
  (return-type "none")
  (parameters
    '("const-graphene_rect_t*" "bounds")
  )
)

(define-method push_rounded_clip
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_push_rounded_clip")
  (return-type "none")
  (parameters
    '("const-GskRoundedRect*" "bounds")
  )
)

(define-method push_shadow
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_push_shadow")
  (return-type "none")
  (parameters
    '("const-GskShadow*" "shadow")
    '("gsize" "n_shadows")
  )
)

(define-method push_blend
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_push_blend")
  (return-type "none")
  (parameters
    '("GskBlendMode" "blend_mode")
  )
)

(define-method push_cross_fade
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_push_cross_fade")
  (return-type "none")
  (parameters
    '("double" "progress")
  )
)

(define-method push_gl_shader
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_push_gl_shader")
  (return-type "none")
  (parameters
    '("GskGLShader*" "shader")
    '("const-graphene_rect_t*" "bounds")
    '("GBytes*" "take_args")
  )
)

(define-method gl_shader_pop_texture
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_gl_shader_pop_texture")
  (return-type "none")
)

(define-method pop
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_pop")
  (return-type "none")
)

(define-method save
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_save")
  (return-type "none")
)

(define-method restore
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_restore")
  (return-type "none")
)

(define-method transform
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_transform")
  (return-type "none")
  (parameters
    '("GskTransform*" "transform")
  )
)

(define-method transform_matrix
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_transform_matrix")
  (return-type "none")
  (parameters
    '("const-graphene_matrix_t*" "matrix")
  )
)

(define-method translate
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_translate")
  (return-type "none")
  (parameters
    '("const-graphene_point_t*" "point")
  )
)

(define-method translate_3d
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_translate_3d")
  (return-type "none")
  (parameters
    '("const-graphene_point3d_t*" "point")
  )
)

(define-method rotate
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_rotate")
  (return-type "none")
  (parameters
    '("float" "angle")
  )
)

(define-method rotate_3d
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_rotate_3d")
  (return-type "none")
  (parameters
    '("float" "angle")
    '("const-graphene_vec3_t*" "axis")
  )
)

(define-method scale
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_scale")
  (return-type "none")
  (parameters
    '("float" "factor_x")
    '("float" "factor_y")
  )
)

(define-method scale_3d
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_scale_3d")
  (return-type "none")
  (parameters
    '("float" "factor_x")
    '("float" "factor_y")
    '("float" "factor_z")
  )
)

(define-method perspective
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_perspective")
  (return-type "none")
  (parameters
    '("float" "depth")
  )
)

(define-method append_node
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_append_node")
  (return-type "none")
  (parameters
    '("GskRenderNode*" "node")
  )
)

(define-method append_cairo
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_append_cairo")
  (return-type "cairo_t*")
  (parameters
    '("const-graphene_rect_t*" "bounds")
  )
)

(define-method append_texture
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_append_texture")
  (return-type "none")
  (parameters
    '("GdkTexture*" "texture")
    '("const-graphene_rect_t*" "bounds")
  )
)

(define-method append_color
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_append_color")
  (return-type "none")
  (parameters
    '("const-GdkRGBA*" "color")
    '("const-graphene_rect_t*" "bounds")
  )
)

(define-method append_linear_gradient
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_append_linear_gradient")
  (return-type "none")
  (parameters
    '("const-graphene_rect_t*" "bounds")
    '("const-graphene_point_t*" "start_point")
    '("const-graphene_point_t*" "end_point")
    '("const-GskColorStop*" "stops")
    '("gsize" "n_stops")
  )
)

(define-method append_repeating_linear_gradient
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_append_repeating_linear_gradient")
  (return-type "none")
  (parameters
    '("const-graphene_rect_t*" "bounds")
    '("const-graphene_point_t*" "start_point")
    '("const-graphene_point_t*" "end_point")
    '("const-GskColorStop*" "stops")
    '("gsize" "n_stops")
  )
)

(define-method append_radial_gradient
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_append_radial_gradient")
  (return-type "none")
  (parameters
    '("const-graphene_rect_t*" "bounds")
    '("const-graphene_point_t*" "center")
    '("float" "hradius")
    '("float" "vradius")
    '("float" "start")
    '("float" "end")
    '("const-GskColorStop*" "stops")
    '("gsize" "n_stops")
  )
)

(define-method append_repeating_radial_gradient
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_append_repeating_radial_gradient")
  (return-type "none")
  (parameters
    '("const-graphene_rect_t*" "bounds")
    '("const-graphene_point_t*" "center")
    '("float" "hradius")
    '("float" "vradius")
    '("float" "start")
    '("float" "end")
    '("const-GskColorStop*" "stops")
    '("gsize" "n_stops")
  )
)

(define-method append_conic_gradient
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_append_conic_gradient")
  (return-type "none")
  (parameters
    '("const-graphene_rect_t*" "bounds")
    '("const-graphene_point_t*" "center")
    '("float" "rotation")
    '("const-GskColorStop*" "stops")
    '("gsize" "n_stops")
  )
)

(define-method append_border
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_append_border")
  (return-type "none")
  (parameters
    '("const-GskRoundedRect*" "outline")
    '("const-float" "border_width[4]")
    '("const-GdkRGBA" "border_color[4]")
  )
)

(define-method append_inset_shadow
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_append_inset_shadow")
  (return-type "none")
  (parameters
    '("const-GskRoundedRect*" "outline")
    '("const-GdkRGBA*" "color")
    '("float" "dx")
    '("float" "dy")
    '("float" "spread")
    '("float" "blur_radius")
  )
)

(define-method append_outset_shadow
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_append_outset_shadow")
  (return-type "none")
  (parameters
    '("const-GskRoundedRect*" "outline")
    '("const-GdkRGBA*" "color")
    '("float" "dx")
    '("float" "dy")
    '("float" "spread")
    '("float" "blur_radius")
  )
)

(define-method append_layout
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_append_layout")
  (return-type "none")
  (parameters
    '("PangoLayout*" "layout")
    '("const-GdkRGBA*" "color")
  )
)

(define-method render_background
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_render_background")
  (return-type "none")
  (parameters
    '("GtkStyleContext*" "context")
    '("double" "x")
    '("double" "y")
    '("double" "width")
    '("double" "height")
  )
)

(define-method render_frame
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_render_frame")
  (return-type "none")
  (parameters
    '("GtkStyleContext*" "context")
    '("double" "x")
    '("double" "y")
    '("double" "width")
    '("double" "height")
  )
)

(define-method render_focus
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_render_focus")
  (return-type "none")
  (parameters
    '("GtkStyleContext*" "context")
    '("double" "x")
    '("double" "y")
    '("double" "width")
    '("double" "height")
  )
)

(define-method render_layout
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_render_layout")
  (return-type "none")
  (parameters
    '("GtkStyleContext*" "context")
    '("double" "x")
    '("double" "y")
    '("PangoLayout*" "layout")
  )
)

(define-method render_insertion_cursor
  (of-object "GtkSnapshot")
  (c-name "gtk_snapshot_render_insertion_cursor")
  (return-type "none")
  (parameters
    '("GtkStyleContext*" "context")
    '("double" "x")
    '("double" "y")
    '("PangoLayout*" "layout")
    '("int" "index")
    '("PangoDirection" "direction")
  )
)



;; From gtksorter.h

(define-method compare
  (of-object "GtkSorter")
  (c-name "gtk_sorter_compare")
  (return-type "GtkOrdering")
  (parameters
    '("gpointer" "item1")
    '("gpointer" "item2")
  )
)

(define-method get_order
  (of-object "GtkSorter")
  (c-name "gtk_sorter_get_order")
  (return-type "GtkSorterOrder")
)

(define-method changed
  (of-object "GtkSorter")
  (c-name "gtk_sorter_changed")
  (return-type "none")
  (parameters
    '("GtkSorterChange" "change")
  )
)



;; From gtksortlistmodel.h

(define-function gtk_sort_list_model_new
  (c-name "gtk_sort_list_model_new")
  (is-constructor-of "GtkSortListModel")
  (return-type "GtkSortListModel*")
  (parameters
    '("GListModel*" "model")
    '("GtkSorter*" "sorter")
  )
)

(define-method set_sorter
  (of-object "GtkSortListModel")
  (c-name "gtk_sort_list_model_set_sorter")
  (return-type "none")
  (parameters
    '("GtkSorter*" "sorter")
  )
)

(define-method get_sorter
  (of-object "GtkSortListModel")
  (c-name "gtk_sort_list_model_get_sorter")
  (return-type "GtkSorter*")
)

(define-method set_model
  (of-object "GtkSortListModel")
  (c-name "gtk_sort_list_model_set_model")
  (return-type "none")
  (parameters
    '("GListModel*" "model")
  )
)

(define-method get_model
  (of-object "GtkSortListModel")
  (c-name "gtk_sort_list_model_get_model")
  (return-type "GListModel*")
)

(define-method set_incremental
  (of-object "GtkSortListModel")
  (c-name "gtk_sort_list_model_set_incremental")
  (return-type "none")
  (parameters
    '("gboolean" "incremental")
  )
)

(define-method get_incremental
  (of-object "GtkSortListModel")
  (c-name "gtk_sort_list_model_get_incremental")
  (return-type "gboolean")
)

(define-method get_pending
  (of-object "GtkSortListModel")
  (c-name "gtk_sort_list_model_get_pending")
  (return-type "guint")
)



;; From gtkspinbutton.h

(define-function gtk_spin_button_get_type
  (c-name "gtk_spin_button_get_type")
  (return-type "GType")
)

(define-method configure
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_configure")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment")
    '("double" "climb_rate")
    '("guint" "digits")
  )
)

(define-function gtk_spin_button_new
  (c-name "gtk_spin_button_new")
  (is-constructor-of "GtkSpinButton")
  (return-type "GtkWidget*")
  (parameters
    '("GtkAdjustment*" "adjustment")
    '("double" "climb_rate")
    '("guint" "digits")
  )
)

(define-function gtk_spin_button_new_with_range
  (c-name "gtk_spin_button_new_with_range")
  (return-type "GtkWidget*")
  (parameters
    '("double" "min")
    '("double" "max")
    '("double" "step")
  )
)

(define-method set_adjustment
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_set_adjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment")
  )
)

(define-method get_adjustment
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_get_adjustment")
  (return-type "GtkAdjustment*")
)

(define-method set_digits
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_set_digits")
  (return-type "none")
  (parameters
    '("guint" "digits")
  )
)

(define-method get_digits
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_get_digits")
  (return-type "guint")
)

(define-method set_increments
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_set_increments")
  (return-type "none")
  (parameters
    '("double" "step")
    '("double" "page")
  )
)

(define-method get_increments
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_get_increments")
  (return-type "none")
  (parameters
    '("double*" "step")
    '("double*" "page")
  )
)

(define-method set_range
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_set_range")
  (return-type "none")
  (parameters
    '("double" "min")
    '("double" "max")
  )
)

(define-method get_range
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_get_range")
  (return-type "none")
  (parameters
    '("double*" "min")
    '("double*" "max")
  )
)

(define-method get_value
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_get_value")
  (return-type "double")
)

(define-method get_value_as_int
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_get_value_as_int")
  (return-type "int")
)

(define-method set_value
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_set_value")
  (return-type "none")
  (parameters
    '("double" "value")
  )
)

(define-method set_update_policy
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_set_update_policy")
  (return-type "none")
  (parameters
    '("GtkSpinButtonUpdatePolicy" "policy")
  )
)

(define-method get_update_policy
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_get_update_policy")
  (return-type "GtkSpinButtonUpdatePolicy")
)

(define-method set_numeric
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_set_numeric")
  (return-type "none")
  (parameters
    '("gboolean" "numeric")
  )
)

(define-method get_numeric
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_get_numeric")
  (return-type "gboolean")
)

(define-method spin
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_spin")
  (return-type "none")
  (parameters
    '("GtkSpinType" "direction")
    '("double" "increment")
  )
)

(define-method set_wrap
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_set_wrap")
  (return-type "none")
  (parameters
    '("gboolean" "wrap")
  )
)

(define-method get_wrap
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_get_wrap")
  (return-type "gboolean")
)

(define-method set_snap_to_ticks
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_set_snap_to_ticks")
  (return-type "none")
  (parameters
    '("gboolean" "snap_to_ticks")
  )
)

(define-method get_snap_to_ticks
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_get_snap_to_ticks")
  (return-type "gboolean")
)

(define-method set_climb_rate
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_set_climb_rate")
  (return-type "none")
  (parameters
    '("double" "climb_rate")
  )
)

(define-method get_climb_rate
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_get_climb_rate")
  (return-type "double")
)

(define-method update
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_update")
  (return-type "none")
)



;; From gtkspinner.h

(define-function gtk_spinner_get_type
  (c-name "gtk_spinner_get_type")
  (return-type "GType")
)

(define-function gtk_spinner_new
  (c-name "gtk_spinner_new")
  (is-constructor-of "GtkSpinner")
  (return-type "GtkWidget*")
)

(define-method start
  (of-object "GtkSpinner")
  (c-name "gtk_spinner_start")
  (return-type "none")
)

(define-method stop
  (of-object "GtkSpinner")
  (c-name "gtk_spinner_stop")
  (return-type "none")
)

(define-method set_spinning
  (of-object "GtkSpinner")
  (c-name "gtk_spinner_set_spinning")
  (return-type "none")
  (parameters
    '("gboolean" "spinning")
  )
)

(define-method get_spinning
  (of-object "GtkSpinner")
  (c-name "gtk_spinner_get_spinning")
  (return-type "gboolean")
)



;; From gtkstack.h

(define-function gtk_stack_page_get_type
  (c-name "gtk_stack_page_get_type")
  (return-type "GType")
)

(define-method get_child
  (of-object "GtkStackPage")
  (c-name "gtk_stack_page_get_child")
  (return-type "GtkWidget*")
)

(define-method get_visible
  (of-object "GtkStackPage")
  (c-name "gtk_stack_page_get_visible")
  (return-type "gboolean")
)

(define-method set_visible
  (of-object "GtkStackPage")
  (c-name "gtk_stack_page_set_visible")
  (return-type "none")
  (parameters
    '("gboolean" "visible")
  )
)

(define-method get_needs_attention
  (of-object "GtkStackPage")
  (c-name "gtk_stack_page_get_needs_attention")
  (return-type "gboolean")
)

(define-method set_needs_attention
  (of-object "GtkStackPage")
  (c-name "gtk_stack_page_set_needs_attention")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_use_underline
  (of-object "GtkStackPage")
  (c-name "gtk_stack_page_get_use_underline")
  (return-type "gboolean")
)

(define-method set_use_underline
  (of-object "GtkStackPage")
  (c-name "gtk_stack_page_set_use_underline")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_name
  (of-object "GtkStackPage")
  (c-name "gtk_stack_page_get_name")
  (return-type "const-char*")
)

(define-method set_name
  (of-object "GtkStackPage")
  (c-name "gtk_stack_page_set_name")
  (return-type "none")
  (parameters
    '("const-char*" "setting")
  )
)

(define-method get_title
  (of-object "GtkStackPage")
  (c-name "gtk_stack_page_get_title")
  (return-type "const-char*")
)

(define-method set_title
  (of-object "GtkStackPage")
  (c-name "gtk_stack_page_set_title")
  (return-type "none")
  (parameters
    '("const-char*" "setting")
  )
)

(define-method get_icon_name
  (of-object "GtkStackPage")
  (c-name "gtk_stack_page_get_icon_name")
  (return-type "const-char*")
)

(define-method set_icon_name
  (of-object "GtkStackPage")
  (c-name "gtk_stack_page_set_icon_name")
  (return-type "none")
  (parameters
    '("const-char*" "setting")
  )
)

(define-function gtk_stack_get_type
  (c-name "gtk_stack_get_type")
  (return-type "GType")
)

(define-function gtk_stack_new
  (c-name "gtk_stack_new")
  (is-constructor-of "GtkStack")
  (return-type "GtkWidget*")
)

(define-method add_child
  (of-object "GtkStack")
  (c-name "gtk_stack_add_child")
  (return-type "GtkStackPage*")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method add_named
  (of-object "GtkStack")
  (c-name "gtk_stack_add_named")
  (return-type "GtkStackPage*")
  (parameters
    '("GtkWidget*" "child")
    '("const-char*" "name")
  )
)

(define-method add_titled
  (of-object "GtkStack")
  (c-name "gtk_stack_add_titled")
  (return-type "GtkStackPage*")
  (parameters
    '("GtkWidget*" "child")
    '("const-char*" "name")
    '("const-char*" "title")
  )
)

(define-method remove
  (of-object "GtkStack")
  (c-name "gtk_stack_remove")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_page
  (of-object "GtkStack")
  (c-name "gtk_stack_get_page")
  (return-type "GtkStackPage*")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_child_by_name
  (of-object "GtkStack")
  (c-name "gtk_stack_get_child_by_name")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "name")
  )
)

(define-method set_visible_child
  (of-object "GtkStack")
  (c-name "gtk_stack_set_visible_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_visible_child
  (of-object "GtkStack")
  (c-name "gtk_stack_get_visible_child")
  (return-type "GtkWidget*")
)

(define-method set_visible_child_name
  (of-object "GtkStack")
  (c-name "gtk_stack_set_visible_child_name")
  (return-type "none")
  (parameters
    '("const-char*" "name")
  )
)

(define-method get_visible_child_name
  (of-object "GtkStack")
  (c-name "gtk_stack_get_visible_child_name")
  (return-type "const-char*")
)

(define-method set_visible_child_full
  (of-object "GtkStack")
  (c-name "gtk_stack_set_visible_child_full")
  (return-type "none")
  (parameters
    '("const-char*" "name")
    '("GtkStackTransitionType" "transition")
  )
)

(define-method set_hhomogeneous
  (of-object "GtkStack")
  (c-name "gtk_stack_set_hhomogeneous")
  (return-type "none")
  (parameters
    '("gboolean" "hhomogeneous")
  )
)

(define-method get_hhomogeneous
  (of-object "GtkStack")
  (c-name "gtk_stack_get_hhomogeneous")
  (return-type "gboolean")
)

(define-method set_vhomogeneous
  (of-object "GtkStack")
  (c-name "gtk_stack_set_vhomogeneous")
  (return-type "none")
  (parameters
    '("gboolean" "vhomogeneous")
  )
)

(define-method get_vhomogeneous
  (of-object "GtkStack")
  (c-name "gtk_stack_get_vhomogeneous")
  (return-type "gboolean")
)

(define-method set_transition_duration
  (of-object "GtkStack")
  (c-name "gtk_stack_set_transition_duration")
  (return-type "none")
  (parameters
    '("guint" "duration")
  )
)

(define-method get_transition_duration
  (of-object "GtkStack")
  (c-name "gtk_stack_get_transition_duration")
  (return-type "guint")
)

(define-method set_transition_type
  (of-object "GtkStack")
  (c-name "gtk_stack_set_transition_type")
  (return-type "none")
  (parameters
    '("GtkStackTransitionType" "transition")
  )
)

(define-method get_transition_type
  (of-object "GtkStack")
  (c-name "gtk_stack_get_transition_type")
  (return-type "GtkStackTransitionType")
)

(define-method get_transition_running
  (of-object "GtkStack")
  (c-name "gtk_stack_get_transition_running")
  (return-type "gboolean")
)

(define-method set_interpolate_size
  (of-object "GtkStack")
  (c-name "gtk_stack_set_interpolate_size")
  (return-type "none")
  (parameters
    '("gboolean" "interpolate_size")
  )
)

(define-method get_interpolate_size
  (of-object "GtkStack")
  (c-name "gtk_stack_get_interpolate_size")
  (return-type "gboolean")
)

(define-method get_pages
  (of-object "GtkStack")
  (c-name "gtk_stack_get_pages")
  (return-type "GtkSelectionModel*")
)



;; From gtkstacksidebar.h

(define-function gtk_stack_sidebar_get_type
  (c-name "gtk_stack_sidebar_get_type")
  (return-type "GType")
)

(define-function gtk_stack_sidebar_new
  (c-name "gtk_stack_sidebar_new")
  (is-constructor-of "GtkStackSidebar")
  (return-type "GtkWidget*")
)

(define-method set_stack
  (of-object "GtkStackSidebar")
  (c-name "gtk_stack_sidebar_set_stack")
  (return-type "none")
  (parameters
    '("GtkStack*" "stack")
  )
)

(define-method get_stack
  (of-object "GtkStackSidebar")
  (c-name "gtk_stack_sidebar_get_stack")
  (return-type "GtkStack*")
)



;; From gtkstackswitcher.h

(define-function gtk_stack_switcher_get_type
  (c-name "gtk_stack_switcher_get_type")
  (return-type "GType")
)

(define-function gtk_stack_switcher_new
  (c-name "gtk_stack_switcher_new")
  (is-constructor-of "GtkStackSwitcher")
  (return-type "GtkWidget*")
)

(define-method set_stack
  (of-object "GtkStackSwitcher")
  (c-name "gtk_stack_switcher_set_stack")
  (return-type "none")
  (parameters
    '("GtkStack*" "stack")
  )
)

(define-method get_stack
  (of-object "GtkStackSwitcher")
  (c-name "gtk_stack_switcher_get_stack")
  (return-type "GtkStack*")
)



;; From gtkstatusbar.h

(define-function gtk_statusbar_get_type
  (c-name "gtk_statusbar_get_type")
  (return-type "GType")
)

(define-function gtk_statusbar_new
  (c-name "gtk_statusbar_new")
  (is-constructor-of "GtkStatusbar")
  (return-type "GtkWidget*")
)

(define-method get_context_id
  (of-object "GtkStatusbar")
  (c-name "gtk_statusbar_get_context_id")
  (return-type "guint")
  (parameters
    '("const-char*" "context_description")
  )
)

(define-method push
  (of-object "GtkStatusbar")
  (c-name "gtk_statusbar_push")
  (return-type "guint")
  (parameters
    '("guint" "context_id")
    '("const-char*" "text")
  )
)

(define-method pop
  (of-object "GtkStatusbar")
  (c-name "gtk_statusbar_pop")
  (return-type "none")
  (parameters
    '("guint" "context_id")
  )
)

(define-method remove
  (of-object "GtkStatusbar")
  (c-name "gtk_statusbar_remove")
  (return-type "none")
  (parameters
    '("guint" "context_id")
    '("guint" "message_id")
  )
)

(define-method remove_all
  (of-object "GtkStatusbar")
  (c-name "gtk_statusbar_remove_all")
  (return-type "none")
  (parameters
    '("guint" "context_id")
  )
)



;; From gtkstringfilter.h

(define-function gtk_string_filter_new
  (c-name "gtk_string_filter_new")
  (is-constructor-of "GtkStringFilter")
  (return-type "GtkStringFilter*")
  (parameters
    '("GtkExpression*" "expression")
  )
)

(define-method get_search
  (of-object "GtkStringFilter")
  (c-name "gtk_string_filter_get_search")
  (return-type "const-char*")
)

(define-method set_search
  (of-object "GtkStringFilter")
  (c-name "gtk_string_filter_set_search")
  (return-type "none")
  (parameters
    '("const-char*" "search")
  )
)

(define-method get_expression
  (of-object "GtkStringFilter")
  (c-name "gtk_string_filter_get_expression")
  (return-type "GtkExpression*")
)

(define-method set_expression
  (of-object "GtkStringFilter")
  (c-name "gtk_string_filter_set_expression")
  (return-type "none")
  (parameters
    '("GtkExpression*" "expression")
  )
)

(define-method get_ignore_case
  (of-object "GtkStringFilter")
  (c-name "gtk_string_filter_get_ignore_case")
  (return-type "gboolean")
)

(define-method set_ignore_case
  (of-object "GtkStringFilter")
  (c-name "gtk_string_filter_set_ignore_case")
  (return-type "none")
  (parameters
    '("gboolean" "ignore_case")
  )
)

(define-method get_match_mode
  (of-object "GtkStringFilter")
  (c-name "gtk_string_filter_get_match_mode")
  (return-type "GtkStringFilterMatchMode")
)

(define-method set_match_mode
  (of-object "GtkStringFilter")
  (c-name "gtk_string_filter_set_match_mode")
  (return-type "none")
  (parameters
    '("GtkStringFilterMatchMode" "mode")
  )
)



;; From gtkstringlist.h

(define-function gtk_string_object_new
  (c-name "gtk_string_object_new")
  (is-constructor-of "GtkStringObject")
  (return-type "GtkStringObject*")
  (parameters
    '("const-char*" "string")
  )
)

(define-method get_string
  (of-object "GtkStringObject")
  (c-name "gtk_string_object_get_string")
  (return-type "const-char*")
)

(define-function gtk_string_list_new
  (c-name "gtk_string_list_new")
  (is-constructor-of "GtkStringList")
  (return-type "GtkStringList*")
  (parameters
    '("const-char*-const*" "strings")
  )
)

(define-method append
  (of-object "GtkStringList")
  (c-name "gtk_string_list_append")
  (return-type "none")
  (parameters
    '("const-char*" "string")
  )
)

(define-method take
  (of-object "GtkStringList")
  (c-name "gtk_string_list_take")
  (return-type "none")
  (parameters
    '("char*" "string")
  )
)

(define-method remove
  (of-object "GtkStringList")
  (c-name "gtk_string_list_remove")
  (return-type "none")
  (parameters
    '("guint" "position")
  )
)

(define-method splice
  (of-object "GtkStringList")
  (c-name "gtk_string_list_splice")
  (return-type "none")
  (parameters
    '("guint" "position")
    '("guint" "n_removals")
    '("const-char*-const*" "additions")
  )
)

(define-method get_string
  (of-object "GtkStringList")
  (c-name "gtk_string_list_get_string")
  (return-type "const-char*")
  (parameters
    '("guint" "position")
  )
)



;; From gtkstringsorter.h

(define-function gtk_string_sorter_new
  (c-name "gtk_string_sorter_new")
  (is-constructor-of "GtkStringSorter")
  (return-type "GtkStringSorter*")
  (parameters
    '("GtkExpression*" "expression")
  )
)

(define-method get_expression
  (of-object "GtkStringSorter")
  (c-name "gtk_string_sorter_get_expression")
  (return-type "GtkExpression*")
)

(define-method set_expression
  (of-object "GtkStringSorter")
  (c-name "gtk_string_sorter_set_expression")
  (return-type "none")
  (parameters
    '("GtkExpression*" "expression")
  )
)

(define-method get_ignore_case
  (of-object "GtkStringSorter")
  (c-name "gtk_string_sorter_get_ignore_case")
  (return-type "gboolean")
)

(define-method set_ignore_case
  (of-object "GtkStringSorter")
  (c-name "gtk_string_sorter_set_ignore_case")
  (return-type "none")
  (parameters
    '("gboolean" "ignore_case")
  )
)



;; From gtkstylecontext.h

(define-function gtk_style_context_get_type
  (c-name "gtk_style_context_get_type")
  (return-type "GType")
)

(define-function gtk_style_context_add_provider_for_display
  (c-name "gtk_style_context_add_provider_for_display")
  (return-type "none")
  (parameters
    '("GdkDisplay*" "display")
    '("GtkStyleProvider*" "provider")
    '("guint" "priority")
  )
)

(define-function gtk_style_context_remove_provider_for_display
  (c-name "gtk_style_context_remove_provider_for_display")
  (return-type "none")
  (parameters
    '("GdkDisplay*" "display")
    '("GtkStyleProvider*" "provider")
  )
)

(define-method add_provider
  (of-object "GtkStyleContext")
  (c-name "gtk_style_context_add_provider")
  (return-type "none")
  (parameters
    '("GtkStyleProvider*" "provider")
    '("guint" "priority")
  )
)

(define-method remove_provider
  (of-object "GtkStyleContext")
  (c-name "gtk_style_context_remove_provider")
  (return-type "none")
  (parameters
    '("GtkStyleProvider*" "provider")
  )
)

(define-method save
  (of-object "GtkStyleContext")
  (c-name "gtk_style_context_save")
  (return-type "none")
)

(define-method restore
  (of-object "GtkStyleContext")
  (c-name "gtk_style_context_restore")
  (return-type "none")
)

(define-method set_state
  (of-object "GtkStyleContext")
  (c-name "gtk_style_context_set_state")
  (return-type "none")
  (parameters
    '("GtkStateFlags" "flags")
  )
)

(define-method get_state
  (of-object "GtkStyleContext")
  (c-name "gtk_style_context_get_state")
  (return-type "GtkStateFlags")
)

(define-method set_scale
  (of-object "GtkStyleContext")
  (c-name "gtk_style_context_set_scale")
  (return-type "none")
  (parameters
    '("int" "scale")
  )
)

(define-method get_scale
  (of-object "GtkStyleContext")
  (c-name "gtk_style_context_get_scale")
  (return-type "int")
)

(define-method add_class
  (of-object "GtkStyleContext")
  (c-name "gtk_style_context_add_class")
  (return-type "none")
  (parameters
    '("const-char*" "class_name")
  )
)

(define-method remove_class
  (of-object "GtkStyleContext")
  (c-name "gtk_style_context_remove_class")
  (return-type "none")
  (parameters
    '("const-char*" "class_name")
  )
)

(define-method has_class
  (of-object "GtkStyleContext")
  (c-name "gtk_style_context_has_class")
  (return-type "gboolean")
  (parameters
    '("const-char*" "class_name")
  )
)

(define-method set_display
  (of-object "GtkStyleContext")
  (c-name "gtk_style_context_set_display")
  (return-type "none")
  (parameters
    '("GdkDisplay*" "display")
  )
)

(define-method get_display
  (of-object "GtkStyleContext")
  (c-name "gtk_style_context_get_display")
  (return-type "GdkDisplay*")
)

(define-method lookup_color
  (of-object "GtkStyleContext")
  (c-name "gtk_style_context_lookup_color")
  (return-type "gboolean")
  (parameters
    '("const-char*" "color_name")
    '("GdkRGBA*" "color")
  )
)

(define-method get_color
  (of-object "GtkStyleContext")
  (c-name "gtk_style_context_get_color")
  (return-type "none")
  (parameters
    '("GdkRGBA*" "color")
  )
)

(define-method get_border
  (of-object "GtkStyleContext")
  (c-name "gtk_style_context_get_border")
  (return-type "none")
  (parameters
    '("GtkBorder*" "border")
  )
)

(define-method get_padding
  (of-object "GtkStyleContext")
  (c-name "gtk_style_context_get_padding")
  (return-type "none")
  (parameters
    '("GtkBorder*" "padding")
  )
)

(define-method get_margin
  (of-object "GtkStyleContext")
  (c-name "gtk_style_context_get_margin")
  (return-type "none")
  (parameters
    '("GtkBorder*" "margin")
  )
)

(define-method to_string
  (of-object "GtkStyleContext")
  (c-name "gtk_style_context_to_string")
  (return-type "char*")
  (parameters
    '("GtkStyleContextPrintFlags" "flags")
  )
)



;; From gtkstyleprovider.h

(define-function gtk_style_provider_get_type
  (c-name "gtk_style_provider_get_type")
  (return-type "GType")
)



;; From gtkswitch.h

(define-function gtk_switch_get_type
  (c-name "gtk_switch_get_type")
  (return-type "GType")
)

(define-function gtk_switch_new
  (c-name "gtk_switch_new")
  (is-constructor-of "GtkSwitch")
  (return-type "GtkWidget*")
)

(define-method set_active
  (of-object "GtkSwitch")
  (c-name "gtk_switch_set_active")
  (return-type "none")
  (parameters
    '("gboolean" "is_active")
  )
)

(define-method get_active
  (of-object "GtkSwitch")
  (c-name "gtk_switch_get_active")
  (return-type "gboolean")
)

(define-method set_state
  (of-object "GtkSwitch")
  (c-name "gtk_switch_set_state")
  (return-type "none")
  (parameters
    '("gboolean" "state")
  )
)

(define-method get_state
  (of-object "GtkSwitch")
  (c-name "gtk_switch_get_state")
  (return-type "gboolean")
)



;; From gtktestatcontext.h

(define-function gtk_test_accessible_has_role
  (c-name "gtk_test_accessible_has_role")
  (return-type "gboolean")
  (parameters
    '("GtkAccessible*" "accessible")
    '("GtkAccessibleRole" "role")
  )
)

(define-function gtk_test_accessible_has_property
  (c-name "gtk_test_accessible_has_property")
  (return-type "gboolean")
  (parameters
    '("GtkAccessible*" "accessible")
    '("GtkAccessibleProperty" "property")
  )
)

(define-function gtk_test_accessible_has_relation
  (c-name "gtk_test_accessible_has_relation")
  (return-type "gboolean")
  (parameters
    '("GtkAccessible*" "accessible")
    '("GtkAccessibleRelation" "relation")
  )
)

(define-function gtk_test_accessible_has_state
  (c-name "gtk_test_accessible_has_state")
  (return-type "gboolean")
  (parameters
    '("GtkAccessible*" "accessible")
    '("GtkAccessibleState" "state")
  )
)

(define-function gtk_test_accessible_check_property
  (c-name "gtk_test_accessible_check_property")
  (return-type "char*")
  (parameters
    '("GtkAccessible*" "accessible")
    '("GtkAccessibleProperty" "property")
  )
  (varargs #t)
)

(define-function gtk_test_accessible_check_relation
  (c-name "gtk_test_accessible_check_relation")
  (return-type "char*")
  (parameters
    '("GtkAccessible*" "accessible")
    '("GtkAccessibleRelation" "relation")
  )
  (varargs #t)
)

(define-function gtk_test_accessible_check_state
  (c-name "gtk_test_accessible_check_state")
  (return-type "char*")
  (parameters
    '("GtkAccessible*" "accessible")
    '("GtkAccessibleState" "state")
  )
  (varargs #t)
)

(define-function gtk_test_accessible_assertion_message_role
  (c-name "gtk_test_accessible_assertion_message_role")
  (return-type "none")
  (parameters
    '("const-char*" "domain")
    '("const-char*" "file")
    '("int" "line")
    '("const-char*" "func")
    '("const-char*" "expr")
    '("GtkAccessible*" "accessible")
    '("GtkAccessibleRole" "expected_role")
    '("GtkAccessibleRole" "actual_role")
  )
)



;; From gtktestutils.h

(define-function gtk_test_init
  (c-name "gtk_test_init")
  (return-type "none")
  (parameters
    '("int*" "argcp")
    '("char***" "argvp")
  )
  (varargs #t)
)

(define-function gtk_test_register_all_types
  (c-name "gtk_test_register_all_types")
  (return-type "none")
)

(define-function gtk_test_list_all_types
  (c-name "gtk_test_list_all_types")
  (return-type "const-GType*")
  (parameters
    '("guint*" "n_types")
  )
)

(define-function gtk_test_widget_wait_for_draw
  (c-name "gtk_test_widget_wait_for_draw")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)



;; From gtktextattributes.h

(define-function gtk_text_attributes_new
  (c-name "gtk_text_attributes_new")
  (is-constructor-of "GtkTextAttributes")
  (return-type "GtkTextAttributes*")
)

(define-method copy
  (of-object "GtkTextAttributes")
  (c-name "gtk_text_attributes_copy")
  (return-type "GtkTextAttributes*")
)

(define-method copy_values
  (of-object "GtkTextAttributes")
  (c-name "gtk_text_attributes_copy_values")
  (return-type "none")
  (parameters
    '("GtkTextAttributes*" "dest")
  )
)

(define-method unref
  (of-object "GtkTextAttributes")
  (c-name "gtk_text_attributes_unref")
  (return-type "none")
)

(define-method ref
  (of-object "GtkTextAttributes")
  (c-name "gtk_text_attributes_ref")
  (return-type "GtkTextAttributes*")
)



;; From gtktextbtree.h



;; From gtktextbuffer.h

(define-function gtk_text_buffer_get_type
  (c-name "gtk_text_buffer_get_type")
  (return-type "GType")
)

(define-function gtk_text_buffer_new
  (c-name "gtk_text_buffer_new")
  (is-constructor-of "GtkTextBuffer")
  (return-type "GtkTextBuffer*")
  (parameters
    '("GtkTextTagTable*" "table")
  )
)

(define-method get_line_count
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_line_count")
  (return-type "int")
)

(define-method get_char_count
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_char_count")
  (return-type "int")
)

(define-method get_tag_table
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_tag_table")
  (return-type "GtkTextTagTable*")
)

(define-method set_text
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_set_text")
  (return-type "none")
  (parameters
    '("const-char*" "text")
    '("int" "len")
  )
)

(define-method insert
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_insert")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("const-char*" "text")
    '("int" "len")
  )
)

(define-method insert_at_cursor
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_insert_at_cursor")
  (return-type "none")
  (parameters
    '("const-char*" "text")
    '("int" "len")
  )
)

(define-method insert_interactive
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_insert_interactive")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
    '("const-char*" "text")
    '("int" "len")
    '("gboolean" "default_editable")
  )
)

(define-method insert_interactive_at_cursor
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_insert_interactive_at_cursor")
  (return-type "gboolean")
  (parameters
    '("const-char*" "text")
    '("int" "len")
    '("gboolean" "default_editable")
  )
)

(define-method insert_range
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_insert_range")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("const-GtkTextIter*" "start")
    '("const-GtkTextIter*" "end")
  )
)

(define-method insert_range_interactive
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_insert_range_interactive")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
    '("const-GtkTextIter*" "start")
    '("const-GtkTextIter*" "end")
    '("gboolean" "default_editable")
  )
)

(define-method insert_with_tags
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_insert_with_tags")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("const-char*" "text")
    '("int" "len")
    '("GtkTextTag*" "first_tag")
  )
  (varargs #t)
)

(define-method insert_with_tags_by_name
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_insert_with_tags_by_name")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("const-char*" "text")
    '("int" "len")
    '("const-char*" "first_tag_name")
  )
  (varargs #t)
)

(define-method insert_markup
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_insert_markup")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("const-char*" "markup")
    '("int" "len")
  )
)

(define-method delete
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_delete")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "start")
    '("GtkTextIter*" "end")
  )
)

(define-method delete_interactive
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_delete_interactive")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "start_iter")
    '("GtkTextIter*" "end_iter")
    '("gboolean" "default_editable")
  )
)

(define-method backspace
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_backspace")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
    '("gboolean" "interactive")
    '("gboolean" "default_editable")
  )
)

(define-method get_text
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_text")
  (return-type "char*")
  (parameters
    '("const-GtkTextIter*" "start")
    '("const-GtkTextIter*" "end")
    '("gboolean" "include_hidden_chars")
  )
)

(define-method get_slice
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_slice")
  (return-type "char*")
  (parameters
    '("const-GtkTextIter*" "start")
    '("const-GtkTextIter*" "end")
    '("gboolean" "include_hidden_chars")
  )
)

(define-method insert_paintable
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_insert_paintable")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("GdkPaintable*" "paintable")
  )
)

(define-method insert_child_anchor
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_insert_child_anchor")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("GtkTextChildAnchor*" "anchor")
  )
)

(define-method create_child_anchor
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_create_child_anchor")
  (return-type "GtkTextChildAnchor*")
  (parameters
    '("GtkTextIter*" "iter")
  )
)

(define-method add_mark
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_add_mark")
  (return-type "none")
  (parameters
    '("GtkTextMark*" "mark")
    '("const-GtkTextIter*" "where")
  )
)

(define-method create_mark
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_create_mark")
  (return-type "GtkTextMark*")
  (parameters
    '("const-char*" "mark_name")
    '("const-GtkTextIter*" "where")
    '("gboolean" "left_gravity")
  )
)

(define-method move_mark
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_move_mark")
  (return-type "none")
  (parameters
    '("GtkTextMark*" "mark")
    '("const-GtkTextIter*" "where")
  )
)

(define-method delete_mark
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_delete_mark")
  (return-type "none")
  (parameters
    '("GtkTextMark*" "mark")
  )
)

(define-method get_mark
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_mark")
  (return-type "GtkTextMark*")
  (parameters
    '("const-char*" "name")
  )
)

(define-method move_mark_by_name
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_move_mark_by_name")
  (return-type "none")
  (parameters
    '("const-char*" "name")
    '("const-GtkTextIter*" "where")
  )
)

(define-method delete_mark_by_name
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_delete_mark_by_name")
  (return-type "none")
  (parameters
    '("const-char*" "name")
  )
)

(define-method get_insert
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_insert")
  (return-type "GtkTextMark*")
)

(define-method get_selection_bound
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_selection_bound")
  (return-type "GtkTextMark*")
)

(define-method place_cursor
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_place_cursor")
  (return-type "none")
  (parameters
    '("const-GtkTextIter*" "where")
  )
)

(define-method select_range
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_select_range")
  (return-type "none")
  (parameters
    '("const-GtkTextIter*" "ins")
    '("const-GtkTextIter*" "bound")
  )
)

(define-method apply_tag
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_apply_tag")
  (return-type "none")
  (parameters
    '("GtkTextTag*" "tag")
    '("const-GtkTextIter*" "start")
    '("const-GtkTextIter*" "end")
  )
)

(define-method remove_tag
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_remove_tag")
  (return-type "none")
  (parameters
    '("GtkTextTag*" "tag")
    '("const-GtkTextIter*" "start")
    '("const-GtkTextIter*" "end")
  )
)

(define-method apply_tag_by_name
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_apply_tag_by_name")
  (return-type "none")
  (parameters
    '("const-char*" "name")
    '("const-GtkTextIter*" "start")
    '("const-GtkTextIter*" "end")
  )
)

(define-method remove_tag_by_name
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_remove_tag_by_name")
  (return-type "none")
  (parameters
    '("const-char*" "name")
    '("const-GtkTextIter*" "start")
    '("const-GtkTextIter*" "end")
  )
)

(define-method remove_all_tags
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_remove_all_tags")
  (return-type "none")
  (parameters
    '("const-GtkTextIter*" "start")
    '("const-GtkTextIter*" "end")
  )
)

(define-method create_tag
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_create_tag")
  (return-type "GtkTextTag*")
  (parameters
    '("const-char*" "tag_name")
    '("const-char*" "first_property_name")
  )
  (varargs #t)
)

(define-method get_iter_at_line_offset
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_iter_at_line_offset")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
    '("int" "line_number")
    '("int" "char_offset")
  )
)

(define-method get_iter_at_line_index
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_iter_at_line_index")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
    '("int" "line_number")
    '("int" "byte_index")
  )
)

(define-method get_iter_at_offset
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_iter_at_offset")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("int" "char_offset")
  )
)

(define-method get_iter_at_line
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_iter_at_line")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
    '("int" "line_number")
  )
)

(define-method get_start_iter
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_start_iter")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
  )
)

(define-method get_end_iter
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_end_iter")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
  )
)

(define-method get_bounds
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_bounds")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "start")
    '("GtkTextIter*" "end")
  )
)

(define-method get_iter_at_mark
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_iter_at_mark")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("GtkTextMark*" "mark")
  )
)

(define-method get_iter_at_child_anchor
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_iter_at_child_anchor")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("GtkTextChildAnchor*" "anchor")
  )
)

(define-method get_modified
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_modified")
  (return-type "gboolean")
)

(define-method set_modified
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_set_modified")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_has_selection
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_has_selection")
  (return-type "gboolean")
)

(define-method add_selection_clipboard
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_add_selection_clipboard")
  (return-type "none")
  (parameters
    '("GdkClipboard*" "clipboard")
  )
)

(define-method remove_selection_clipboard
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_remove_selection_clipboard")
  (return-type "none")
  (parameters
    '("GdkClipboard*" "clipboard")
  )
)

(define-method cut_clipboard
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_cut_clipboard")
  (return-type "none")
  (parameters
    '("GdkClipboard*" "clipboard")
    '("gboolean" "default_editable")
  )
)

(define-method copy_clipboard
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_copy_clipboard")
  (return-type "none")
  (parameters
    '("GdkClipboard*" "clipboard")
  )
)

(define-method paste_clipboard
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_paste_clipboard")
  (return-type "none")
  (parameters
    '("GdkClipboard*" "clipboard")
    '("GtkTextIter*" "override_location")
    '("gboolean" "default_editable")
  )
)

(define-method get_selection_bounds
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_selection_bounds")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "start")
    '("GtkTextIter*" "end")
  )
)

(define-method delete_selection
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_delete_selection")
  (return-type "gboolean")
  (parameters
    '("gboolean" "interactive")
    '("gboolean" "default_editable")
  )
)

(define-method get_selection_content
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_selection_content")
  (return-type "GdkContentProvider*")
)

(define-method get_can_undo
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_can_undo")
  (return-type "gboolean")
)

(define-method get_can_redo
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_can_redo")
  (return-type "gboolean")
)

(define-method get_enable_undo
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_enable_undo")
  (return-type "gboolean")
)

(define-method set_enable_undo
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_set_enable_undo")
  (return-type "none")
  (parameters
    '("gboolean" "enable_undo")
  )
)

(define-method get_max_undo_levels
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_max_undo_levels")
  (return-type "guint")
)

(define-method set_max_undo_levels
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_set_max_undo_levels")
  (return-type "none")
  (parameters
    '("guint" "max_undo_levels")
  )
)

(define-method undo
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_undo")
  (return-type "none")
)

(define-method redo
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_redo")
  (return-type "none")
)

(define-method begin_irreversible_action
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_begin_irreversible_action")
  (return-type "none")
)

(define-method end_irreversible_action
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_end_irreversible_action")
  (return-type "none")
)

(define-method begin_user_action
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_begin_user_action")
  (return-type "none")
)

(define-method end_user_action
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_end_user_action")
  (return-type "none")
)



;; From gtktextchild.h

(define-function gtk_text_child_anchor_get_type
  (c-name "gtk_text_child_anchor_get_type")
  (return-type "GType")
)

(define-function gtk_text_child_anchor_new
  (c-name "gtk_text_child_anchor_new")
  (is-constructor-of "GtkTextChildAnchor")
  (return-type "GtkTextChildAnchor*")
)

(define-method get_widgets
  (of-object "GtkTextChildAnchor")
  (c-name "gtk_text_child_anchor_get_widgets")
  (return-type "GtkWidget**")
  (parameters
    '("guint*" "out_len")
  )
)

(define-method get_deleted
  (of-object "GtkTextChildAnchor")
  (c-name "gtk_text_child_anchor_get_deleted")
  (return-type "gboolean")
)



;; From gtktext.h

(define-function gtk_text_get_type
  (c-name "gtk_text_get_type")
  (return-type "GType")
)

(define-function gtk_text_new
  (c-name "gtk_text_new")
  (is-constructor-of "GtkText")
  (return-type "GtkWidget*")
)

(define-function gtk_text_new_with_buffer
  (c-name "gtk_text_new_with_buffer")
  (return-type "GtkWidget*")
  (parameters
    '("GtkEntryBuffer*" "buffer")
  )
)

(define-method get_buffer
  (of-object "GtkText")
  (c-name "gtk_text_get_buffer")
  (return-type "GtkEntryBuffer*")
)

(define-method set_buffer
  (of-object "GtkText")
  (c-name "gtk_text_set_buffer")
  (return-type "none")
  (parameters
    '("GtkEntryBuffer*" "buffer")
  )
)

(define-method set_visibility
  (of-object "GtkText")
  (c-name "gtk_text_set_visibility")
  (return-type "none")
  (parameters
    '("gboolean" "visible")
  )
)

(define-method get_visibility
  (of-object "GtkText")
  (c-name "gtk_text_get_visibility")
  (return-type "gboolean")
)

(define-method set_invisible_char
  (of-object "GtkText")
  (c-name "gtk_text_set_invisible_char")
  (return-type "none")
  (parameters
    '("gunichar" "ch")
  )
)

(define-method get_invisible_char
  (of-object "GtkText")
  (c-name "gtk_text_get_invisible_char")
  (return-type "gunichar")
)

(define-method unset_invisible_char
  (of-object "GtkText")
  (c-name "gtk_text_unset_invisible_char")
  (return-type "none")
)

(define-method set_overwrite_mode
  (of-object "GtkText")
  (c-name "gtk_text_set_overwrite_mode")
  (return-type "none")
  (parameters
    '("gboolean" "overwrite")
  )
)

(define-method get_overwrite_mode
  (of-object "GtkText")
  (c-name "gtk_text_get_overwrite_mode")
  (return-type "gboolean")
)

(define-method set_max_length
  (of-object "GtkText")
  (c-name "gtk_text_set_max_length")
  (return-type "none")
  (parameters
    '("int" "length")
  )
)

(define-method get_max_length
  (of-object "GtkText")
  (c-name "gtk_text_get_max_length")
  (return-type "int")
)

(define-method get_text_length
  (of-object "GtkText")
  (c-name "gtk_text_get_text_length")
  (return-type "guint16")
)

(define-method set_activates_default
  (of-object "GtkText")
  (c-name "gtk_text_set_activates_default")
  (return-type "none")
  (parameters
    '("gboolean" "activates")
  )
)

(define-method get_activates_default
  (of-object "GtkText")
  (c-name "gtk_text_get_activates_default")
  (return-type "gboolean")
)

(define-method get_placeholder_text
  (of-object "GtkText")
  (c-name "gtk_text_get_placeholder_text")
  (return-type "const-char*")
)

(define-method set_placeholder_text
  (of-object "GtkText")
  (c-name "gtk_text_set_placeholder_text")
  (return-type "none")
  (parameters
    '("const-char*" "text")
  )
)

(define-method set_input_purpose
  (of-object "GtkText")
  (c-name "gtk_text_set_input_purpose")
  (return-type "none")
  (parameters
    '("GtkInputPurpose" "purpose")
  )
)

(define-method get_input_purpose
  (of-object "GtkText")
  (c-name "gtk_text_get_input_purpose")
  (return-type "GtkInputPurpose")
)

(define-method set_input_hints
  (of-object "GtkText")
  (c-name "gtk_text_set_input_hints")
  (return-type "none")
  (parameters
    '("GtkInputHints" "hints")
  )
)

(define-method get_input_hints
  (of-object "GtkText")
  (c-name "gtk_text_get_input_hints")
  (return-type "GtkInputHints")
)

(define-method set_attributes
  (of-object "GtkText")
  (c-name "gtk_text_set_attributes")
  (return-type "none")
  (parameters
    '("PangoAttrList*" "attrs")
  )
)

(define-method get_attributes
  (of-object "GtkText")
  (c-name "gtk_text_get_attributes")
  (return-type "PangoAttrList*")
)

(define-method set_tabs
  (of-object "GtkText")
  (c-name "gtk_text_set_tabs")
  (return-type "none")
  (parameters
    '("PangoTabArray*" "tabs")
  )
)

(define-method get_tabs
  (of-object "GtkText")
  (c-name "gtk_text_get_tabs")
  (return-type "PangoTabArray*")
)

(define-method grab_focus_without_selecting
  (of-object "GtkText")
  (c-name "gtk_text_grab_focus_without_selecting")
  (return-type "gboolean")
)

(define-method set_extra_menu
  (of-object "GtkText")
  (c-name "gtk_text_set_extra_menu")
  (return-type "none")
  (parameters
    '("GMenuModel*" "model")
  )
)

(define-method get_extra_menu
  (of-object "GtkText")
  (c-name "gtk_text_get_extra_menu")
  (return-type "GMenuModel*")
)

(define-method set_enable_emoji_completion
  (of-object "GtkText")
  (c-name "gtk_text_set_enable_emoji_completion")
  (return-type "none")
  (parameters
    '("gboolean" "enable_emoji_completion")
  )
)

(define-method get_enable_emoji_completion
  (of-object "GtkText")
  (c-name "gtk_text_get_enable_emoji_completion")
  (return-type "gboolean")
)

(define-method set_propagate_text_width
  (of-object "GtkText")
  (c-name "gtk_text_set_propagate_text_width")
  (return-type "none")
  (parameters
    '("gboolean" "propagate_text_width")
  )
)

(define-method get_propagate_text_width
  (of-object "GtkText")
  (c-name "gtk_text_get_propagate_text_width")
  (return-type "gboolean")
)

(define-method set_truncate_multiline
  (of-object "GtkText")
  (c-name "gtk_text_set_truncate_multiline")
  (return-type "none")
  (parameters
    '("gboolean" "truncate_multiline")
  )
)

(define-method get_truncate_multiline
  (of-object "GtkText")
  (c-name "gtk_text_get_truncate_multiline")
  (return-type "gboolean")
)



;; From gtktextiter.h

(define-method get_buffer
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_buffer")
  (return-type "GtkTextBuffer*")
)

(define-method copy
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_copy")
  (return-type "GtkTextIter*")
)

(define-method free
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_free")
  (return-type "none")
)

(define-method assign
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_assign")
  (return-type "none")
  (parameters
    '("const-GtkTextIter*" "other")
  )
)

(define-function gtk_text_iter_get_type
  (c-name "gtk_text_iter_get_type")
  (return-type "GType")
)

(define-method get_offset
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_offset")
  (return-type "int")
)

(define-method get_line
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_line")
  (return-type "int")
)

(define-method get_line_offset
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_line_offset")
  (return-type "int")
)

(define-method get_line_index
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_line_index")
  (return-type "int")
)

(define-method get_visible_line_offset
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_visible_line_offset")
  (return-type "int")
)

(define-method get_visible_line_index
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_visible_line_index")
  (return-type "int")
)

(define-method get_char
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_char")
  (return-type "gunichar")
)

(define-method get_slice
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_slice")
  (return-type "char*")
  (parameters
    '("const-GtkTextIter*" "end")
  )
)

(define-method get_text
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_text")
  (return-type "char*")
  (parameters
    '("const-GtkTextIter*" "end")
  )
)

(define-method get_visible_slice
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_visible_slice")
  (return-type "char*")
  (parameters
    '("const-GtkTextIter*" "end")
  )
)

(define-method get_visible_text
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_visible_text")
  (return-type "char*")
  (parameters
    '("const-GtkTextIter*" "end")
  )
)

(define-method get_paintable
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_paintable")
  (return-type "GdkPaintable*")
)

(define-method get_marks
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_marks")
  (return-type "GSList*")
)

(define-method get_child_anchor
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_child_anchor")
  (return-type "GtkTextChildAnchor*")
)

(define-method get_toggled_tags
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_toggled_tags")
  (return-type "GSList*")
  (parameters
    '("gboolean" "toggled_on")
  )
)

(define-method starts_tag
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_starts_tag")
  (return-type "gboolean")
  (parameters
    '("GtkTextTag*" "tag")
  )
)

(define-method ends_tag
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_ends_tag")
  (return-type "gboolean")
  (parameters
    '("GtkTextTag*" "tag")
  )
)

(define-method toggles_tag
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_toggles_tag")
  (return-type "gboolean")
  (parameters
    '("GtkTextTag*" "tag")
  )
)

(define-method has_tag
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_has_tag")
  (return-type "gboolean")
  (parameters
    '("GtkTextTag*" "tag")
  )
)

(define-method get_tags
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_tags")
  (return-type "GSList*")
)

(define-method editable
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_editable")
  (return-type "gboolean")
  (parameters
    '("gboolean" "default_setting")
  )
)

(define-method can_insert
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_can_insert")
  (return-type "gboolean")
  (parameters
    '("gboolean" "default_editability")
  )
)

(define-method starts_word
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_starts_word")
  (return-type "gboolean")
)

(define-method ends_word
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_ends_word")
  (return-type "gboolean")
)

(define-method inside_word
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_inside_word")
  (return-type "gboolean")
)

(define-method starts_sentence
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_starts_sentence")
  (return-type "gboolean")
)

(define-method ends_sentence
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_ends_sentence")
  (return-type "gboolean")
)

(define-method inside_sentence
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_inside_sentence")
  (return-type "gboolean")
)

(define-method starts_line
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_starts_line")
  (return-type "gboolean")
)

(define-method ends_line
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_ends_line")
  (return-type "gboolean")
)

(define-method is_cursor_position
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_is_cursor_position")
  (return-type "gboolean")
)

(define-method get_chars_in_line
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_chars_in_line")
  (return-type "int")
)

(define-method get_bytes_in_line
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_bytes_in_line")
  (return-type "int")
)

(define-method get_language
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_language")
  (return-type "PangoLanguage*")
)

(define-method is_end
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_is_end")
  (return-type "gboolean")
)

(define-method is_start
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_is_start")
  (return-type "gboolean")
)

(define-method forward_char
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_char")
  (return-type "gboolean")
)

(define-method backward_char
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_char")
  (return-type "gboolean")
)

(define-method forward_chars
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_chars")
  (return-type "gboolean")
  (parameters
    '("int" "count")
  )
)

(define-method backward_chars
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_chars")
  (return-type "gboolean")
  (parameters
    '("int" "count")
  )
)

(define-method forward_line
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_line")
  (return-type "gboolean")
)

(define-method backward_line
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_line")
  (return-type "gboolean")
)

(define-method forward_lines
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_lines")
  (return-type "gboolean")
  (parameters
    '("int" "count")
  )
)

(define-method backward_lines
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_lines")
  (return-type "gboolean")
  (parameters
    '("int" "count")
  )
)

(define-method forward_word_end
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_word_end")
  (return-type "gboolean")
)

(define-method backward_word_start
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_word_start")
  (return-type "gboolean")
)

(define-method forward_word_ends
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_word_ends")
  (return-type "gboolean")
  (parameters
    '("int" "count")
  )
)

(define-method backward_word_starts
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_word_starts")
  (return-type "gboolean")
  (parameters
    '("int" "count")
  )
)

(define-method forward_visible_line
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_visible_line")
  (return-type "gboolean")
)

(define-method backward_visible_line
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_visible_line")
  (return-type "gboolean")
)

(define-method forward_visible_lines
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_visible_lines")
  (return-type "gboolean")
  (parameters
    '("int" "count")
  )
)

(define-method backward_visible_lines
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_visible_lines")
  (return-type "gboolean")
  (parameters
    '("int" "count")
  )
)

(define-method forward_visible_word_end
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_visible_word_end")
  (return-type "gboolean")
)

(define-method backward_visible_word_start
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_visible_word_start")
  (return-type "gboolean")
)

(define-method forward_visible_word_ends
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_visible_word_ends")
  (return-type "gboolean")
  (parameters
    '("int" "count")
  )
)

(define-method backward_visible_word_starts
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_visible_word_starts")
  (return-type "gboolean")
  (parameters
    '("int" "count")
  )
)

(define-method forward_sentence_end
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_sentence_end")
  (return-type "gboolean")
)

(define-method backward_sentence_start
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_sentence_start")
  (return-type "gboolean")
)

(define-method forward_sentence_ends
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_sentence_ends")
  (return-type "gboolean")
  (parameters
    '("int" "count")
  )
)

(define-method backward_sentence_starts
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_sentence_starts")
  (return-type "gboolean")
  (parameters
    '("int" "count")
  )
)

(define-method forward_cursor_position
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_cursor_position")
  (return-type "gboolean")
)

(define-method backward_cursor_position
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_cursor_position")
  (return-type "gboolean")
)

(define-method forward_cursor_positions
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_cursor_positions")
  (return-type "gboolean")
  (parameters
    '("int" "count")
  )
)

(define-method backward_cursor_positions
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_cursor_positions")
  (return-type "gboolean")
  (parameters
    '("int" "count")
  )
)

(define-method forward_visible_cursor_position
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_visible_cursor_position")
  (return-type "gboolean")
)

(define-method backward_visible_cursor_position
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_visible_cursor_position")
  (return-type "gboolean")
)

(define-method forward_visible_cursor_positions
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_visible_cursor_positions")
  (return-type "gboolean")
  (parameters
    '("int" "count")
  )
)

(define-method backward_visible_cursor_positions
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_visible_cursor_positions")
  (return-type "gboolean")
  (parameters
    '("int" "count")
  )
)

(define-method set_offset
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_set_offset")
  (return-type "none")
  (parameters
    '("int" "char_offset")
  )
)

(define-method set_line
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_set_line")
  (return-type "none")
  (parameters
    '("int" "line_number")
  )
)

(define-method set_line_offset
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_set_line_offset")
  (return-type "none")
  (parameters
    '("int" "char_on_line")
  )
)

(define-method set_line_index
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_set_line_index")
  (return-type "none")
  (parameters
    '("int" "byte_on_line")
  )
)

(define-method forward_to_end
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_to_end")
  (return-type "none")
)

(define-method forward_to_line_end
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_to_line_end")
  (return-type "gboolean")
)

(define-method set_visible_line_offset
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_set_visible_line_offset")
  (return-type "none")
  (parameters
    '("int" "char_on_line")
  )
)

(define-method set_visible_line_index
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_set_visible_line_index")
  (return-type "none")
  (parameters
    '("int" "byte_on_line")
  )
)

(define-method forward_to_tag_toggle
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_to_tag_toggle")
  (return-type "gboolean")
  (parameters
    '("GtkTextTag*" "tag")
  )
)

(define-method backward_to_tag_toggle
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_to_tag_toggle")
  (return-type "gboolean")
  (parameters
    '("GtkTextTag*" "tag")
  )
)

(define-method forward_find_char
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_find_char")
  (return-type "gboolean")
  (parameters
    '("GtkTextCharPredicate" "pred")
    '("gpointer" "user_data")
    '("const-GtkTextIter*" "limit")
  )
)

(define-method backward_find_char
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_find_char")
  (return-type "gboolean")
  (parameters
    '("GtkTextCharPredicate" "pred")
    '("gpointer" "user_data")
    '("const-GtkTextIter*" "limit")
  )
)

(define-method forward_search
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_search")
  (return-type "gboolean")
  (parameters
    '("const-char*" "str")
    '("GtkTextSearchFlags" "flags")
    '("GtkTextIter*" "match_start")
    '("GtkTextIter*" "match_end")
    '("const-GtkTextIter*" "limit")
  )
)

(define-method backward_search
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_search")
  (return-type "gboolean")
  (parameters
    '("const-char*" "str")
    '("GtkTextSearchFlags" "flags")
    '("GtkTextIter*" "match_start")
    '("GtkTextIter*" "match_end")
    '("const-GtkTextIter*" "limit")
  )
)

(define-method equal
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_equal")
  (return-type "gboolean")
  (parameters
    '("const-GtkTextIter*" "rhs")
  )
)

(define-method compare
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_compare")
  (return-type "int")
  (parameters
    '("const-GtkTextIter*" "rhs")
  )
)

(define-method in_range
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_in_range")
  (return-type "gboolean")
  (parameters
    '("const-GtkTextIter*" "start")
    '("const-GtkTextIter*" "end")
  )
)

(define-method order
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_order")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "second")
  )
)



;; From gtktextmark.h

(define-function gtk_text_mark_get_type
  (c-name "gtk_text_mark_get_type")
  (return-type "GType")
)

(define-function gtk_text_mark_new
  (c-name "gtk_text_mark_new")
  (is-constructor-of "GtkTextMark")
  (return-type "GtkTextMark*")
  (parameters
    '("const-char*" "name")
    '("gboolean" "left_gravity")
  )
)

(define-method set_visible
  (of-object "GtkTextMark")
  (c-name "gtk_text_mark_set_visible")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_visible
  (of-object "GtkTextMark")
  (c-name "gtk_text_mark_get_visible")
  (return-type "gboolean")
)

(define-method get_name
  (of-object "GtkTextMark")
  (c-name "gtk_text_mark_get_name")
  (return-type "const-char*")
)

(define-method get_deleted
  (of-object "GtkTextMark")
  (c-name "gtk_text_mark_get_deleted")
  (return-type "gboolean")
)

(define-method get_buffer
  (of-object "GtkTextMark")
  (c-name "gtk_text_mark_get_buffer")
  (return-type "GtkTextBuffer*")
)

(define-method get_left_gravity
  (of-object "GtkTextMark")
  (c-name "gtk_text_mark_get_left_gravity")
  (return-type "gboolean")
)



;; From gtktextsegment.h

(define-function gtk_text_line_segment_split
  (c-name "gtk_text_line_segment_split")
  (return-type "GtkTextLineSegment*")
  (parameters
    '("const-GtkTextIter*" "iter")
  )
)



;; From gtktexttag.h

(define-function gtk_text_tag_get_type
  (c-name "gtk_text_tag_get_type")
  (return-type "GType")
)

(define-function gtk_text_tag_new
  (c-name "gtk_text_tag_new")
  (is-constructor-of "GtkTextTag")
  (return-type "GtkTextTag*")
  (parameters
    '("const-char*" "name")
  )
)

(define-method get_priority
  (of-object "GtkTextTag")
  (c-name "gtk_text_tag_get_priority")
  (return-type "int")
)

(define-method set_priority
  (of-object "GtkTextTag")
  (c-name "gtk_text_tag_set_priority")
  (return-type "none")
  (parameters
    '("int" "priority")
  )
)

(define-method changed
  (of-object "GtkTextTag")
  (c-name "gtk_text_tag_changed")
  (return-type "none")
  (parameters
    '("gboolean" "size_changed")
  )
)



;; From gtktexttagtable.h

(define-function gtk_text_tag_table_get_type
  (c-name "gtk_text_tag_table_get_type")
  (return-type "GType")
)

(define-function gtk_text_tag_table_new
  (c-name "gtk_text_tag_table_new")
  (is-constructor-of "GtkTextTagTable")
  (return-type "GtkTextTagTable*")
)

(define-method add
  (of-object "GtkTextTagTable")
  (c-name "gtk_text_tag_table_add")
  (return-type "gboolean")
  (parameters
    '("GtkTextTag*" "tag")
  )
)

(define-method remove
  (of-object "GtkTextTagTable")
  (c-name "gtk_text_tag_table_remove")
  (return-type "none")
  (parameters
    '("GtkTextTag*" "tag")
  )
)

(define-method lookup
  (of-object "GtkTextTagTable")
  (c-name "gtk_text_tag_table_lookup")
  (return-type "GtkTextTag*")
  (parameters
    '("const-char*" "name")
  )
)

(define-method foreach
  (of-object "GtkTextTagTable")
  (c-name "gtk_text_tag_table_foreach")
  (return-type "none")
  (parameters
    '("GtkTextTagTableForeach" "func")
    '("gpointer" "data")
  )
)

(define-method get_size
  (of-object "GtkTextTagTable")
  (c-name "gtk_text_tag_table_get_size")
  (return-type "int")
)



;; From gtktexttypes.h

(define-function gtk_text_unknown_char_utf8_gtk_tests_only
  (c-name "gtk_text_unknown_char_utf8_gtk_tests_only")
  (return-type "const-char*")
)

(define-function gtk_text_byte_begins_utf8_char
  (c-name "gtk_text_byte_begins_utf8_char")
  (return-type "gboolean")
  (parameters
    '("const-char*" "byte")
  )
)



;; From gtktextutil.h

(define-function gtk_text_util_create_drag_icon
  (c-name "gtk_text_util_create_drag_icon")
  (return-type "GdkPaintable*")
  (parameters
    '("GtkWidget*" "widget")
    '("char*" "text")
    '("gssize" "len")
  )
)

(define-function gtk_text_util_create_rich_drag_icon
  (c-name "gtk_text_util_create_rich_drag_icon")
  (return-type "GdkPaintable*")
  (parameters
    '("GtkWidget*" "widget")
    '("GtkTextBuffer*" "buffer")
    '("GtkTextIter*" "start")
    '("GtkTextIter*" "end")
  )
)



;; From gtktextview.h

(define-function gtk_text_view_get_type
  (c-name "gtk_text_view_get_type")
  (return-type "GType")
)

(define-function gtk_text_view_new
  (c-name "gtk_text_view_new")
  (is-constructor-of "GtkTextView")
  (return-type "GtkWidget*")
)

(define-function gtk_text_view_new_with_buffer
  (c-name "gtk_text_view_new_with_buffer")
  (return-type "GtkWidget*")
  (parameters
    '("GtkTextBuffer*" "buffer")
  )
)

(define-method set_buffer
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_buffer")
  (return-type "none")
  (parameters
    '("GtkTextBuffer*" "buffer")
  )
)

(define-method get_buffer
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_buffer")
  (return-type "GtkTextBuffer*")
)

(define-method scroll_to_iter
  (of-object "GtkTextView")
  (c-name "gtk_text_view_scroll_to_iter")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
    '("double" "within_margin")
    '("gboolean" "use_align")
    '("double" "xalign")
    '("double" "yalign")
  )
)

(define-method scroll_to_mark
  (of-object "GtkTextView")
  (c-name "gtk_text_view_scroll_to_mark")
  (return-type "none")
  (parameters
    '("GtkTextMark*" "mark")
    '("double" "within_margin")
    '("gboolean" "use_align")
    '("double" "xalign")
    '("double" "yalign")
  )
)

(define-method scroll_mark_onscreen
  (of-object "GtkTextView")
  (c-name "gtk_text_view_scroll_mark_onscreen")
  (return-type "none")
  (parameters
    '("GtkTextMark*" "mark")
  )
)

(define-method move_mark_onscreen
  (of-object "GtkTextView")
  (c-name "gtk_text_view_move_mark_onscreen")
  (return-type "gboolean")
  (parameters
    '("GtkTextMark*" "mark")
  )
)

(define-method place_cursor_onscreen
  (of-object "GtkTextView")
  (c-name "gtk_text_view_place_cursor_onscreen")
  (return-type "gboolean")
)

(define-method get_visible_rect
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_visible_rect")
  (return-type "none")
  (parameters
    '("GdkRectangle*" "visible_rect")
  )
)

(define-method set_cursor_visible
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_cursor_visible")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_cursor_visible
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_cursor_visible")
  (return-type "gboolean")
)

(define-method reset_cursor_blink
  (of-object "GtkTextView")
  (c-name "gtk_text_view_reset_cursor_blink")
  (return-type "none")
)

(define-method get_cursor_locations
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_cursor_locations")
  (return-type "none")
  (parameters
    '("const-GtkTextIter*" "iter")
    '("GdkRectangle*" "strong")
    '("GdkRectangle*" "weak")
  )
)

(define-method get_iter_location
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_iter_location")
  (return-type "none")
  (parameters
    '("const-GtkTextIter*" "iter")
    '("GdkRectangle*" "location")
  )
)

(define-method get_iter_at_location
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_iter_at_location")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
    '("int" "x")
    '("int" "y")
  )
)

(define-method get_iter_at_position
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_iter_at_position")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
    '("int*" "trailing")
    '("int" "x")
    '("int" "y")
  )
)

(define-method get_line_yrange
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_line_yrange")
  (return-type "none")
  (parameters
    '("const-GtkTextIter*" "iter")
    '("int*" "y")
    '("int*" "height")
  )
)

(define-method get_line_at_y
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_line_at_y")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "target_iter")
    '("int" "y")
    '("int*" "line_top")
  )
)

(define-method buffer_to_window_coords
  (of-object "GtkTextView")
  (c-name "gtk_text_view_buffer_to_window_coords")
  (return-type "none")
  (parameters
    '("GtkTextWindowType" "win")
    '("int" "buffer_x")
    '("int" "buffer_y")
    '("int*" "window_x")
    '("int*" "window_y")
  )
)

(define-method window_to_buffer_coords
  (of-object "GtkTextView")
  (c-name "gtk_text_view_window_to_buffer_coords")
  (return-type "none")
  (parameters
    '("GtkTextWindowType" "win")
    '("int" "window_x")
    '("int" "window_y")
    '("int*" "buffer_x")
    '("int*" "buffer_y")
  )
)

(define-method forward_display_line
  (of-object "GtkTextView")
  (c-name "gtk_text_view_forward_display_line")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
  )
)

(define-method backward_display_line
  (of-object "GtkTextView")
  (c-name "gtk_text_view_backward_display_line")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
  )
)

(define-method forward_display_line_end
  (of-object "GtkTextView")
  (c-name "gtk_text_view_forward_display_line_end")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
  )
)

(define-method backward_display_line_start
  (of-object "GtkTextView")
  (c-name "gtk_text_view_backward_display_line_start")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
  )
)

(define-method starts_display_line
  (of-object "GtkTextView")
  (c-name "gtk_text_view_starts_display_line")
  (return-type "gboolean")
  (parameters
    '("const-GtkTextIter*" "iter")
  )
)

(define-method move_visually
  (of-object "GtkTextView")
  (c-name "gtk_text_view_move_visually")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
    '("int" "count")
  )
)

(define-method im_context_filter_keypress
  (of-object "GtkTextView")
  (c-name "gtk_text_view_im_context_filter_keypress")
  (return-type "gboolean")
  (parameters
    '("GdkEvent*" "event")
  )
)

(define-method reset_im_context
  (of-object "GtkTextView")
  (c-name "gtk_text_view_reset_im_context")
  (return-type "none")
)

(define-method get_gutter
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_gutter")
  (return-type "GtkWidget*")
  (parameters
    '("GtkTextWindowType" "win")
  )
)

(define-method set_gutter
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_gutter")
  (return-type "none")
  (parameters
    '("GtkTextWindowType" "win")
    '("GtkWidget*" "widget")
  )
)

(define-method add_child_at_anchor
  (of-object "GtkTextView")
  (c-name "gtk_text_view_add_child_at_anchor")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("GtkTextChildAnchor*" "anchor")
  )
)

(define-method add_overlay
  (of-object "GtkTextView")
  (c-name "gtk_text_view_add_overlay")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("int" "xpos")
    '("int" "ypos")
  )
)

(define-method move_overlay
  (of-object "GtkTextView")
  (c-name "gtk_text_view_move_overlay")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("int" "xpos")
    '("int" "ypos")
  )
)

(define-method remove
  (of-object "GtkTextView")
  (c-name "gtk_text_view_remove")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method set_wrap_mode
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_wrap_mode")
  (return-type "none")
  (parameters
    '("GtkWrapMode" "wrap_mode")
  )
)

(define-method get_wrap_mode
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_wrap_mode")
  (return-type "GtkWrapMode")
)

(define-method set_editable
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_editable")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_editable
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_editable")
  (return-type "gboolean")
)

(define-method set_overwrite
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_overwrite")
  (return-type "none")
  (parameters
    '("gboolean" "overwrite")
  )
)

(define-method get_overwrite
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_overwrite")
  (return-type "gboolean")
)

(define-method set_accepts_tab
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_accepts_tab")
  (return-type "none")
  (parameters
    '("gboolean" "accepts_tab")
  )
)

(define-method get_accepts_tab
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_accepts_tab")
  (return-type "gboolean")
)

(define-method set_pixels_above_lines
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_pixels_above_lines")
  (return-type "none")
  (parameters
    '("int" "pixels_above_lines")
  )
)

(define-method get_pixels_above_lines
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_pixels_above_lines")
  (return-type "int")
)

(define-method set_pixels_below_lines
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_pixels_below_lines")
  (return-type "none")
  (parameters
    '("int" "pixels_below_lines")
  )
)

(define-method get_pixels_below_lines
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_pixels_below_lines")
  (return-type "int")
)

(define-method set_pixels_inside_wrap
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_pixels_inside_wrap")
  (return-type "none")
  (parameters
    '("int" "pixels_inside_wrap")
  )
)

(define-method get_pixels_inside_wrap
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_pixels_inside_wrap")
  (return-type "int")
)

(define-method set_justification
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_justification")
  (return-type "none")
  (parameters
    '("GtkJustification" "justification")
  )
)

(define-method get_justification
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_justification")
  (return-type "GtkJustification")
)

(define-method set_left_margin
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_left_margin")
  (return-type "none")
  (parameters
    '("int" "left_margin")
  )
)

(define-method get_left_margin
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_left_margin")
  (return-type "int")
)

(define-method set_right_margin
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_right_margin")
  (return-type "none")
  (parameters
    '("int" "right_margin")
  )
)

(define-method get_right_margin
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_right_margin")
  (return-type "int")
)

(define-method set_top_margin
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_top_margin")
  (return-type "none")
  (parameters
    '("int" "top_margin")
  )
)

(define-method get_top_margin
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_top_margin")
  (return-type "int")
)

(define-method set_bottom_margin
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_bottom_margin")
  (return-type "none")
  (parameters
    '("int" "bottom_margin")
  )
)

(define-method get_bottom_margin
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_bottom_margin")
  (return-type "int")
)

(define-method set_indent
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_indent")
  (return-type "none")
  (parameters
    '("int" "indent")
  )
)

(define-method get_indent
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_indent")
  (return-type "int")
)

(define-method set_tabs
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_tabs")
  (return-type "none")
  (parameters
    '("PangoTabArray*" "tabs")
  )
)

(define-method get_tabs
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_tabs")
  (return-type "PangoTabArray*")
)

(define-method set_input_purpose
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_input_purpose")
  (return-type "none")
  (parameters
    '("GtkInputPurpose" "purpose")
  )
)

(define-method get_input_purpose
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_input_purpose")
  (return-type "GtkInputPurpose")
)

(define-method set_input_hints
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_input_hints")
  (return-type "none")
  (parameters
    '("GtkInputHints" "hints")
  )
)

(define-method get_input_hints
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_input_hints")
  (return-type "GtkInputHints")
)

(define-method set_monospace
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_monospace")
  (return-type "none")
  (parameters
    '("gboolean" "monospace")
  )
)

(define-method get_monospace
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_monospace")
  (return-type "gboolean")
)

(define-method set_extra_menu
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_extra_menu")
  (return-type "none")
  (parameters
    '("GMenuModel*" "model")
  )
)

(define-method get_extra_menu
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_extra_menu")
  (return-type "GMenuModel*")
)



;; From gtktogglebutton.h

(define-function gtk_toggle_button_get_type
  (c-name "gtk_toggle_button_get_type")
  (return-type "GType")
)

(define-function gtk_toggle_button_new
  (c-name "gtk_toggle_button_new")
  (is-constructor-of "GtkToggleButton")
  (return-type "GtkWidget*")
)

(define-function gtk_toggle_button_new_with_label
  (c-name "gtk_toggle_button_new_with_label")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "label")
  )
)

(define-function gtk_toggle_button_new_with_mnemonic
  (c-name "gtk_toggle_button_new_with_mnemonic")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "label")
  )
)

(define-method set_active
  (of-object "GtkToggleButton")
  (c-name "gtk_toggle_button_set_active")
  (return-type "none")
  (parameters
    '("gboolean" "is_active")
  )
)

(define-method get_active
  (of-object "GtkToggleButton")
  (c-name "gtk_toggle_button_get_active")
  (return-type "gboolean")
)

(define-method toggled
  (of-object "GtkToggleButton")
  (c-name "gtk_toggle_button_toggled")
  (return-type "none")
)

(define-method set_group
  (of-object "GtkToggleButton")
  (c-name "gtk_toggle_button_set_group")
  (return-type "none")
  (parameters
    '("GtkToggleButton*" "group")
  )
)



;; From gtktooltip.h

(define-function gtk_tooltip_get_type
  (c-name "gtk_tooltip_get_type")
  (return-type "GType")
)

(define-method set_markup
  (of-object "GtkTooltip")
  (c-name "gtk_tooltip_set_markup")
  (return-type "none")
  (parameters
    '("const-char*" "markup")
  )
)

(define-method set_text
  (of-object "GtkTooltip")
  (c-name "gtk_tooltip_set_text")
  (return-type "none")
  (parameters
    '("const-char*" "text")
  )
)

(define-method set_icon
  (of-object "GtkTooltip")
  (c-name "gtk_tooltip_set_icon")
  (return-type "none")
  (parameters
    '("GdkPaintable*" "paintable")
  )
)

(define-method set_icon_from_icon_name
  (of-object "GtkTooltip")
  (c-name "gtk_tooltip_set_icon_from_icon_name")
  (return-type "none")
  (parameters
    '("const-char*" "icon_name")
  )
)

(define-method set_icon_from_gicon
  (of-object "GtkTooltip")
  (c-name "gtk_tooltip_set_icon_from_gicon")
  (return-type "none")
  (parameters
    '("GIcon*" "gicon")
  )
)

(define-method set_custom
  (of-object "GtkTooltip")
  (c-name "gtk_tooltip_set_custom")
  (return-type "none")
  (parameters
    '("GtkWidget*" "custom_widget")
  )
)

(define-method set_tip_area
  (of-object "GtkTooltip")
  (c-name "gtk_tooltip_set_tip_area")
  (return-type "none")
  (parameters
    '("const-GdkRectangle*" "rect")
  )
)



;; From gtktrashmonitor.h



;; From gtktreedatalist.h



;; From gtktreednd.h

(define-function gtk_tree_row_data_get_type
  (c-name "gtk_tree_row_data_get_type")
  (return-type "GType")
)

(define-function gtk_tree_drag_source_get_type
  (c-name "gtk_tree_drag_source_get_type")
  (return-type "GType")
)

(define-method row_draggable
  (of-object "GtkTreeDragSource")
  (c-name "gtk_tree_drag_source_row_draggable")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-method drag_data_delete
  (of-object "GtkTreeDragSource")
  (c-name "gtk_tree_drag_source_drag_data_delete")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-method drag_data_get
  (of-object "GtkTreeDragSource")
  (c-name "gtk_tree_drag_source_drag_data_get")
  (return-type "GdkContentProvider*")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-function gtk_tree_drag_dest_get_type
  (c-name "gtk_tree_drag_dest_get_type")
  (return-type "GType")
)

(define-method drag_data_received
  (of-object "GtkTreeDragDest")
  (c-name "gtk_tree_drag_dest_drag_data_received")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "dest")
    '("const-GValue*" "value")
  )
)

(define-method row_drop_possible
  (of-object "GtkTreeDragDest")
  (c-name "gtk_tree_drag_dest_row_drop_possible")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "dest_path")
    '("const-GValue*" "value")
  )
)

(define-function gtk_tree_create_row_drag_content
  (c-name "gtk_tree_create_row_drag_content")
  (return-type "GdkContentProvider*")
  (parameters
    '("GtkTreeModel*" "tree_model")
    '("GtkTreePath*" "path")
  )
)

(define-function gtk_tree_get_row_drag_data
  (c-name "gtk_tree_get_row_drag_data")
  (return-type "gboolean")
  (parameters
    '("const-GValue*" "value")
    '("GtkTreeModel**" "tree_model")
    '("GtkTreePath**" "path")
  )
)



;; From gtktreeexpander.h

(define-function gtk_tree_expander_new
  (c-name "gtk_tree_expander_new")
  (is-constructor-of "GtkTreeExpander")
  (return-type "GtkWidget*")
)

(define-method get_child
  (of-object "GtkTreeExpander")
  (c-name "gtk_tree_expander_get_child")
  (return-type "GtkWidget*")
)

(define-method set_child
  (of-object "GtkTreeExpander")
  (c-name "gtk_tree_expander_set_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_item
  (of-object "GtkTreeExpander")
  (c-name "gtk_tree_expander_get_item")
  (return-type "gpointer")
)

(define-method get_list_row
  (of-object "GtkTreeExpander")
  (c-name "gtk_tree_expander_get_list_row")
  (return-type "GtkTreeListRow*")
)

(define-method set_list_row
  (of-object "GtkTreeExpander")
  (c-name "gtk_tree_expander_set_list_row")
  (return-type "none")
  (parameters
    '("GtkTreeListRow*" "list_row")
  )
)



;; From gtktreelistmodel.h

(define-function gtk_tree_list_model_new
  (c-name "gtk_tree_list_model_new")
  (is-constructor-of "GtkTreeListModel")
  (return-type "GtkTreeListModel*")
  (parameters
    '("GListModel*" "root")
    '("gboolean" "passthrough")
    '("gboolean" "autoexpand")
    '("GtkTreeListModelCreateModelFunc" "create_func")
    '("gpointer" "user_data")
    '("GDestroyNotify" "user_destroy")
  )
)

(define-method get_model
  (of-object "GtkTreeListModel")
  (c-name "gtk_tree_list_model_get_model")
  (return-type "GListModel*")
)

(define-method get_passthrough
  (of-object "GtkTreeListModel")
  (c-name "gtk_tree_list_model_get_passthrough")
  (return-type "gboolean")
)

(define-method set_autoexpand
  (of-object "GtkTreeListModel")
  (c-name "gtk_tree_list_model_set_autoexpand")
  (return-type "none")
  (parameters
    '("gboolean" "autoexpand")
  )
)

(define-method get_autoexpand
  (of-object "GtkTreeListModel")
  (c-name "gtk_tree_list_model_get_autoexpand")
  (return-type "gboolean")
)

(define-method get_child_row
  (of-object "GtkTreeListModel")
  (c-name "gtk_tree_list_model_get_child_row")
  (return-type "GtkTreeListRow*")
  (parameters
    '("guint" "position")
  )
)

(define-method get_row
  (of-object "GtkTreeListModel")
  (c-name "gtk_tree_list_model_get_row")
  (return-type "GtkTreeListRow*")
  (parameters
    '("guint" "position")
  )
)

(define-method get_item
  (of-object "GtkTreeListRow")
  (c-name "gtk_tree_list_row_get_item")
  (return-type "gpointer")
)

(define-method set_expanded
  (of-object "GtkTreeListRow")
  (c-name "gtk_tree_list_row_set_expanded")
  (return-type "none")
  (parameters
    '("gboolean" "expanded")
  )
)

(define-method get_expanded
  (of-object "GtkTreeListRow")
  (c-name "gtk_tree_list_row_get_expanded")
  (return-type "gboolean")
)

(define-method is_expandable
  (of-object "GtkTreeListRow")
  (c-name "gtk_tree_list_row_is_expandable")
  (return-type "gboolean")
)

(define-method get_position
  (of-object "GtkTreeListRow")
  (c-name "gtk_tree_list_row_get_position")
  (return-type "guint")
)

(define-method get_depth
  (of-object "GtkTreeListRow")
  (c-name "gtk_tree_list_row_get_depth")
  (return-type "guint")
)

(define-method get_children
  (of-object "GtkTreeListRow")
  (c-name "gtk_tree_list_row_get_children")
  (return-type "GListModel*")
)

(define-method get_parent
  (of-object "GtkTreeListRow")
  (c-name "gtk_tree_list_row_get_parent")
  (return-type "GtkTreeListRow*")
)

(define-method get_child_row
  (of-object "GtkTreeListRow")
  (c-name "gtk_tree_list_row_get_child_row")
  (return-type "GtkTreeListRow*")
  (parameters
    '("guint" "position")
  )
)



;; From gtktreelistrowsorter.h

(define-function gtk_tree_list_row_sorter_new
  (c-name "gtk_tree_list_row_sorter_new")
  (is-constructor-of "GtkTreeListRowSorter")
  (return-type "GtkTreeListRowSorter*")
  (parameters
    '("GtkSorter*" "sorter")
  )
)

(define-method get_sorter
  (of-object "GtkTreeListRowSorter")
  (c-name "gtk_tree_list_row_sorter_get_sorter")
  (return-type "GtkSorter*")
)

(define-method set_sorter
  (of-object "GtkTreeListRowSorter")
  (c-name "gtk_tree_list_row_sorter_set_sorter")
  (return-type "none")
  (parameters
    '("GtkSorter*" "sorter")
  )
)



;; From gtktreemodelfilter.h

(define-function gtk_tree_model_filter_get_type
  (c-name "gtk_tree_model_filter_get_type")
  (return-type "GType")
)

(define-method filter_new
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_filter_new")
  (return-type "GtkTreeModel*")
  (parameters
    '("GtkTreePath*" "root")
  )
)

(define-method set_visible_func
  (of-object "GtkTreeModelFilter")
  (c-name "gtk_tree_model_filter_set_visible_func")
  (return-type "none")
  (parameters
    '("GtkTreeModelFilterVisibleFunc" "func")
    '("gpointer" "data")
    '("GDestroyNotify" "destroy")
  )
)

(define-method set_modify_func
  (of-object "GtkTreeModelFilter")
  (c-name "gtk_tree_model_filter_set_modify_func")
  (return-type "none")
  (parameters
    '("int" "n_columns")
    '("GType*" "types")
    '("GtkTreeModelFilterModifyFunc" "func")
    '("gpointer" "data")
    '("GDestroyNotify" "destroy")
  )
)

(define-method set_visible_column
  (of-object "GtkTreeModelFilter")
  (c-name "gtk_tree_model_filter_set_visible_column")
  (return-type "none")
  (parameters
    '("int" "column")
  )
)

(define-method get_model
  (of-object "GtkTreeModelFilter")
  (c-name "gtk_tree_model_filter_get_model")
  (return-type "GtkTreeModel*")
)

(define-method convert_child_iter_to_iter
  (of-object "GtkTreeModelFilter")
  (c-name "gtk_tree_model_filter_convert_child_iter_to_iter")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "filter_iter")
    '("GtkTreeIter*" "child_iter")
  )
)

(define-method convert_iter_to_child_iter
  (of-object "GtkTreeModelFilter")
  (c-name "gtk_tree_model_filter_convert_iter_to_child_iter")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "child_iter")
    '("GtkTreeIter*" "filter_iter")
  )
)

(define-method convert_child_path_to_path
  (of-object "GtkTreeModelFilter")
  (c-name "gtk_tree_model_filter_convert_child_path_to_path")
  (return-type "GtkTreePath*")
  (parameters
    '("GtkTreePath*" "child_path")
  )
)

(define-method convert_path_to_child_path
  (of-object "GtkTreeModelFilter")
  (c-name "gtk_tree_model_filter_convert_path_to_child_path")
  (return-type "GtkTreePath*")
  (parameters
    '("GtkTreePath*" "filter_path")
  )
)

(define-method refilter
  (of-object "GtkTreeModelFilter")
  (c-name "gtk_tree_model_filter_refilter")
  (return-type "none")
)

(define-method clear_cache
  (of-object "GtkTreeModelFilter")
  (c-name "gtk_tree_model_filter_clear_cache")
  (return-type "none")
)



;; From gtktreemodel.h

(define-function gtk_tree_path_new
  (c-name "gtk_tree_path_new")
  (is-constructor-of "GtkTreePath")
  (return-type "GtkTreePath*")
)

(define-function gtk_tree_path_new_from_string
  (c-name "gtk_tree_path_new_from_string")
  (return-type "GtkTreePath*")
  (parameters
    '("const-char*" "path")
  )
)

(define-function gtk_tree_path_new_from_indices
  (c-name "gtk_tree_path_new_from_indices")
  (return-type "GtkTreePath*")
  (parameters
    '("int" "first_index")
  )
  (varargs #t)
)

(define-function gtk_tree_path_new_from_indicesv
  (c-name "gtk_tree_path_new_from_indicesv")
  (return-type "GtkTreePath*")
  (parameters
    '("int*" "indices")
    '("gsize" "length")
  )
)

(define-method to_string
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_to_string")
  (return-type "char*")
)

(define-function gtk_tree_path_new_first
  (c-name "gtk_tree_path_new_first")
  (return-type "GtkTreePath*")
)

(define-method append_index
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_append_index")
  (return-type "none")
  (parameters
    '("int" "index_")
  )
)

(define-method prepend_index
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_prepend_index")
  (return-type "none")
  (parameters
    '("int" "index_")
  )
)

(define-method get_depth
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_get_depth")
  (return-type "int")
)

(define-method get_indices
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_get_indices")
  (return-type "int*")
)

(define-method get_indices_with_depth
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_get_indices_with_depth")
  (return-type "int*")
  (parameters
    '("int*" "depth")
  )
)

(define-method free
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_free")
  (return-type "none")
)

(define-method copy
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_copy")
  (return-type "GtkTreePath*")
)

(define-function gtk_tree_path_get_type
  (c-name "gtk_tree_path_get_type")
  (return-type "GType")
)

(define-method compare
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_compare")
  (return-type "int")
  (parameters
    '("const-GtkTreePath*" "b")
  )
)

(define-method next
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_next")
  (return-type "none")
)

(define-method prev
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_prev")
  (return-type "gboolean")
)

(define-method up
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_up")
  (return-type "gboolean")
)

(define-method down
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_down")
  (return-type "none")
)

(define-method is_ancestor
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_is_ancestor")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "descendant")
  )
)

(define-method is_descendant
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_is_descendant")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "ancestor")
  )
)

(define-function gtk_tree_row_reference_get_type
  (c-name "gtk_tree_row_reference_get_type")
  (return-type "GType")
)

(define-function gtk_tree_row_reference_new
  (c-name "gtk_tree_row_reference_new")
  (is-constructor-of "GtkTreeRowReference")
  (return-type "GtkTreeRowReference*")
  (parameters
    '("GtkTreeModel*" "model")
    '("GtkTreePath*" "path")
  )
)

(define-function gtk_tree_row_reference_new_proxy
  (c-name "gtk_tree_row_reference_new_proxy")
  (return-type "GtkTreeRowReference*")
  (parameters
    '("GObject*" "proxy")
    '("GtkTreeModel*" "model")
    '("GtkTreePath*" "path")
  )
)

(define-method get_path
  (of-object "GtkTreeRowReference")
  (c-name "gtk_tree_row_reference_get_path")
  (return-type "GtkTreePath*")
)

(define-method get_model
  (of-object "GtkTreeRowReference")
  (c-name "gtk_tree_row_reference_get_model")
  (return-type "GtkTreeModel*")
)

(define-method valid
  (of-object "GtkTreeRowReference")
  (c-name "gtk_tree_row_reference_valid")
  (return-type "gboolean")
)

(define-method copy
  (of-object "GtkTreeRowReference")
  (c-name "gtk_tree_row_reference_copy")
  (return-type "GtkTreeRowReference*")
)

(define-method free
  (of-object "GtkTreeRowReference")
  (c-name "gtk_tree_row_reference_free")
  (return-type "none")
)

(define-function gtk_tree_row_reference_inserted
  (c-name "gtk_tree_row_reference_inserted")
  (return-type "none")
  (parameters
    '("GObject*" "proxy")
    '("GtkTreePath*" "path")
  )
)

(define-function gtk_tree_row_reference_deleted
  (c-name "gtk_tree_row_reference_deleted")
  (return-type "none")
  (parameters
    '("GObject*" "proxy")
    '("GtkTreePath*" "path")
  )
)

(define-function gtk_tree_row_reference_reordered
  (c-name "gtk_tree_row_reference_reordered")
  (return-type "none")
  (parameters
    '("GObject*" "proxy")
    '("GtkTreePath*" "path")
    '("GtkTreeIter*" "iter")
    '("int*" "new_order")
  )
)

(define-method copy
  (of-object "GtkTreeIter")
  (c-name "gtk_tree_iter_copy")
  (return-type "GtkTreeIter*")
)

(define-method free
  (of-object "GtkTreeIter")
  (c-name "gtk_tree_iter_free")
  (return-type "none")
)

(define-function gtk_tree_iter_get_type
  (c-name "gtk_tree_iter_get_type")
  (return-type "GType")
)

(define-function gtk_tree_model_get_type
  (c-name "gtk_tree_model_get_type")
  (return-type "GType")
)

(define-method get_flags
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get_flags")
  (return-type "GtkTreeModelFlags")
)

(define-method get_n_columns
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get_n_columns")
  (return-type "int")
)

(define-method get_column_type
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get_column_type")
  (return-type "GType")
  (parameters
    '("int" "index_")
  )
)

(define-method get_iter
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get_iter")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreePath*" "path")
  )
)

(define-method get_iter_from_string
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get_iter_from_string")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
    '("const-char*" "path_string")
  )
)

(define-method get_string_from_iter
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get_string_from_iter")
  (return-type "char*")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method get_iter_first
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get_iter_first")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method get_path
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get_path")
  (return-type "GtkTreePath*")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method get_value
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get_value")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("int" "column")
    '("GValue*" "value")
  )
)

(define-method iter_previous
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_iter_previous")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method iter_next
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_iter_next")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method iter_children
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_iter_children")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "parent")
  )
)

(define-method iter_has_child
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_iter_has_child")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method iter_n_children
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_iter_n_children")
  (return-type "int")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method iter_nth_child
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_iter_nth_child")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "parent")
    '("int" "n")
  )
)

(define-method iter_parent
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_iter_parent")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "child")
  )
)

(define-method ref_node
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_ref_node")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method unref_node
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_unref_node")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method get
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
  )
  (varargs #t)
)

(define-method get_valist
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get_valist")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("va_list" "var_args")
  )
)

(define-method foreach
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_foreach")
  (return-type "none")
  (parameters
    '("GtkTreeModelForeachFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-method row_changed
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_row_changed")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkTreeIter*" "iter")
  )
)

(define-method row_inserted
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_row_inserted")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkTreeIter*" "iter")
  )
)

(define-method row_has_child_toggled
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_row_has_child_toggled")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkTreeIter*" "iter")
  )
)

(define-method row_deleted
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_row_deleted")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-method rows_reordered
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_rows_reordered")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkTreeIter*" "iter")
    '("int*" "new_order")
  )
)

(define-method rows_reordered_with_length
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_rows_reordered_with_length")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkTreeIter*" "iter")
    '("int*" "new_order")
    '("int" "length")
  )
)



;; From gtktreemodelsort.h

(define-function gtk_tree_model_sort_get_type
  (c-name "gtk_tree_model_sort_get_type")
  (return-type "GType")
)

(define-method sort_new_with_model
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_sort_new_with_model")
  (return-type "GtkTreeModel*")
)

(define-method get_model
  (of-object "GtkTreeModelSort")
  (c-name "gtk_tree_model_sort_get_model")
  (return-type "GtkTreeModel*")
)

(define-method convert_child_path_to_path
  (of-object "GtkTreeModelSort")
  (c-name "gtk_tree_model_sort_convert_child_path_to_path")
  (return-type "GtkTreePath*")
  (parameters
    '("GtkTreePath*" "child_path")
  )
)

(define-method convert_child_iter_to_iter
  (of-object "GtkTreeModelSort")
  (c-name "gtk_tree_model_sort_convert_child_iter_to_iter")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "sort_iter")
    '("GtkTreeIter*" "child_iter")
  )
)

(define-method convert_path_to_child_path
  (of-object "GtkTreeModelSort")
  (c-name "gtk_tree_model_sort_convert_path_to_child_path")
  (return-type "GtkTreePath*")
  (parameters
    '("GtkTreePath*" "sorted_path")
  )
)

(define-method convert_iter_to_child_iter
  (of-object "GtkTreeModelSort")
  (c-name "gtk_tree_model_sort_convert_iter_to_child_iter")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "child_iter")
    '("GtkTreeIter*" "sorted_iter")
  )
)

(define-method reset_default_sort_func
  (of-object "GtkTreeModelSort")
  (c-name "gtk_tree_model_sort_reset_default_sort_func")
  (return-type "none")
)

(define-method clear_cache
  (of-object "GtkTreeModelSort")
  (c-name "gtk_tree_model_sort_clear_cache")
  (return-type "none")
)

(define-method iter_is_valid
  (of-object "GtkTreeModelSort")
  (c-name "gtk_tree_model_sort_iter_is_valid")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)



;; From gtktreeselection.h

(define-function gtk_tree_selection_get_type
  (c-name "gtk_tree_selection_get_type")
  (return-type "GType")
)

(define-method set_mode
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_set_mode")
  (return-type "none")
  (parameters
    '("GtkSelectionMode" "type")
  )
)

(define-method get_mode
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_get_mode")
  (return-type "GtkSelectionMode")
)

(define-method set_select_function
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_set_select_function")
  (return-type "none")
  (parameters
    '("GtkTreeSelectionFunc" "func")
    '("gpointer" "data")
    '("GDestroyNotify" "destroy")
  )
)

(define-method get_user_data
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_get_user_data")
  (return-type "gpointer")
)

(define-method get_tree_view
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_get_tree_view")
  (return-type "GtkTreeView*")
)

(define-method get_select_function
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_get_select_function")
  (return-type "GtkTreeSelectionFunc")
)

(define-method get_selected
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_get_selected")
  (return-type "gboolean")
  (parameters
    '("GtkTreeModel**" "model")
    '("GtkTreeIter*" "iter")
  )
)

(define-method get_selected_rows
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_get_selected_rows")
  (return-type "GList*")
  (parameters
    '("GtkTreeModel**" "model")
  )
)

(define-method count_selected_rows
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_count_selected_rows")
  (return-type "int")
)

(define-method selected_foreach
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_selected_foreach")
  (return-type "none")
  (parameters
    '("GtkTreeSelectionForeachFunc" "func")
    '("gpointer" "data")
  )
)

(define-method select_path
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_select_path")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-method unselect_path
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_unselect_path")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-method select_iter
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_select_iter")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method unselect_iter
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_unselect_iter")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method path_is_selected
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_path_is_selected")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-method iter_is_selected
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_iter_is_selected")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method select_all
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_select_all")
  (return-type "none")
)

(define-method unselect_all
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_unselect_all")
  (return-type "none")
)

(define-method select_range
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_select_range")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "start_path")
    '("GtkTreePath*" "end_path")
  )
)

(define-method unselect_range
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_unselect_range")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "start_path")
    '("GtkTreePath*" "end_path")
  )
)



;; From gtktreesortable.h

(define-function gtk_tree_sortable_get_type
  (c-name "gtk_tree_sortable_get_type")
  (return-type "GType")
)

(define-method sort_column_changed
  (of-object "GtkTreeSortable")
  (c-name "gtk_tree_sortable_sort_column_changed")
  (return-type "none")
)

(define-method get_sort_column_id
  (of-object "GtkTreeSortable")
  (c-name "gtk_tree_sortable_get_sort_column_id")
  (return-type "gboolean")
  (parameters
    '("int*" "sort_column_id")
    '("GtkSortType*" "order")
  )
)

(define-method set_sort_column_id
  (of-object "GtkTreeSortable")
  (c-name "gtk_tree_sortable_set_sort_column_id")
  (return-type "none")
  (parameters
    '("int" "sort_column_id")
    '("GtkSortType" "order")
  )
)

(define-method set_sort_func
  (of-object "GtkTreeSortable")
  (c-name "gtk_tree_sortable_set_sort_func")
  (return-type "none")
  (parameters
    '("int" "sort_column_id")
    '("GtkTreeIterCompareFunc" "sort_func")
    '("gpointer" "user_data")
    '("GDestroyNotify" "destroy")
  )
)

(define-method set_default_sort_func
  (of-object "GtkTreeSortable")
  (c-name "gtk_tree_sortable_set_default_sort_func")
  (return-type "none")
  (parameters
    '("GtkTreeIterCompareFunc" "sort_func")
    '("gpointer" "user_data")
    '("GDestroyNotify" "destroy")
  )
)

(define-method has_default_sort_func
  (of-object "GtkTreeSortable")
  (c-name "gtk_tree_sortable_has_default_sort_func")
  (return-type "gboolean")
)



;; From gtktreestore.h

(define-function gtk_tree_store_get_type
  (c-name "gtk_tree_store_get_type")
  (return-type "GType")
)

(define-function gtk_tree_store_new
  (c-name "gtk_tree_store_new")
  (is-constructor-of "GtkTreeStore")
  (return-type "GtkTreeStore*")
  (parameters
    '("int" "n_columns")
  )
  (varargs #t)
)

(define-function gtk_tree_store_newv
  (c-name "gtk_tree_store_newv")
  (return-type "GtkTreeStore*")
  (parameters
    '("int" "n_columns")
    '("GType*" "types")
  )
)

(define-method set_column_types
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_set_column_types")
  (return-type "none")
  (parameters
    '("int" "n_columns")
    '("GType*" "types")
  )
)

(define-method set_value
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_set_value")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("int" "column")
    '("GValue*" "value")
  )
)

(define-method set
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_set")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
  )
  (varargs #t)
)

(define-method set_valuesv
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_set_valuesv")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("int*" "columns")
    '("GValue*" "values")
    '("int" "n_values")
  )
)

(define-method set_valist
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_set_valist")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("va_list" "var_args")
  )
)

(define-method remove
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_remove")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method insert
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_insert")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "parent")
    '("int" "position")
  )
)

(define-method insert_before
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_insert_before")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "parent")
    '("GtkTreeIter*" "sibling")
  )
)

(define-method insert_after
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_insert_after")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "parent")
    '("GtkTreeIter*" "sibling")
  )
)

(define-method insert_with_values
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_insert_with_values")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "parent")
    '("int" "position")
  )
  (varargs #t)
)

(define-method insert_with_valuesv
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_insert_with_valuesv")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "parent")
    '("int" "position")
    '("int*" "columns")
    '("GValue*" "values")
    '("int" "n_values")
  )
)

(define-method prepend
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_prepend")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "parent")
  )
)

(define-method append
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_append")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "parent")
  )
)

(define-method is_ancestor
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_is_ancestor")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "descendant")
  )
)

(define-method iter_depth
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_iter_depth")
  (return-type "int")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method clear
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_clear")
  (return-type "none")
)

(define-method iter_is_valid
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_iter_is_valid")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method reorder
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_reorder")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "parent")
    '("int*" "new_order")
  )
)

(define-method swap
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_swap")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "a")
    '("GtkTreeIter*" "b")
  )
)

(define-method move_before
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_move_before")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "position")
  )
)

(define-method move_after
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_move_after")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "position")
  )
)



;; From gtktreeviewcolumn.h

(define-function gtk_tree_view_column_get_type
  (c-name "gtk_tree_view_column_get_type")
  (return-type "GType")
)

(define-function gtk_tree_view_column_new
  (c-name "gtk_tree_view_column_new")
  (is-constructor-of "GtkTreeViewColumn")
  (return-type "GtkTreeViewColumn*")
)

(define-function gtk_tree_view_column_new_with_area
  (c-name "gtk_tree_view_column_new_with_area")
  (return-type "GtkTreeViewColumn*")
  (parameters
    '("GtkCellArea*" "area")
  )
)

(define-function gtk_tree_view_column_new_with_attributes
  (c-name "gtk_tree_view_column_new_with_attributes")
  (return-type "GtkTreeViewColumn*")
  (parameters
    '("const-char*" "title")
    '("GtkCellRenderer*" "cell")
  )
  (varargs #t)
)

(define-method pack_start
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_pack_start")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell")
    '("gboolean" "expand")
  )
)

(define-method pack_end
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_pack_end")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell")
    '("gboolean" "expand")
  )
)

(define-method clear
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_clear")
  (return-type "none")
)

(define-method add_attribute
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_add_attribute")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell_renderer")
    '("const-char*" "attribute")
    '("int" "column")
  )
)

(define-method set_attributes
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_attributes")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell_renderer")
  )
  (varargs #t)
)

(define-method set_cell_data_func
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_cell_data_func")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell_renderer")
    '("GtkTreeCellDataFunc" "func")
    '("gpointer" "func_data")
    '("GDestroyNotify" "destroy")
  )
)

(define-method clear_attributes
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_clear_attributes")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell_renderer")
  )
)

(define-method set_spacing
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_spacing")
  (return-type "none")
  (parameters
    '("int" "spacing")
  )
)

(define-method get_spacing
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_spacing")
  (return-type "int")
)

(define-method set_visible
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_visible")
  (return-type "none")
  (parameters
    '("gboolean" "visible")
  )
)

(define-method get_visible
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_visible")
  (return-type "gboolean")
)

(define-method set_resizable
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_resizable")
  (return-type "none")
  (parameters
    '("gboolean" "resizable")
  )
)

(define-method get_resizable
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_resizable")
  (return-type "gboolean")
)

(define-method set_sizing
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_sizing")
  (return-type "none")
  (parameters
    '("GtkTreeViewColumnSizing" "type")
  )
)

(define-method get_sizing
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_sizing")
  (return-type "GtkTreeViewColumnSizing")
)

(define-method get_x_offset
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_x_offset")
  (return-type "int")
)

(define-method get_width
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_width")
  (return-type "int")
)

(define-method get_fixed_width
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_fixed_width")
  (return-type "int")
)

(define-method set_fixed_width
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_fixed_width")
  (return-type "none")
  (parameters
    '("int" "fixed_width")
  )
)

(define-method set_min_width
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_min_width")
  (return-type "none")
  (parameters
    '("int" "min_width")
  )
)

(define-method get_min_width
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_min_width")
  (return-type "int")
)

(define-method set_max_width
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_max_width")
  (return-type "none")
  (parameters
    '("int" "max_width")
  )
)

(define-method get_max_width
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_max_width")
  (return-type "int")
)

(define-method clicked
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_clicked")
  (return-type "none")
)

(define-method set_title
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_title")
  (return-type "none")
  (parameters
    '("const-char*" "title")
  )
)

(define-method get_title
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_title")
  (return-type "const-char*")
)

(define-method set_expand
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_expand")
  (return-type "none")
  (parameters
    '("gboolean" "expand")
  )
)

(define-method get_expand
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_expand")
  (return-type "gboolean")
)

(define-method set_clickable
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_clickable")
  (return-type "none")
  (parameters
    '("gboolean" "clickable")
  )
)

(define-method get_clickable
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_clickable")
  (return-type "gboolean")
)

(define-method set_widget
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method get_widget
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_widget")
  (return-type "GtkWidget*")
)

(define-method set_alignment
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_alignment")
  (return-type "none")
  (parameters
    '("float" "xalign")
  )
)

(define-method get_alignment
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_alignment")
  (return-type "float")
)

(define-method set_reorderable
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_reorderable")
  (return-type "none")
  (parameters
    '("gboolean" "reorderable")
  )
)

(define-method get_reorderable
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_reorderable")
  (return-type "gboolean")
)

(define-method set_sort_column_id
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_sort_column_id")
  (return-type "none")
  (parameters
    '("int" "sort_column_id")
  )
)

(define-method get_sort_column_id
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_sort_column_id")
  (return-type "int")
)

(define-method set_sort_indicator
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_sort_indicator")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_sort_indicator
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_sort_indicator")
  (return-type "gboolean")
)

(define-method set_sort_order
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_sort_order")
  (return-type "none")
  (parameters
    '("GtkSortType" "order")
  )
)

(define-method get_sort_order
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_sort_order")
  (return-type "GtkSortType")
)

(define-method cell_set_cell_data
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_cell_set_cell_data")
  (return-type "none")
  (parameters
    '("GtkTreeModel*" "tree_model")
    '("GtkTreeIter*" "iter")
    '("gboolean" "is_expander")
    '("gboolean" "is_expanded")
  )
)

(define-method cell_get_size
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_cell_get_size")
  (return-type "none")
  (parameters
    '("int*" "x_offset")
    '("int*" "y_offset")
    '("int*" "width")
    '("int*" "height")
  )
)

(define-method cell_is_visible
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_cell_is_visible")
  (return-type "gboolean")
)

(define-method focus_cell
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_focus_cell")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell")
  )
)

(define-method cell_get_position
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_cell_get_position")
  (return-type "gboolean")
  (parameters
    '("GtkCellRenderer*" "cell_renderer")
    '("int*" "x_offset")
    '("int*" "width")
  )
)

(define-method queue_resize
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_queue_resize")
  (return-type "none")
)

(define-method get_tree_view
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_tree_view")
  (return-type "GtkWidget*")
)

(define-method get_button
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_button")
  (return-type "GtkWidget*")
)



;; From gtktreeview.h

(define-function gtk_tree_view_get_type
  (c-name "gtk_tree_view_get_type")
  (return-type "GType")
)

(define-function gtk_tree_view_new
  (c-name "gtk_tree_view_new")
  (is-constructor-of "GtkTreeView")
  (return-type "GtkWidget*")
)

(define-function gtk_tree_view_new_with_model
  (c-name "gtk_tree_view_new_with_model")
  (return-type "GtkWidget*")
  (parameters
    '("GtkTreeModel*" "model")
  )
)

(define-method get_model
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_model")
  (return-type "GtkTreeModel*")
)

(define-method set_model
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_model")
  (return-type "none")
  (parameters
    '("GtkTreeModel*" "model")
  )
)

(define-method get_selection
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_selection")
  (return-type "GtkTreeSelection*")
)

(define-method get_headers_visible
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_headers_visible")
  (return-type "gboolean")
)

(define-method set_headers_visible
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_headers_visible")
  (return-type "none")
  (parameters
    '("gboolean" "headers_visible")
  )
)

(define-method columns_autosize
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_columns_autosize")
  (return-type "none")
)

(define-method get_headers_clickable
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_headers_clickable")
  (return-type "gboolean")
)

(define-method set_headers_clickable
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_headers_clickable")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_activate_on_single_click
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_activate_on_single_click")
  (return-type "gboolean")
)

(define-method set_activate_on_single_click
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_activate_on_single_click")
  (return-type "none")
  (parameters
    '("gboolean" "single")
  )
)

(define-method append_column
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_append_column")
  (return-type "int")
  (parameters
    '("GtkTreeViewColumn*" "column")
  )
)

(define-method remove_column
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_remove_column")
  (return-type "int")
  (parameters
    '("GtkTreeViewColumn*" "column")
  )
)

(define-method insert_column
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_insert_column")
  (return-type "int")
  (parameters
    '("GtkTreeViewColumn*" "column")
    '("int" "position")
  )
)

(define-method insert_column_with_attributes
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_insert_column_with_attributes")
  (return-type "int")
  (parameters
    '("int" "position")
    '("const-char*" "title")
    '("GtkCellRenderer*" "cell")
  )
  (varargs #t)
)

(define-method insert_column_with_data_func
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_insert_column_with_data_func")
  (return-type "int")
  (parameters
    '("int" "position")
    '("const-char*" "title")
    '("GtkCellRenderer*" "cell")
    '("GtkTreeCellDataFunc" "func")
    '("gpointer" "data")
    '("GDestroyNotify" "dnotify")
  )
)

(define-method get_n_columns
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_n_columns")
  (return-type "guint")
)

(define-method get_column
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_column")
  (return-type "GtkTreeViewColumn*")
  (parameters
    '("int" "n")
  )
)

(define-method get_columns
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_columns")
  (return-type "GList*")
)

(define-method move_column_after
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_move_column_after")
  (return-type "none")
  (parameters
    '("GtkTreeViewColumn*" "column")
    '("GtkTreeViewColumn*" "base_column")
  )
)

(define-method set_expander_column
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_expander_column")
  (return-type "none")
  (parameters
    '("GtkTreeViewColumn*" "column")
  )
)

(define-method get_expander_column
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_expander_column")
  (return-type "GtkTreeViewColumn*")
)

(define-method set_column_drag_function
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_column_drag_function")
  (return-type "none")
  (parameters
    '("GtkTreeViewColumnDropFunc" "func")
    '("gpointer" "user_data")
    '("GDestroyNotify" "destroy")
  )
)

(define-method scroll_to_point
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_scroll_to_point")
  (return-type "none")
  (parameters
    '("int" "tree_x")
    '("int" "tree_y")
  )
)

(define-method scroll_to_cell
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_scroll_to_cell")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkTreeViewColumn*" "column")
    '("gboolean" "use_align")
    '("float" "row_align")
    '("float" "col_align")
  )
)

(define-method row_activated
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_row_activated")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkTreeViewColumn*" "column")
  )
)

(define-method expand_all
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_expand_all")
  (return-type "none")
)

(define-method collapse_all
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_collapse_all")
  (return-type "none")
)

(define-method expand_to_path
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_expand_to_path")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-method expand_row
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_expand_row")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "path")
    '("gboolean" "open_all")
  )
)

(define-method collapse_row
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_collapse_row")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-method map_expanded_rows
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_map_expanded_rows")
  (return-type "none")
  (parameters
    '("GtkTreeViewMappingFunc" "func")
    '("gpointer" "data")
  )
)

(define-method row_expanded
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_row_expanded")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-method set_reorderable
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_reorderable")
  (return-type "none")
  (parameters
    '("gboolean" "reorderable")
  )
)

(define-method get_reorderable
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_reorderable")
  (return-type "gboolean")
)

(define-method set_cursor
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_cursor")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkTreeViewColumn*" "focus_column")
    '("gboolean" "start_editing")
  )
)

(define-method set_cursor_on_cell
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_cursor_on_cell")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkTreeViewColumn*" "focus_column")
    '("GtkCellRenderer*" "focus_cell")
    '("gboolean" "start_editing")
  )
)

(define-method get_cursor
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_cursor")
  (return-type "none")
  (parameters
    '("GtkTreePath**" "path")
    '("GtkTreeViewColumn**" "focus_column")
  )
)

(define-method get_path_at_pos
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_path_at_pos")
  (return-type "gboolean")
  (parameters
    '("int" "x")
    '("int" "y")
    '("GtkTreePath**" "path")
    '("GtkTreeViewColumn**" "column")
    '("int*" "cell_x")
    '("int*" "cell_y")
  )
)

(define-method get_cell_area
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_cell_area")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkTreeViewColumn*" "column")
    '("GdkRectangle*" "rect")
  )
)

(define-method get_background_area
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_background_area")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkTreeViewColumn*" "column")
    '("GdkRectangle*" "rect")
  )
)

(define-method get_visible_rect
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_visible_rect")
  (return-type "none")
  (parameters
    '("GdkRectangle*" "visible_rect")
  )
)

(define-method get_visible_range
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_visible_range")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath**" "start_path")
    '("GtkTreePath**" "end_path")
  )
)

(define-method is_blank_at_pos
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_is_blank_at_pos")
  (return-type "gboolean")
  (parameters
    '("int" "x")
    '("int" "y")
    '("GtkTreePath**" "path")
    '("GtkTreeViewColumn**" "column")
    '("int*" "cell_x")
    '("int*" "cell_y")
  )
)

(define-method enable_model_drag_source
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_enable_model_drag_source")
  (return-type "none")
  (parameters
    '("GdkModifierType" "start_button_mask")
    '("GdkContentFormats*" "formats")
    '("GdkDragAction" "actions")
  )
)

(define-method enable_model_drag_dest
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_enable_model_drag_dest")
  (return-type "none")
  (parameters
    '("GdkContentFormats*" "formats")
    '("GdkDragAction" "actions")
  )
)

(define-method unset_rows_drag_source
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_unset_rows_drag_source")
  (return-type "none")
)

(define-method unset_rows_drag_dest
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_unset_rows_drag_dest")
  (return-type "none")
)

(define-method set_drag_dest_row
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_drag_dest_row")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkTreeViewDropPosition" "pos")
  )
)

(define-method get_drag_dest_row
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_drag_dest_row")
  (return-type "none")
  (parameters
    '("GtkTreePath**" "path")
    '("GtkTreeViewDropPosition*" "pos")
  )
)

(define-method get_dest_row_at_pos
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_dest_row_at_pos")
  (return-type "gboolean")
  (parameters
    '("int" "drag_x")
    '("int" "drag_y")
    '("GtkTreePath**" "path")
    '("GtkTreeViewDropPosition*" "pos")
  )
)

(define-method create_row_drag_icon
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_create_row_drag_icon")
  (return-type "GdkPaintable*")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-method set_enable_search
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_enable_search")
  (return-type "none")
  (parameters
    '("gboolean" "enable_search")
  )
)

(define-method get_enable_search
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_enable_search")
  (return-type "gboolean")
)

(define-method get_search_column
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_search_column")
  (return-type "int")
)

(define-method set_search_column
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_search_column")
  (return-type "none")
  (parameters
    '("int" "column")
  )
)

(define-method get_search_equal_func
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_search_equal_func")
  (return-type "GtkTreeViewSearchEqualFunc")
)

(define-method set_search_equal_func
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_search_equal_func")
  (return-type "none")
  (parameters
    '("GtkTreeViewSearchEqualFunc" "search_equal_func")
    '("gpointer" "search_user_data")
    '("GDestroyNotify" "search_destroy")
  )
)

(define-method get_search_entry
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_search_entry")
  (return-type "GtkEditable*")
)

(define-method set_search_entry
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_search_entry")
  (return-type "none")
  (parameters
    '("GtkEditable*" "entry")
  )
)

(define-method convert_widget_to_tree_coords
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_convert_widget_to_tree_coords")
  (return-type "none")
  (parameters
    '("int" "wx")
    '("int" "wy")
    '("int*" "tx")
    '("int*" "ty")
  )
)

(define-method convert_tree_to_widget_coords
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_convert_tree_to_widget_coords")
  (return-type "none")
  (parameters
    '("int" "tx")
    '("int" "ty")
    '("int*" "wx")
    '("int*" "wy")
  )
)

(define-method convert_widget_to_bin_window_coords
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_convert_widget_to_bin_window_coords")
  (return-type "none")
  (parameters
    '("int" "wx")
    '("int" "wy")
    '("int*" "bx")
    '("int*" "by")
  )
)

(define-method convert_bin_window_to_widget_coords
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_convert_bin_window_to_widget_coords")
  (return-type "none")
  (parameters
    '("int" "bx")
    '("int" "by")
    '("int*" "wx")
    '("int*" "wy")
  )
)

(define-method convert_tree_to_bin_window_coords
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_convert_tree_to_bin_window_coords")
  (return-type "none")
  (parameters
    '("int" "tx")
    '("int" "ty")
    '("int*" "bx")
    '("int*" "by")
  )
)

(define-method convert_bin_window_to_tree_coords
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_convert_bin_window_to_tree_coords")
  (return-type "none")
  (parameters
    '("int" "bx")
    '("int" "by")
    '("int*" "tx")
    '("int*" "ty")
  )
)

(define-method set_fixed_height_mode
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_fixed_height_mode")
  (return-type "none")
  (parameters
    '("gboolean" "enable")
  )
)

(define-method get_fixed_height_mode
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_fixed_height_mode")
  (return-type "gboolean")
)

(define-method set_hover_selection
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_hover_selection")
  (return-type "none")
  (parameters
    '("gboolean" "hover")
  )
)

(define-method get_hover_selection
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_hover_selection")
  (return-type "gboolean")
)

(define-method set_hover_expand
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_hover_expand")
  (return-type "none")
  (parameters
    '("gboolean" "expand")
  )
)

(define-method get_hover_expand
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_hover_expand")
  (return-type "gboolean")
)

(define-method set_rubber_banding
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_rubber_banding")
  (return-type "none")
  (parameters
    '("gboolean" "enable")
  )
)

(define-method get_rubber_banding
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_rubber_banding")
  (return-type "gboolean")
)

(define-method is_rubber_banding_active
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_is_rubber_banding_active")
  (return-type "gboolean")
)

(define-method get_row_separator_func
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_row_separator_func")
  (return-type "GtkTreeViewRowSeparatorFunc")
)

(define-method set_row_separator_func
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_row_separator_func")
  (return-type "none")
  (parameters
    '("GtkTreeViewRowSeparatorFunc" "func")
    '("gpointer" "data")
    '("GDestroyNotify" "destroy")
  )
)

(define-method get_grid_lines
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_grid_lines")
  (return-type "GtkTreeViewGridLines")
)

(define-method set_grid_lines
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_grid_lines")
  (return-type "none")
  (parameters
    '("GtkTreeViewGridLines" "grid_lines")
  )
)

(define-method get_enable_tree_lines
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_enable_tree_lines")
  (return-type "gboolean")
)

(define-method set_enable_tree_lines
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_enable_tree_lines")
  (return-type "none")
  (parameters
    '("gboolean" "enabled")
  )
)

(define-method set_show_expanders
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_show_expanders")
  (return-type "none")
  (parameters
    '("gboolean" "enabled")
  )
)

(define-method get_show_expanders
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_show_expanders")
  (return-type "gboolean")
)

(define-method set_level_indentation
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_level_indentation")
  (return-type "none")
  (parameters
    '("int" "indentation")
  )
)

(define-method get_level_indentation
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_level_indentation")
  (return-type "int")
)

(define-method set_tooltip_row
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_tooltip_row")
  (return-type "none")
  (parameters
    '("GtkTooltip*" "tooltip")
    '("GtkTreePath*" "path")
  )
)

(define-method set_tooltip_cell
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_tooltip_cell")
  (return-type "none")
  (parameters
    '("GtkTooltip*" "tooltip")
    '("GtkTreePath*" "path")
    '("GtkTreeViewColumn*" "column")
    '("GtkCellRenderer*" "cell")
  )
)

(define-method get_tooltip_context
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_tooltip_context")
  (return-type "gboolean")
  (parameters
    '("int" "x")
    '("int" "y")
    '("gboolean" "keyboard_tip")
    '("GtkTreeModel**" "model")
    '("GtkTreePath**" "path")
    '("GtkTreeIter*" "iter")
  )
)

(define-method set_tooltip_column
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_tooltip_column")
  (return-type "none")
  (parameters
    '("int" "column")
  )
)

(define-method get_tooltip_column
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_tooltip_column")
  (return-type "int")
)



;; From gtktypes.h



;; From gtkunixprint-autocleanups.h



;; From gtkunixprint.h



;; From gtkvideo.h

(define-function gtk_video_new
  (c-name "gtk_video_new")
  (is-constructor-of "GtkVideo")
  (return-type "GtkWidget*")
)

(define-function gtk_video_new_for_media_stream
  (c-name "gtk_video_new_for_media_stream")
  (return-type "GtkWidget*")
  (parameters
    '("GtkMediaStream*" "stream")
  )
)

(define-function gtk_video_new_for_file
  (c-name "gtk_video_new_for_file")
  (return-type "GtkWidget*")
  (parameters
    '("GFile*" "file")
  )
)

(define-function gtk_video_new_for_filename
  (c-name "gtk_video_new_for_filename")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "filename")
  )
)

(define-function gtk_video_new_for_resource
  (c-name "gtk_video_new_for_resource")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "resource_path")
  )
)

(define-method get_media_stream
  (of-object "GtkVideo")
  (c-name "gtk_video_get_media_stream")
  (return-type "GtkMediaStream*")
)

(define-method set_media_stream
  (of-object "GtkVideo")
  (c-name "gtk_video_set_media_stream")
  (return-type "none")
  (parameters
    '("GtkMediaStream*" "stream")
  )
)

(define-method get_file
  (of-object "GtkVideo")
  (c-name "gtk_video_get_file")
  (return-type "GFile*")
)

(define-method set_file
  (of-object "GtkVideo")
  (c-name "gtk_video_set_file")
  (return-type "none")
  (parameters
    '("GFile*" "file")
  )
)

(define-method set_filename
  (of-object "GtkVideo")
  (c-name "gtk_video_set_filename")
  (return-type "none")
  (parameters
    '("const-char*" "filename")
  )
)

(define-method set_resource
  (of-object "GtkVideo")
  (c-name "gtk_video_set_resource")
  (return-type "none")
  (parameters
    '("const-char*" "resource_path")
  )
)

(define-method get_autoplay
  (of-object "GtkVideo")
  (c-name "gtk_video_get_autoplay")
  (return-type "gboolean")
)

(define-method set_autoplay
  (of-object "GtkVideo")
  (c-name "gtk_video_set_autoplay")
  (return-type "none")
  (parameters
    '("gboolean" "autoplay")
  )
)

(define-method get_loop
  (of-object "GtkVideo")
  (c-name "gtk_video_get_loop")
  (return-type "gboolean")
)

(define-method set_loop
  (of-object "GtkVideo")
  (c-name "gtk_video_set_loop")
  (return-type "none")
  (parameters
    '("gboolean" "loop")
  )
)



;; From gtkviewport.h

(define-function gtk_viewport_get_type
  (c-name "gtk_viewport_get_type")
  (return-type "GType")
)

(define-function gtk_viewport_new
  (c-name "gtk_viewport_new")
  (is-constructor-of "GtkViewport")
  (return-type "GtkWidget*")
  (parameters
    '("GtkAdjustment*" "hadjustment")
    '("GtkAdjustment*" "vadjustment")
  )
)

(define-method get_scroll_to_focus
  (of-object "GtkViewport")
  (c-name "gtk_viewport_get_scroll_to_focus")
  (return-type "gboolean")
)

(define-method set_scroll_to_focus
  (of-object "GtkViewport")
  (c-name "gtk_viewport_set_scroll_to_focus")
  (return-type "none")
  (parameters
    '("gboolean" "scroll_to_focus")
  )
)

(define-method set_child
  (of-object "GtkViewport")
  (c-name "gtk_viewport_set_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_child
  (of-object "GtkViewport")
  (c-name "gtk_viewport_get_child")
  (return-type "GtkWidget*")
)



;; From gtkvolumebutton.h

(define-function gtk_volume_button_get_type
  (c-name "gtk_volume_button_get_type")
  (return-type "GType")
)

(define-function gtk_volume_button_new
  (c-name "gtk_volume_button_new")
  (is-constructor-of "GtkVolumeButton")
  (return-type "GtkWidget*")
)



;; From gtkwidget.h

(define-function gtk_widget_get_type
  (c-name "gtk_widget_get_type")
  (return-type "GType")
)

(define-method unparent
  (of-object "GtkWidget")
  (c-name "gtk_widget_unparent")
  (return-type "none")
)

(define-method show
  (of-object "GtkWidget")
  (c-name "gtk_widget_show")
  (return-type "none")
)

(define-method hide
  (of-object "GtkWidget")
  (c-name "gtk_widget_hide")
  (return-type "none")
)

(define-method map
  (of-object "GtkWidget")
  (c-name "gtk_widget_map")
  (return-type "none")
)

(define-method unmap
  (of-object "GtkWidget")
  (c-name "gtk_widget_unmap")
  (return-type "none")
)

(define-method realize
  (of-object "GtkWidget")
  (c-name "gtk_widget_realize")
  (return-type "none")
)

(define-method unrealize
  (of-object "GtkWidget")
  (c-name "gtk_widget_unrealize")
  (return-type "none")
)

(define-method queue_draw
  (of-object "GtkWidget")
  (c-name "gtk_widget_queue_draw")
  (return-type "none")
)

(define-method queue_resize
  (of-object "GtkWidget")
  (c-name "gtk_widget_queue_resize")
  (return-type "none")
)

(define-method queue_allocate
  (of-object "GtkWidget")
  (c-name "gtk_widget_queue_allocate")
  (return-type "none")
)

(define-method get_frame_clock
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_frame_clock")
  (return-type "GdkFrameClock*")
)

(define-method size_allocate
  (of-object "GtkWidget")
  (c-name "gtk_widget_size_allocate")
  (return-type "none")
  (parameters
    '("const-GtkAllocation*" "allocation")
    '("int" "baseline")
  )
)

(define-method allocate
  (of-object "GtkWidget")
  (c-name "gtk_widget_allocate")
  (return-type "none")
  (parameters
    '("int" "width")
    '("int" "height")
    '("int" "baseline")
    '("GskTransform*" "transform")
  )
)

(define-method get_request_mode
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_request_mode")
  (return-type "GtkSizeRequestMode")
)

(define-method measure
  (of-object "GtkWidget")
  (c-name "gtk_widget_measure")
  (return-type "none")
  (parameters
    '("GtkOrientation" "orientation")
    '("int" "for_size")
    '("int*" "minimum")
    '("int*" "natural")
    '("int*" "minimum_baseline")
    '("int*" "natural_baseline")
  )
)

(define-method get_preferred_size
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_preferred_size")
  (return-type "none")
  (parameters
    '("GtkRequisition*" "minimum_size")
    '("GtkRequisition*" "natural_size")
  )
)

(define-method set_layout_manager
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_layout_manager")
  (return-type "none")
  (parameters
    '("GtkLayoutManager*" "layout_manager")
  )
)

(define-method get_layout_manager
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_layout_manager")
  (return-type "GtkLayoutManager*")
)

(define-method set_layout_manager_type
  (of-object "GtkWidgetClass")
  (c-name "gtk_widget_class_set_layout_manager_type")
  (return-type "none")
  (parameters
    '("GType" "type")
  )
)

(define-method get_layout_manager_type
  (of-object "GtkWidgetClass")
  (c-name "gtk_widget_class_get_layout_manager_type")
  (return-type "GType")
)

(define-method add_binding
  (of-object "GtkWidgetClass")
  (c-name "gtk_widget_class_add_binding")
  (return-type "none")
  (parameters
    '("guint" "keyval")
    '("GdkModifierType" "mods")
    '("GtkShortcutFunc" "callback")
    '("const-char*" "format_string")
  )
  (varargs #t)
)

(define-method add_binding_signal
  (of-object "GtkWidgetClass")
  (c-name "gtk_widget_class_add_binding_signal")
  (return-type "none")
  (parameters
    '("guint" "keyval")
    '("GdkModifierType" "mods")
    '("const-char*" "signal")
    '("const-char*" "format_string")
  )
  (varargs #t)
)

(define-method add_binding_action
  (of-object "GtkWidgetClass")
  (c-name "gtk_widget_class_add_binding_action")
  (return-type "none")
  (parameters
    '("guint" "keyval")
    '("GdkModifierType" "mods")
    '("const-char*" "action_name")
    '("const-char*" "format_string")
  )
  (varargs #t)
)

(define-method add_shortcut
  (of-object "GtkWidgetClass")
  (c-name "gtk_widget_class_add_shortcut")
  (return-type "none")
  (parameters
    '("GtkShortcut*" "shortcut")
  )
)

(define-method set_activate_signal
  (of-object "GtkWidgetClass")
  (c-name "gtk_widget_class_set_activate_signal")
  (return-type "none")
  (parameters
    '("guint" "signal_id")
  )
)

(define-method set_activate_signal_from_name
  (of-object "GtkWidgetClass")
  (c-name "gtk_widget_class_set_activate_signal_from_name")
  (return-type "none")
  (parameters
    '("const-char*" "signal_name")
  )
)

(define-method get_activate_signal
  (of-object "GtkWidgetClass")
  (c-name "gtk_widget_class_get_activate_signal")
  (return-type "guint")
)

(define-method mnemonic_activate
  (of-object "GtkWidget")
  (c-name "gtk_widget_mnemonic_activate")
  (return-type "gboolean")
  (parameters
    '("gboolean" "group_cycling")
  )
)

(define-method activate
  (of-object "GtkWidget")
  (c-name "gtk_widget_activate")
  (return-type "gboolean")
)

(define-method set_can_focus
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_can_focus")
  (return-type "none")
  (parameters
    '("gboolean" "can_focus")
  )
)

(define-method get_can_focus
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_can_focus")
  (return-type "gboolean")
)

(define-method set_focusable
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_focusable")
  (return-type "none")
  (parameters
    '("gboolean" "focusable")
  )
)

(define-method get_focusable
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_focusable")
  (return-type "gboolean")
)

(define-method has_focus
  (of-object "GtkWidget")
  (c-name "gtk_widget_has_focus")
  (return-type "gboolean")
)

(define-method is_focus
  (of-object "GtkWidget")
  (c-name "gtk_widget_is_focus")
  (return-type "gboolean")
)

(define-method has_visible_focus
  (of-object "GtkWidget")
  (c-name "gtk_widget_has_visible_focus")
  (return-type "gboolean")
)

(define-method grab_focus
  (of-object "GtkWidget")
  (c-name "gtk_widget_grab_focus")
  (return-type "gboolean")
)

(define-method set_focus_on_click
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_focus_on_click")
  (return-type "none")
  (parameters
    '("gboolean" "focus_on_click")
  )
)

(define-method get_focus_on_click
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_focus_on_click")
  (return-type "gboolean")
)

(define-method set_can_target
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_can_target")
  (return-type "none")
  (parameters
    '("gboolean" "can_target")
  )
)

(define-method get_can_target
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_can_target")
  (return-type "gboolean")
)

(define-method has_default
  (of-object "GtkWidget")
  (c-name "gtk_widget_has_default")
  (return-type "gboolean")
)

(define-method set_receives_default
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_receives_default")
  (return-type "none")
  (parameters
    '("gboolean" "receives_default")
  )
)

(define-method get_receives_default
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_receives_default")
  (return-type "gboolean")
)

(define-method set_name
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_name")
  (return-type "none")
  (parameters
    '("const-char*" "name")
  )
)

(define-method get_name
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_name")
  (return-type "const-char*")
)

(define-method set_state_flags
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_state_flags")
  (return-type "none")
  (parameters
    '("GtkStateFlags" "flags")
    '("gboolean" "clear")
  )
)

(define-method unset_state_flags
  (of-object "GtkWidget")
  (c-name "gtk_widget_unset_state_flags")
  (return-type "none")
  (parameters
    '("GtkStateFlags" "flags")
  )
)

(define-method get_state_flags
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_state_flags")
  (return-type "GtkStateFlags")
)

(define-method set_sensitive
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_sensitive")
  (return-type "none")
  (parameters
    '("gboolean" "sensitive")
  )
)

(define-method get_sensitive
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_sensitive")
  (return-type "gboolean")
)

(define-method is_sensitive
  (of-object "GtkWidget")
  (c-name "gtk_widget_is_sensitive")
  (return-type "gboolean")
)

(define-method set_visible
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_visible")
  (return-type "none")
  (parameters
    '("gboolean" "visible")
  )
)

(define-method get_visible
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_visible")
  (return-type "gboolean")
)

(define-method is_visible
  (of-object "GtkWidget")
  (c-name "gtk_widget_is_visible")
  (return-type "gboolean")
)

(define-method is_drawable
  (of-object "GtkWidget")
  (c-name "gtk_widget_is_drawable")
  (return-type "gboolean")
)

(define-method get_realized
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_realized")
  (return-type "gboolean")
)

(define-method get_mapped
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_mapped")
  (return-type "gboolean")
)

(define-method set_parent
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_parent")
  (return-type "none")
  (parameters
    '("GtkWidget*" "parent")
  )
)

(define-method get_parent
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_parent")
  (return-type "GtkWidget*")
)

(define-method get_root
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_root")
  (return-type "GtkRoot*")
)

(define-method get_native
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_native")
  (return-type "GtkNative*")
)

(define-method set_child_visible
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_child_visible")
  (return-type "none")
  (parameters
    '("gboolean" "child_visible")
  )
)

(define-method get_child_visible
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_child_visible")
  (return-type "gboolean")
)

(define-method get_allocated_width
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_allocated_width")
  (return-type "int")
)

(define-method get_allocated_height
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_allocated_height")
  (return-type "int")
)

(define-method get_allocated_baseline
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_allocated_baseline")
  (return-type "int")
)

(define-method get_allocation
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_allocation")
  (return-type "none")
  (parameters
    '("GtkAllocation*" "allocation")
  )
)

(define-method compute_transform
  (of-object "GtkWidget")
  (c-name "gtk_widget_compute_transform")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "target")
    '("graphene_matrix_t*" "out_transform")
  )
)

(define-method compute_bounds
  (of-object "GtkWidget")
  (c-name "gtk_widget_compute_bounds")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "target")
    '("graphene_rect_t*" "out_bounds")
  )
)

(define-method compute_point
  (of-object "GtkWidget")
  (c-name "gtk_widget_compute_point")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "target")
    '("const-graphene_point_t*" "point")
    '("graphene_point_t*" "out_point")
  )
)

(define-method get_width
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_width")
  (return-type "int")
)

(define-method get_height
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_height")
  (return-type "int")
)

(define-method get_size
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_size")
  (return-type "int")
  (parameters
    '("GtkOrientation" "orientation")
  )
)

(define-method child_focus
  (of-object "GtkWidget")
  (c-name "gtk_widget_child_focus")
  (return-type "gboolean")
  (parameters
    '("GtkDirectionType" "direction")
  )
)

(define-method keynav_failed
  (of-object "GtkWidget")
  (c-name "gtk_widget_keynav_failed")
  (return-type "gboolean")
  (parameters
    '("GtkDirectionType" "direction")
  )
)

(define-method error_bell
  (of-object "GtkWidget")
  (c-name "gtk_widget_error_bell")
  (return-type "none")
)

(define-method set_size_request
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_size_request")
  (return-type "none")
  (parameters
    '("int" "width")
    '("int" "height")
  )
)

(define-method get_size_request
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_size_request")
  (return-type "none")
  (parameters
    '("int*" "width")
    '("int*" "height")
  )
)

(define-method set_opacity
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_opacity")
  (return-type "none")
  (parameters
    '("double" "opacity")
  )
)

(define-method get_opacity
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_opacity")
  (return-type "double")
)

(define-method set_overflow
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_overflow")
  (return-type "none")
  (parameters
    '("GtkOverflow" "overflow")
  )
)

(define-method get_overflow
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_overflow")
  (return-type "GtkOverflow")
)

(define-method get_ancestor
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_ancestor")
  (return-type "GtkWidget*")
  (parameters
    '("GType" "widget_type")
  )
)

(define-method get_scale_factor
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_scale_factor")
  (return-type "int")
)

(define-method get_display
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_display")
  (return-type "GdkDisplay*")
)

(define-method get_settings
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_settings")
  (return-type "GtkSettings*")
)

(define-method get_clipboard
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_clipboard")
  (return-type "GdkClipboard*")
)

(define-method get_primary_clipboard
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_primary_clipboard")
  (return-type "GdkClipboard*")
)

(define-method get_hexpand
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_hexpand")
  (return-type "gboolean")
)

(define-method set_hexpand
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_hexpand")
  (return-type "none")
  (parameters
    '("gboolean" "expand")
  )
)

(define-method get_hexpand_set
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_hexpand_set")
  (return-type "gboolean")
)

(define-method set_hexpand_set
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_hexpand_set")
  (return-type "none")
  (parameters
    '("gboolean" "set")
  )
)

(define-method get_vexpand
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_vexpand")
  (return-type "gboolean")
)

(define-method set_vexpand
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_vexpand")
  (return-type "none")
  (parameters
    '("gboolean" "expand")
  )
)

(define-method get_vexpand_set
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_vexpand_set")
  (return-type "gboolean")
)

(define-method set_vexpand_set
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_vexpand_set")
  (return-type "none")
  (parameters
    '("gboolean" "set")
  )
)

(define-method compute_expand
  (of-object "GtkWidget")
  (c-name "gtk_widget_compute_expand")
  (return-type "gboolean")
  (parameters
    '("GtkOrientation" "orientation")
  )
)

(define-method get_halign
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_halign")
  (return-type "GtkAlign")
)

(define-method set_halign
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_halign")
  (return-type "none")
  (parameters
    '("GtkAlign" "align")
  )
)

(define-method get_valign
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_valign")
  (return-type "GtkAlign")
)

(define-method set_valign
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_valign")
  (return-type "none")
  (parameters
    '("GtkAlign" "align")
  )
)

(define-method get_margin_start
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_margin_start")
  (return-type "int")
)

(define-method set_margin_start
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_margin_start")
  (return-type "none")
  (parameters
    '("int" "margin")
  )
)

(define-method get_margin_end
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_margin_end")
  (return-type "int")
)

(define-method set_margin_end
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_margin_end")
  (return-type "none")
  (parameters
    '("int" "margin")
  )
)

(define-method get_margin_top
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_margin_top")
  (return-type "int")
)

(define-method set_margin_top
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_margin_top")
  (return-type "none")
  (parameters
    '("int" "margin")
  )
)

(define-method get_margin_bottom
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_margin_bottom")
  (return-type "int")
)

(define-method set_margin_bottom
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_margin_bottom")
  (return-type "none")
  (parameters
    '("int" "margin")
  )
)

(define-method is_ancestor
  (of-object "GtkWidget")
  (c-name "gtk_widget_is_ancestor")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "ancestor")
  )
)

(define-method translate_coordinates
  (of-object "GtkWidget")
  (c-name "gtk_widget_translate_coordinates")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "dest_widget")
    '("double" "src_x")
    '("double" "src_y")
    '("double*" "dest_x")
    '("double*" "dest_y")
  )
)

(define-method contains
  (of-object "GtkWidget")
  (c-name "gtk_widget_contains")
  (return-type "gboolean")
  (parameters
    '("double" "x")
    '("double" "y")
  )
)

(define-method pick
  (of-object "GtkWidget")
  (c-name "gtk_widget_pick")
  (return-type "GtkWidget*")
  (parameters
    '("double" "x")
    '("double" "y")
    '("GtkPickFlags" "flags")
  )
)

(define-method add_controller
  (of-object "GtkWidget")
  (c-name "gtk_widget_add_controller")
  (return-type "none")
  (parameters
    '("GtkEventController*" "controller")
  )
)

(define-method remove_controller
  (of-object "GtkWidget")
  (c-name "gtk_widget_remove_controller")
  (return-type "none")
  (parameters
    '("GtkEventController*" "controller")
  )
)

(define-method create_pango_context
  (of-object "GtkWidget")
  (c-name "gtk_widget_create_pango_context")
  (return-type "PangoContext*")
)

(define-method get_pango_context
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_pango_context")
  (return-type "PangoContext*")
)

(define-method set_font_options
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_font_options")
  (return-type "none")
  (parameters
    '("const-cairo_font_options_t*" "options")
  )
)

(define-method get_font_options
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_font_options")
  (return-type "const-cairo_font_options_t*")
)

(define-method create_pango_layout
  (of-object "GtkWidget")
  (c-name "gtk_widget_create_pango_layout")
  (return-type "PangoLayout*")
  (parameters
    '("const-char*" "text")
  )
)

(define-method set_direction
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_direction")
  (return-type "none")
  (parameters
    '("GtkTextDirection" "dir")
  )
)

(define-method get_direction
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_direction")
  (return-type "GtkTextDirection")
)

(define-function gtk_widget_set_default_direction
  (c-name "gtk_widget_set_default_direction")
  (return-type "none")
  (parameters
    '("GtkTextDirection" "dir")
  )
)

(define-function gtk_widget_get_default_direction
  (c-name "gtk_widget_get_default_direction")
  (return-type "GtkTextDirection")
)

(define-method set_cursor
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_cursor")
  (return-type "none")
  (parameters
    '("GdkCursor*" "cursor")
  )
)

(define-method set_cursor_from_name
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_cursor_from_name")
  (return-type "none")
  (parameters
    '("const-char*" "name")
  )
)

(define-method get_cursor
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_cursor")
  (return-type "GdkCursor*")
)

(define-method list_mnemonic_labels
  (of-object "GtkWidget")
  (c-name "gtk_widget_list_mnemonic_labels")
  (return-type "GList*")
)

(define-method add_mnemonic_label
  (of-object "GtkWidget")
  (c-name "gtk_widget_add_mnemonic_label")
  (return-type "none")
  (parameters
    '("GtkWidget*" "label")
  )
)

(define-method remove_mnemonic_label
  (of-object "GtkWidget")
  (c-name "gtk_widget_remove_mnemonic_label")
  (return-type "none")
  (parameters
    '("GtkWidget*" "label")
  )
)

(define-method trigger_tooltip_query
  (of-object "GtkWidget")
  (c-name "gtk_widget_trigger_tooltip_query")
  (return-type "none")
)

(define-method set_tooltip_text
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_tooltip_text")
  (return-type "none")
  (parameters
    '("const-char*" "text")
  )
)

(define-method get_tooltip_text
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_tooltip_text")
  (return-type "const-char*")
)

(define-method set_tooltip_markup
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_tooltip_markup")
  (return-type "none")
  (parameters
    '("const-char*" "markup")
  )
)

(define-method get_tooltip_markup
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_tooltip_markup")
  (return-type "const-char*")
)

(define-method set_has_tooltip
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_has_tooltip")
  (return-type "none")
  (parameters
    '("gboolean" "has_tooltip")
  )
)

(define-method get_has_tooltip
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_has_tooltip")
  (return-type "gboolean")
)

(define-function gtk_requisition_get_type
  (c-name "gtk_requisition_get_type")
  (return-type "GType")
)

(define-function gtk_requisition_new
  (c-name "gtk_requisition_new")
  (is-constructor-of "GtkRequisition")
  (return-type "GtkRequisition*")
)

(define-method copy
  (of-object "GtkRequisition")
  (c-name "gtk_requisition_copy")
  (return-type "GtkRequisition*")
)

(define-method free
  (of-object "GtkRequisition")
  (c-name "gtk_requisition_free")
  (return-type "none")
)

(define-method in_destruction
  (of-object "GtkWidget")
  (c-name "gtk_widget_in_destruction")
  (return-type "gboolean")
)

(define-method get_style_context
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_style_context")
  (return-type "GtkStyleContext*")
)

(define-method set_css_name
  (of-object "GtkWidgetClass")
  (c-name "gtk_widget_class_set_css_name")
  (return-type "none")
  (parameters
    '("const-char*" "name")
  )
)

(define-method get_css_name
  (of-object "GtkWidgetClass")
  (c-name "gtk_widget_class_get_css_name")
  (return-type "const-char*")
)

(define-method add_tick_callback
  (of-object "GtkWidget")
  (c-name "gtk_widget_add_tick_callback")
  (return-type "guint")
  (parameters
    '("GtkTickCallback" "callback")
    '("gpointer" "user_data")
    '("GDestroyNotify" "notify")
  )
)

(define-method remove_tick_callback
  (of-object "GtkWidget")
  (c-name "gtk_widget_remove_tick_callback")
  (return-type "none")
  (parameters
    '("guint" "id")
  )
)

(define-method init_template
  (of-object "GtkWidget")
  (c-name "gtk_widget_init_template")
  (return-type "none")
)

(define-method get_template_child
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_template_child")
  (return-type "GObject*")
  (parameters
    '("GType" "widget_type")
    '("const-char*" "name")
  )
)

(define-method set_template
  (of-object "GtkWidgetClass")
  (c-name "gtk_widget_class_set_template")
  (return-type "none")
  (parameters
    '("GBytes*" "template_bytes")
  )
)

(define-method set_template_from_resource
  (of-object "GtkWidgetClass")
  (c-name "gtk_widget_class_set_template_from_resource")
  (return-type "none")
  (parameters
    '("const-char*" "resource_name")
  )
)

(define-method bind_template_callback_full
  (of-object "GtkWidgetClass")
  (c-name "gtk_widget_class_bind_template_callback_full")
  (return-type "none")
  (parameters
    '("const-char*" "callback_name")
    '("GCallback" "callback_symbol")
  )
)

(define-method set_template_scope
  (of-object "GtkWidgetClass")
  (c-name "gtk_widget_class_set_template_scope")
  (return-type "none")
  (parameters
    '("GtkBuilderScope*" "scope")
  )
)

(define-method bind_template_child_full
  (of-object "GtkWidgetClass")
  (c-name "gtk_widget_class_bind_template_child_full")
  (return-type "none")
  (parameters
    '("const-char*" "name")
    '("gboolean" "internal_child")
    '("gssize" "struct_offset")
  )
)

(define-method insert_action_group
  (of-object "GtkWidget")
  (c-name "gtk_widget_insert_action_group")
  (return-type "none")
  (parameters
    '("const-char*" "name")
    '("GActionGroup*" "group")
  )
)

(define-method activate_action
  (of-object "GtkWidget")
  (c-name "gtk_widget_activate_action")
  (return-type "gboolean")
  (parameters
    '("const-char*" "name")
    '("const-char*" "format_string")
  )
  (varargs #t)
)

(define-method activate_action_variant
  (of-object "GtkWidget")
  (c-name "gtk_widget_activate_action_variant")
  (return-type "gboolean")
  (parameters
    '("const-char*" "name")
    '("GVariant*" "args")
  )
)

(define-method activate_default
  (of-object "GtkWidget")
  (c-name "gtk_widget_activate_default")
  (return-type "none")
)

(define-method set_font_map
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_font_map")
  (return-type "none")
  (parameters
    '("PangoFontMap*" "font_map")
  )
)

(define-method get_font_map
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_font_map")
  (return-type "PangoFontMap*")
)

(define-method get_first_child
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_first_child")
  (return-type "GtkWidget*")
)

(define-method get_last_child
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_last_child")
  (return-type "GtkWidget*")
)

(define-method get_next_sibling
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_next_sibling")
  (return-type "GtkWidget*")
)

(define-method get_prev_sibling
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_prev_sibling")
  (return-type "GtkWidget*")
)

(define-method observe_children
  (of-object "GtkWidget")
  (c-name "gtk_widget_observe_children")
  (return-type "GListModel*")
)

(define-method observe_controllers
  (of-object "GtkWidget")
  (c-name "gtk_widget_observe_controllers")
  (return-type "GListModel*")
)

(define-method insert_after
  (of-object "GtkWidget")
  (c-name "gtk_widget_insert_after")
  (return-type "none")
  (parameters
    '("GtkWidget*" "parent")
    '("GtkWidget*" "previous_sibling")
  )
)

(define-method insert_before
  (of-object "GtkWidget")
  (c-name "gtk_widget_insert_before")
  (return-type "none")
  (parameters
    '("GtkWidget*" "parent")
    '("GtkWidget*" "next_sibling")
  )
)

(define-method set_focus_child
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_focus_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_focus_child
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_focus_child")
  (return-type "GtkWidget*")
)

(define-method snapshot_child
  (of-object "GtkWidget")
  (c-name "gtk_widget_snapshot_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("GtkSnapshot*" "snapshot")
  )
)

(define-method should_layout
  (of-object "GtkWidget")
  (c-name "gtk_widget_should_layout")
  (return-type "gboolean")
)

(define-method get_css_name
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_css_name")
  (return-type "const-char*")
)

(define-method add_css_class
  (of-object "GtkWidget")
  (c-name "gtk_widget_add_css_class")
  (return-type "none")
  (parameters
    '("const-char*" "css_class")
  )
)

(define-method remove_css_class
  (of-object "GtkWidget")
  (c-name "gtk_widget_remove_css_class")
  (return-type "none")
  (parameters
    '("const-char*" "css_class")
  )
)

(define-method has_css_class
  (of-object "GtkWidget")
  (c-name "gtk_widget_has_css_class")
  (return-type "gboolean")
  (parameters
    '("const-char*" "css_class")
  )
)

(define-method get_css_classes
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_css_classes")
  (return-type "char**")
)

(define-method set_css_classes
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_css_classes")
  (return-type "none")
  (parameters
    '("const-char**" "classes")
  )
)

(define-method install_action
  (of-object "GtkWidgetClass")
  (c-name "gtk_widget_class_install_action")
  (return-type "none")
  (parameters
    '("const-char*" "action_name")
    '("const-char*" "parameter_type")
    '("GtkWidgetActionActivateFunc" "activate")
  )
)

(define-method install_property_action
  (of-object "GtkWidgetClass")
  (c-name "gtk_widget_class_install_property_action")
  (return-type "none")
  (parameters
    '("const-char*" "action_name")
    '("const-char*" "property_name")
  )
)

(define-method query_action
  (of-object "GtkWidgetClass")
  (c-name "gtk_widget_class_query_action")
  (return-type "gboolean")
  (parameters
    '("guint" "index_")
    '("GType*" "owner")
    '("const-char**" "action_name")
    '("const-GVariantType**" "parameter_type")
    '("const-char**" "property_name")
  )
)

(define-method action_set_enabled
  (of-object "GtkWidget")
  (c-name "gtk_widget_action_set_enabled")
  (return-type "none")
  (parameters
    '("const-char*" "action_name")
    '("gboolean" "enabled")
  )
)

(define-method set_accessible_role
  (of-object "GtkWidgetClass")
  (c-name "gtk_widget_class_set_accessible_role")
  (return-type "none")
  (parameters
    '("GtkAccessibleRole" "accessible_role")
  )
)

(define-method get_accessible_role
  (of-object "GtkWidgetClass")
  (c-name "gtk_widget_class_get_accessible_role")
  (return-type "GtkAccessibleRole")
)



;; From gtkwidgetpaintable.h

(define-method paintable_new
  (of-object "GtkWidget")
  (c-name "gtk_widget_paintable_new")
  (return-type "GdkPaintable*")
)

(define-method get_widget
  (of-object "GtkWidgetPaintable")
  (c-name "gtk_widget_paintable_get_widget")
  (return-type "GtkWidget*")
)

(define-method set_widget
  (of-object "GtkWidgetPaintable")
  (c-name "gtk_widget_paintable_set_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)



;; From gtkwindowcontrols.h

(define-function gtk_window_controls_new
  (c-name "gtk_window_controls_new")
  (is-constructor-of "GtkWindowControls")
  (return-type "GtkWidget*")
  (parameters
    '("GtkPackType" "side")
  )
)

(define-method get_side
  (of-object "GtkWindowControls")
  (c-name "gtk_window_controls_get_side")
  (return-type "GtkPackType")
)

(define-method set_side
  (of-object "GtkWindowControls")
  (c-name "gtk_window_controls_set_side")
  (return-type "none")
  (parameters
    '("GtkPackType" "side")
  )
)

(define-method get_decoration_layout
  (of-object "GtkWindowControls")
  (c-name "gtk_window_controls_get_decoration_layout")
  (return-type "const-char*")
)

(define-method set_decoration_layout
  (of-object "GtkWindowControls")
  (c-name "gtk_window_controls_set_decoration_layout")
  (return-type "none")
  (parameters
    '("const-char*" "layout")
  )
)

(define-method get_empty
  (of-object "GtkWindowControls")
  (c-name "gtk_window_controls_get_empty")
  (return-type "gboolean")
)



;; From gtkwindowgroup.h

(define-function gtk_window_group_get_type
  (c-name "gtk_window_group_get_type")
  (return-type "GType")
)

(define-function gtk_window_group_new
  (c-name "gtk_window_group_new")
  (is-constructor-of "GtkWindowGroup")
  (return-type "GtkWindowGroup*")
)

(define-method add_window
  (of-object "GtkWindowGroup")
  (c-name "gtk_window_group_add_window")
  (return-type "none")
  (parameters
    '("GtkWindow*" "window")
  )
)

(define-method remove_window
  (of-object "GtkWindowGroup")
  (c-name "gtk_window_group_remove_window")
  (return-type "none")
  (parameters
    '("GtkWindow*" "window")
  )
)

(define-method list_windows
  (of-object "GtkWindowGroup")
  (c-name "gtk_window_group_list_windows")
  (return-type "GList*")
)



;; From gtkwindow.h

(define-function gtk_window_get_type
  (c-name "gtk_window_get_type")
  (return-type "GType")
)

(define-function gtk_window_new
  (c-name "gtk_window_new")
  (is-constructor-of "GtkWindow")
  (return-type "GtkWidget*")
)

(define-method set_title
  (of-object "GtkWindow")
  (c-name "gtk_window_set_title")
  (return-type "none")
  (parameters
    '("const-char*" "title")
  )
)

(define-method get_title
  (of-object "GtkWindow")
  (c-name "gtk_window_get_title")
  (return-type "const-char*")
)

(define-method set_startup_id
  (of-object "GtkWindow")
  (c-name "gtk_window_set_startup_id")
  (return-type "none")
  (parameters
    '("const-char*" "startup_id")
  )
)

(define-method set_focus
  (of-object "GtkWindow")
  (c-name "gtk_window_set_focus")
  (return-type "none")
  (parameters
    '("GtkWidget*" "focus")
  )
)

(define-method get_focus
  (of-object "GtkWindow")
  (c-name "gtk_window_get_focus")
  (return-type "GtkWidget*")
)

(define-method set_default_widget
  (of-object "GtkWindow")
  (c-name "gtk_window_set_default_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "default_widget")
  )
)

(define-method get_default_widget
  (of-object "GtkWindow")
  (c-name "gtk_window_get_default_widget")
  (return-type "GtkWidget*")
)

(define-method set_transient_for
  (of-object "GtkWindow")
  (c-name "gtk_window_set_transient_for")
  (return-type "none")
  (parameters
    '("GtkWindow*" "parent")
  )
)

(define-method get_transient_for
  (of-object "GtkWindow")
  (c-name "gtk_window_get_transient_for")
  (return-type "GtkWindow*")
)

(define-method set_destroy_with_parent
  (of-object "GtkWindow")
  (c-name "gtk_window_set_destroy_with_parent")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_destroy_with_parent
  (of-object "GtkWindow")
  (c-name "gtk_window_get_destroy_with_parent")
  (return-type "gboolean")
)

(define-method set_hide_on_close
  (of-object "GtkWindow")
  (c-name "gtk_window_set_hide_on_close")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_hide_on_close
  (of-object "GtkWindow")
  (c-name "gtk_window_get_hide_on_close")
  (return-type "gboolean")
)

(define-method set_mnemonics_visible
  (of-object "GtkWindow")
  (c-name "gtk_window_set_mnemonics_visible")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_mnemonics_visible
  (of-object "GtkWindow")
  (c-name "gtk_window_get_mnemonics_visible")
  (return-type "gboolean")
)

(define-method set_focus_visible
  (of-object "GtkWindow")
  (c-name "gtk_window_set_focus_visible")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_focus_visible
  (of-object "GtkWindow")
  (c-name "gtk_window_get_focus_visible")
  (return-type "gboolean")
)

(define-method set_resizable
  (of-object "GtkWindow")
  (c-name "gtk_window_set_resizable")
  (return-type "none")
  (parameters
    '("gboolean" "resizable")
  )
)

(define-method get_resizable
  (of-object "GtkWindow")
  (c-name "gtk_window_get_resizable")
  (return-type "gboolean")
)

(define-method set_display
  (of-object "GtkWindow")
  (c-name "gtk_window_set_display")
  (return-type "none")
  (parameters
    '("GdkDisplay*" "display")
  )
)

(define-method is_active
  (of-object "GtkWindow")
  (c-name "gtk_window_is_active")
  (return-type "gboolean")
)

(define-method set_decorated
  (of-object "GtkWindow")
  (c-name "gtk_window_set_decorated")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_decorated
  (of-object "GtkWindow")
  (c-name "gtk_window_get_decorated")
  (return-type "gboolean")
)

(define-method set_deletable
  (of-object "GtkWindow")
  (c-name "gtk_window_set_deletable")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_deletable
  (of-object "GtkWindow")
  (c-name "gtk_window_get_deletable")
  (return-type "gboolean")
)

(define-method set_icon_name
  (of-object "GtkWindow")
  (c-name "gtk_window_set_icon_name")
  (return-type "none")
  (parameters
    '("const-char*" "name")
  )
)

(define-method get_icon_name
  (of-object "GtkWindow")
  (c-name "gtk_window_get_icon_name")
  (return-type "const-char*")
)

(define-function gtk_window_set_default_icon_name
  (c-name "gtk_window_set_default_icon_name")
  (return-type "none")
  (parameters
    '("const-char*" "name")
  )
)

(define-function gtk_window_get_default_icon_name
  (c-name "gtk_window_get_default_icon_name")
  (return-type "const-char*")
)

(define-function gtk_window_set_auto_startup_notification
  (c-name "gtk_window_set_auto_startup_notification")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method set_modal
  (of-object "GtkWindow")
  (c-name "gtk_window_set_modal")
  (return-type "none")
  (parameters
    '("gboolean" "modal")
  )
)

(define-method get_modal
  (of-object "GtkWindow")
  (c-name "gtk_window_get_modal")
  (return-type "gboolean")
)

(define-function gtk_window_get_toplevels
  (c-name "gtk_window_get_toplevels")
  (return-type "GListModel*")
)

(define-function gtk_window_list_toplevels
  (c-name "gtk_window_list_toplevels")
  (return-type "GList*")
)

(define-method present
  (of-object "GtkWindow")
  (c-name "gtk_window_present")
  (return-type "none")
)

(define-method present_with_time
  (of-object "GtkWindow")
  (c-name "gtk_window_present_with_time")
  (return-type "none")
  (parameters
    '("guint32" "timestamp")
  )
)

(define-method minimize
  (of-object "GtkWindow")
  (c-name "gtk_window_minimize")
  (return-type "none")
)

(define-method unminimize
  (of-object "GtkWindow")
  (c-name "gtk_window_unminimize")
  (return-type "none")
)

(define-method maximize
  (of-object "GtkWindow")
  (c-name "gtk_window_maximize")
  (return-type "none")
)

(define-method unmaximize
  (of-object "GtkWindow")
  (c-name "gtk_window_unmaximize")
  (return-type "none")
)

(define-method fullscreen
  (of-object "GtkWindow")
  (c-name "gtk_window_fullscreen")
  (return-type "none")
)

(define-method unfullscreen
  (of-object "GtkWindow")
  (c-name "gtk_window_unfullscreen")
  (return-type "none")
)

(define-method fullscreen_on_monitor
  (of-object "GtkWindow")
  (c-name "gtk_window_fullscreen_on_monitor")
  (return-type "none")
  (parameters
    '("GdkMonitor*" "monitor")
  )
)

(define-method close
  (of-object "GtkWindow")
  (c-name "gtk_window_close")
  (return-type "none")
)

(define-method set_default_size
  (of-object "GtkWindow")
  (c-name "gtk_window_set_default_size")
  (return-type "none")
  (parameters
    '("int" "width")
    '("int" "height")
  )
)

(define-method get_default_size
  (of-object "GtkWindow")
  (c-name "gtk_window_get_default_size")
  (return-type "none")
  (parameters
    '("int*" "width")
    '("int*" "height")
  )
)

(define-method get_group
  (of-object "GtkWindow")
  (c-name "gtk_window_get_group")
  (return-type "GtkWindowGroup*")
)

(define-method has_group
  (of-object "GtkWindow")
  (c-name "gtk_window_has_group")
  (return-type "gboolean")
)

(define-method get_application
  (of-object "GtkWindow")
  (c-name "gtk_window_get_application")
  (return-type "GtkApplication*")
)

(define-method set_application
  (of-object "GtkWindow")
  (c-name "gtk_window_set_application")
  (return-type "none")
  (parameters
    '("GtkApplication*" "application")
  )
)

(define-method set_child
  (of-object "GtkWindow")
  (c-name "gtk_window_set_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_child
  (of-object "GtkWindow")
  (c-name "gtk_window_get_child")
  (return-type "GtkWidget*")
)

(define-method set_titlebar
  (of-object "GtkWindow")
  (c-name "gtk_window_set_titlebar")
  (return-type "none")
  (parameters
    '("GtkWidget*" "titlebar")
  )
)

(define-method get_titlebar
  (of-object "GtkWindow")
  (c-name "gtk_window_get_titlebar")
  (return-type "GtkWidget*")
)

(define-method is_maximized
  (of-object "GtkWindow")
  (c-name "gtk_window_is_maximized")
  (return-type "gboolean")
)

(define-method is_fullscreen
  (of-object "GtkWindow")
  (c-name "gtk_window_is_fullscreen")
  (return-type "gboolean")
)

(define-method destroy
  (of-object "GtkWindow")
  (c-name "gtk_window_destroy")
  (return-type "none")
)

(define-function gtk_window_set_interactive_debugging
  (c-name "gtk_window_set_interactive_debugging")
  (return-type "none")
  (parameters
    '("gboolean" "enable")
  )
)



;; From gtkwindowhandle.h

(define-function gtk_window_handle_new
  (c-name "gtk_window_handle_new")
  (is-constructor-of "GtkWindowHandle")
  (return-type "GtkWidget*")
)

(define-method get_child
  (of-object "GtkWindowHandle")
  (c-name "gtk_window_handle_get_child")
  (return-type "GtkWidget*")
)

(define-method set_child
  (of-object "GtkWindowHandle")
  (c-name "gtk_window_handle_set_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)



;; From gtkcssenums.h



;; From gtkcsserror.h

(define-function gtk_css_parser_error_quark
  (c-name "gtk_css_parser_error_quark")
  (return-type "GQuark")
)

(define-function gtk_css_parser_warning_quark
  (c-name "gtk_css_parser_warning_quark")
  (return-type "GQuark")
)



;; From gtkcss.h



;; From gtkcsslocation.h



;; From gtkcsssection.h

(define-function gtk_css_section_get_type
  (c-name "gtk_css_section_get_type")
  (return-type "GType")
)

(define-function gtk_css_section_new
  (c-name "gtk_css_section_new")
  (is-constructor-of "GtkCssSection")
  (return-type "GtkCssSection*")
  (parameters
    '("GFile*" "file")
    '("const-GtkCssLocation*" "start")
    '("const-GtkCssLocation*" "end")
  )
)

(define-method ref
  (of-object "GtkCssSection")
  (c-name "gtk_css_section_ref")
  (return-type "GtkCssSection*")
)

(define-method unref
  (of-object "GtkCssSection")
  (c-name "gtk_css_section_unref")
  (return-type "none")
)

(define-method print
  (of-object "GtkCssSection")
  (c-name "gtk_css_section_print")
  (return-type "none")
  (parameters
    '("GString*" "string")
  )
)

(define-method to_string
  (of-object "GtkCssSection")
  (c-name "gtk_css_section_to_string")
  (return-type "char*")
)

(define-method get_parent
  (of-object "GtkCssSection")
  (c-name "gtk_css_section_get_parent")
  (return-type "GtkCssSection*")
)

(define-method get_file
  (of-object "GtkCssSection")
  (c-name "gtk_css_section_get_file")
  (return-type "GFile*")
)

(define-method get_start_location
  (of-object "GtkCssSection")
  (c-name "gtk_css_section_get_start_location")
  (return-type "const-GtkCssLocation*")
)

(define-method get_end_location
  (of-object "GtkCssSection")
  (c-name "gtk_css_section_get_end_location")
  (return-type "const-GtkCssLocation*")
)



;; From gtkdbusgenerated.h



;; From gtkmarshalers.h



;; From gtkprivatetypebuiltins.h



;; From gtkresources.h



;; From gtktypebuiltins.h

(define-function gtk_license_get_type
  (c-name "gtk_license_get_type")
  (return-type "GType")
)

(define-function gtk_application_inhibit_flags_get_type
  (c-name "gtk_application_inhibit_flags_get_type")
  (return-type "GType")
)

(define-function gtk_assistant_page_type_get_type
  (c-name "gtk_assistant_page_type_get_type")
  (return-type "GType")
)

(define-function gtk_builder_error_get_type
  (c-name "gtk_builder_error_get_type")
  (return-type "GType")
)

(define-function gtk_builder_closure_flags_get_type
  (c-name "gtk_builder_closure_flags_get_type")
  (return-type "GType")
)

(define-function gtk_cell_renderer_state_get_type
  (c-name "gtk_cell_renderer_state_get_type")
  (return-type "GType")
)

(define-function gtk_cell_renderer_mode_get_type
  (c-name "gtk_cell_renderer_mode_get_type")
  (return-type "GType")
)

(define-function gtk_cell_renderer_accel_mode_get_type
  (c-name "gtk_cell_renderer_accel_mode_get_type")
  (return-type "GType")
)

(define-function gtk_debug_flags_get_type
  (c-name "gtk_debug_flags_get_type")
  (return-type "GType")
)

(define-function gtk_dialog_flags_get_type
  (c-name "gtk_dialog_flags_get_type")
  (return-type "GType")
)

(define-function gtk_response_type_get_type
  (c-name "gtk_response_type_get_type")
  (return-type "GType")
)

(define-function gtk_editable_properties_get_type
  (c-name "gtk_editable_properties_get_type")
  (return-type "GType")
)

(define-function gtk_entry_icon_position_get_type
  (c-name "gtk_entry_icon_position_get_type")
  (return-type "GType")
)

(define-function gtk_align_get_type
  (c-name "gtk_align_get_type")
  (return-type "GType")
)

(define-function gtk_arrow_type_get_type
  (c-name "gtk_arrow_type_get_type")
  (return-type "GType")
)

(define-function gtk_baseline_position_get_type
  (c-name "gtk_baseline_position_get_type")
  (return-type "GType")
)

(define-function gtk_delete_type_get_type
  (c-name "gtk_delete_type_get_type")
  (return-type "GType")
)

(define-function gtk_direction_type_get_type
  (c-name "gtk_direction_type_get_type")
  (return-type "GType")
)

(define-function gtk_icon_size_get_type
  (c-name "gtk_icon_size_get_type")
  (return-type "GType")
)

(define-function gtk_sensitivity_type_get_type
  (c-name "gtk_sensitivity_type_get_type")
  (return-type "GType")
)

(define-function gtk_text_direction_get_type
  (c-name "gtk_text_direction_get_type")
  (return-type "GType")
)

(define-function gtk_justification_get_type
  (c-name "gtk_justification_get_type")
  (return-type "GType")
)

(define-function gtk_message_type_get_type
  (c-name "gtk_message_type_get_type")
  (return-type "GType")
)

(define-function gtk_movement_step_get_type
  (c-name "gtk_movement_step_get_type")
  (return-type "GType")
)

(define-function gtk_scroll_step_get_type
  (c-name "gtk_scroll_step_get_type")
  (return-type "GType")
)

(define-function gtk_orientation_get_type
  (c-name "gtk_orientation_get_type")
  (return-type "GType")
)

(define-function gtk_overflow_get_type
  (c-name "gtk_overflow_get_type")
  (return-type "GType")
)

(define-function gtk_pack_type_get_type
  (c-name "gtk_pack_type_get_type")
  (return-type "GType")
)

(define-function gtk_position_type_get_type
  (c-name "gtk_position_type_get_type")
  (return-type "GType")
)

(define-function gtk_scroll_type_get_type
  (c-name "gtk_scroll_type_get_type")
  (return-type "GType")
)

(define-function gtk_selection_mode_get_type
  (c-name "gtk_selection_mode_get_type")
  (return-type "GType")
)

(define-function gtk_wrap_mode_get_type
  (c-name "gtk_wrap_mode_get_type")
  (return-type "GType")
)

(define-function gtk_sort_type_get_type
  (c-name "gtk_sort_type_get_type")
  (return-type "GType")
)

(define-function gtk_print_pages_get_type
  (c-name "gtk_print_pages_get_type")
  (return-type "GType")
)

(define-function gtk_page_set_get_type
  (c-name "gtk_page_set_get_type")
  (return-type "GType")
)

(define-function gtk_number_up_layout_get_type
  (c-name "gtk_number_up_layout_get_type")
  (return-type "GType")
)

(define-function gtk_ordering_get_type
  (c-name "gtk_ordering_get_type")
  (return-type "GType")
)

(define-function gtk_page_orientation_get_type
  (c-name "gtk_page_orientation_get_type")
  (return-type "GType")
)

(define-function gtk_print_quality_get_type
  (c-name "gtk_print_quality_get_type")
  (return-type "GType")
)

(define-function gtk_print_duplex_get_type
  (c-name "gtk_print_duplex_get_type")
  (return-type "GType")
)

(define-function gtk_unit_get_type
  (c-name "gtk_unit_get_type")
  (return-type "GType")
)

(define-function gtk_tree_view_grid_lines_get_type
  (c-name "gtk_tree_view_grid_lines_get_type")
  (return-type "GType")
)

(define-function gtk_size_group_mode_get_type
  (c-name "gtk_size_group_mode_get_type")
  (return-type "GType")
)

(define-function gtk_size_request_mode_get_type
  (c-name "gtk_size_request_mode_get_type")
  (return-type "GType")
)

(define-function gtk_scrollable_policy_get_type
  (c-name "gtk_scrollable_policy_get_type")
  (return-type "GType")
)

(define-function gtk_state_flags_get_type
  (c-name "gtk_state_flags_get_type")
  (return-type "GType")
)

(define-function gtk_border_style_get_type
  (c-name "gtk_border_style_get_type")
  (return-type "GType")
)

(define-function gtk_level_bar_mode_get_type
  (c-name "gtk_level_bar_mode_get_type")
  (return-type "GType")
)

(define-function gtk_input_purpose_get_type
  (c-name "gtk_input_purpose_get_type")
  (return-type "GType")
)

(define-function gtk_input_hints_get_type
  (c-name "gtk_input_hints_get_type")
  (return-type "GType")
)

(define-function gtk_propagation_phase_get_type
  (c-name "gtk_propagation_phase_get_type")
  (return-type "GType")
)

(define-function gtk_propagation_limit_get_type
  (c-name "gtk_propagation_limit_get_type")
  (return-type "GType")
)

(define-function gtk_event_sequence_state_get_type
  (c-name "gtk_event_sequence_state_get_type")
  (return-type "GType")
)

(define-function gtk_pan_direction_get_type
  (c-name "gtk_pan_direction_get_type")
  (return-type "GType")
)

(define-function gtk_shortcut_scope_get_type
  (c-name "gtk_shortcut_scope_get_type")
  (return-type "GType")
)

(define-function gtk_pick_flags_get_type
  (c-name "gtk_pick_flags_get_type")
  (return-type "GType")
)

(define-function gtk_constraint_relation_get_type
  (c-name "gtk_constraint_relation_get_type")
  (return-type "GType")
)

(define-function gtk_constraint_strength_get_type
  (c-name "gtk_constraint_strength_get_type")
  (return-type "GType")
)

(define-function gtk_constraint_attribute_get_type
  (c-name "gtk_constraint_attribute_get_type")
  (return-type "GType")
)

(define-function gtk_constraint_vfl_parser_error_get_type
  (c-name "gtk_constraint_vfl_parser_error_get_type")
  (return-type "GType")
)

(define-function gtk_system_setting_get_type
  (c-name "gtk_system_setting_get_type")
  (return-type "GType")
)

(define-function gtk_accessible_role_get_type
  (c-name "gtk_accessible_role_get_type")
  (return-type "GType")
)

(define-function gtk_accessible_state_get_type
  (c-name "gtk_accessible_state_get_type")
  (return-type "GType")
)

(define-function gtk_accessible_property_get_type
  (c-name "gtk_accessible_property_get_type")
  (return-type "GType")
)

(define-function gtk_accessible_relation_get_type
  (c-name "gtk_accessible_relation_get_type")
  (return-type "GType")
)

(define-function gtk_accessible_tristate_get_type
  (c-name "gtk_accessible_tristate_get_type")
  (return-type "GType")
)

(define-function gtk_accessible_invalid_state_get_type
  (c-name "gtk_accessible_invalid_state_get_type")
  (return-type "GType")
)

(define-function gtk_accessible_autocomplete_get_type
  (c-name "gtk_accessible_autocomplete_get_type")
  (return-type "GType")
)

(define-function gtk_accessible_sort_get_type
  (c-name "gtk_accessible_sort_get_type")
  (return-type "GType")
)

(define-function gtk_event_controller_scroll_flags_get_type
  (c-name "gtk_event_controller_scroll_flags_get_type")
  (return-type "GType")
)

(define-function gtk_file_chooser_action_get_type
  (c-name "gtk_file_chooser_action_get_type")
  (return-type "GType")
)

(define-function gtk_file_chooser_error_get_type
  (c-name "gtk_file_chooser_error_get_type")
  (return-type "GType")
)

(define-function gtk_filter_match_get_type
  (c-name "gtk_filter_match_get_type")
  (return-type "GType")
)

(define-function gtk_filter_change_get_type
  (c-name "gtk_filter_change_get_type")
  (return-type "GType")
)

(define-function gtk_font_chooser_level_get_type
  (c-name "gtk_font_chooser_level_get_type")
  (return-type "GType")
)

(define-function gtk_icon_lookup_flags_get_type
  (c-name "gtk_icon_lookup_flags_get_type")
  (return-type "GType")
)

(define-function gtk_icon_theme_error_get_type
  (c-name "gtk_icon_theme_error_get_type")
  (return-type "GType")
)

(define-function gtk_icon_view_drop_position_get_type
  (c-name "gtk_icon_view_drop_position_get_type")
  (return-type "GType")
)

(define-function gtk_image_type_get_type
  (c-name "gtk_image_type_get_type")
  (return-type "GType")
)

(define-function gtk_buttons_type_get_type
  (c-name "gtk_buttons_type_get_type")
  (return-type "GType")
)

(define-function gtk_notebook_tab_get_type
  (c-name "gtk_notebook_tab_get_type")
  (return-type "GType")
)

(define-function gtk_pad_action_type_get_type
  (c-name "gtk_pad_action_type_get_type")
  (return-type "GType")
)

(define-function gtk_popover_menu_flags_get_type
  (c-name "gtk_popover_menu_flags_get_type")
  (return-type "GType")
)

(define-function gtk_print_status_get_type
  (c-name "gtk_print_status_get_type")
  (return-type "GType")
)

(define-function gtk_print_operation_result_get_type
  (c-name "gtk_print_operation_result_get_type")
  (return-type "GType")
)

(define-function gtk_print_operation_action_get_type
  (c-name "gtk_print_operation_action_get_type")
  (return-type "GType")
)

(define-function gtk_print_error_get_type
  (c-name "gtk_print_error_get_type")
  (return-type "GType")
)

(define-function gtk_recent_manager_error_get_type
  (c-name "gtk_recent_manager_error_get_type")
  (return-type "GType")
)

(define-function gtk_revealer_transition_type_get_type
  (c-name "gtk_revealer_transition_type_get_type")
  (return-type "GType")
)

(define-function gtk_corner_type_get_type
  (c-name "gtk_corner_type_get_type")
  (return-type "GType")
)

(define-function gtk_policy_type_get_type
  (c-name "gtk_policy_type_get_type")
  (return-type "GType")
)

(define-function gtk_shortcut_action_flags_get_type
  (c-name "gtk_shortcut_action_flags_get_type")
  (return-type "GType")
)

(define-function gtk_shortcut_type_get_type
  (c-name "gtk_shortcut_type_get_type")
  (return-type "GType")
)

(define-function gtk_sorter_order_get_type
  (c-name "gtk_sorter_order_get_type")
  (return-type "GType")
)

(define-function gtk_sorter_change_get_type
  (c-name "gtk_sorter_change_get_type")
  (return-type "GType")
)

(define-function gtk_spin_button_update_policy_get_type
  (c-name "gtk_spin_button_update_policy_get_type")
  (return-type "GType")
)

(define-function gtk_spin_type_get_type
  (c-name "gtk_spin_type_get_type")
  (return-type "GType")
)

(define-function gtk_stack_transition_type_get_type
  (c-name "gtk_stack_transition_type_get_type")
  (return-type "GType")
)

(define-function gtk_string_filter_match_mode_get_type
  (c-name "gtk_string_filter_match_mode_get_type")
  (return-type "GType")
)

(define-function gtk_style_context_print_flags_get_type
  (c-name "gtk_style_context_print_flags_get_type")
  (return-type "GType")
)

(define-function gtk_text_search_flags_get_type
  (c-name "gtk_text_search_flags_get_type")
  (return-type "GType")
)

(define-function gtk_text_window_type_get_type
  (c-name "gtk_text_window_type_get_type")
  (return-type "GType")
)

(define-function gtk_text_view_layer_get_type
  (c-name "gtk_text_view_layer_get_type")
  (return-type "GType")
)

(define-function gtk_text_extend_selection_get_type
  (c-name "gtk_text_extend_selection_get_type")
  (return-type "GType")
)

(define-function gtk_tree_model_flags_get_type
  (c-name "gtk_tree_model_flags_get_type")
  (return-type "GType")
)

(define-function gtk_tree_view_drop_position_get_type
  (c-name "gtk_tree_view_drop_position_get_type")
  (return-type "GType")
)

(define-function gtk_tree_view_column_sizing_get_type
  (c-name "gtk_tree_view_column_sizing_get_type")
  (return-type "GType")
)



;; From gtkversion.h

(define-function gtk_get_major_version
  (c-name "gtk_get_major_version")
  (return-type "guint")
)

(define-function gtk_get_minor_version
  (c-name "gtk_get_minor_version")
  (return-type "guint")
)

(define-function gtk_get_micro_version
  (c-name "gtk_get_micro_version")
  (return-type "guint")
)

(define-function gtk_get_binary_age
  (c-name "gtk_get_binary_age")
  (return-type "guint")
)

(define-function gtk_get_interface_age
  (c-name "gtk_get_interface_age")
  (return-type "guint")
)

(define-function gtk_check_version
  (c-name "gtk_check_version")
  (return-type "const-char*")
  (parameters
    '("guint" "required_major")
    '("guint" "required_minor")
    '("guint" "required_micro")
  )
)



;; From gtkcssenumtypes.h

(define-function gtk_css_parser_error_get_type
  (c-name "gtk_css_parser_error_get_type")
  (return-type "GType")
)

(define-function gtk_css_parser_warning_get_type
  (c-name "gtk_css_parser_warning_get_type")
  (return-type "GType")
)


