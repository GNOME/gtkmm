/* Copyright (C) 2020 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library. If not, see <http://www.gnu.org/licenses/>.
 */

#include <gtkmm/eventcontroller.h>
#include <gdkmm/enums.h>

_DEFS(gtkmm,gtk)
_PINCLUDE(gtkmm/private/eventcontroller_p.h)

namespace Gtk
{
class GTKMM_API Widget;

/** Event controller for focus.
 *
 * %Gtk::EventControllerFocus is an event controller meant for situations
 * where you need to know where the focus is.
 *
 * @newin{3,98}
 *
 * @ingroup Gestures
 */
class GTKMM_API EventControllerFocus : public EventController
{
  _CLASS_GOBJECT(EventControllerFocus, GtkEventControllerFocus, GTK_EVENT_CONTROLLER_FOCUS, EventController, GtkEventController, , , GTKMM_API)

protected:
  _CTOR_DEFAULT

public:
  _WRAP_CREATE()

  _WRAP_METHOD(bool contains_focus() const, gtk_event_controller_focus_contains_focus)
  _WRAP_METHOD(bool is_focus() const, gtk_event_controller_focus_is_focus)

  // no_default_handler because GtkEventControllerFocusClass is private.
  _WRAP_SIGNAL(void enter(), "enter", no_default_handler)
  _WRAP_SIGNAL(void leave(), "leave", no_default_handler)

  _WRAP_PROPERTY("is-focus", bool)
  _WRAP_PROPERTY("contains-focus", bool)
};

} // namespace Gtk
