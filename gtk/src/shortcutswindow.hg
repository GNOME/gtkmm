/* Copyright (C) 2016 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library. If not, see <http://www.gnu.org/licenses/>.
 */

#include <gtkmm/window.h>

_DEFS(gtkmm,gtk)
_PINCLUDE(gtkmm/private/window_p.h)

namespace Gtk
{

class ShortcutsSection;

/** Toplevel which shows help for shortcuts.
 *
 * A ShortcutsWindow shows brief information about the keyboard shortcuts
 * and gestures of an application. The shortcuts can be grouped, and you can
 * have multiple sections in this window, corresponding to the major modes of
 * your application.
 *
 * Additionally, the shortcuts can be filtered by the current view, to avoid
 * showing information that is not relevant in the current application context.
 *
 * The recommended way to construct a ShortcutsWindow is with Builder,
 * by populating a ShortcutsWindow with one or more ShortcutsSection
 * objects, which contain ShortcutsGroup objects that in turn contain objects
 * of class ShortcutsShortcut.
 *
 * @newin{3,20}
 *
 * @ingroup Widgets
 */
class GTKMM_API ShortcutsWindow : public Window
{
  _CLASS_GTKOBJECT(ShortcutsWindow, GtkShortcutsWindow, GTK_SHORTCUTS_WINDOW, Window, GtkWindow, , , GTKMM_API)
  _UNMANAGEABLE

public:
  _CTOR_DEFAULT

  _WRAP_METHOD(void add_section(ShortcutsSection& section), gtk_shortcuts_window_add_section)

  /** Unsets the property_view_name().
   * All groups will then be shown.
   *
   * This is a convenience method that calls property_view_name().reset_value().
   */
  void unset_view_name();

  _IGNORE_SIGNAL(close, search)dnl// keybinding signals

  _WRAP_PROPERTY("section-name", Glib::ustring)
  _WRAP_PROPERTY("view-name", Glib::ustring)
};

} // namespace Gtk
