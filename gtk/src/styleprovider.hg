/* Copyright (C) 2010 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 */

#include <glibmm/interface.h>
#include <gdkmm/display.h>
#include <gtkmm/enums.h>
_DEFS(gtkmm,gtk)
_PINCLUDE(glibmm/private/interface_p.h)

#ifndef DOXYGEN_SHOULD_SKIP_THIS
extern "C"
{
typedef struct _GtkStyleProviderIface GtkStyleProviderIface;
}
#endif /* DOXYGEN_SHOULD_SKIP_THIS */

namespace Gtk
{

/** Interface to provide style information to Gtk::StyleContext.
 *
 * %Gtk::StyleProvider is an interface used to provide style information to a Gtk::StyleContext.
 * See StyleContext::add_provider() and add_provider_for_display().
 *
 * GTK uses the Gtk::StyleProvider implementation for CSS in Gtk::CssProvider.
 *
 * @see Gtk::StyleContext, Gtk::CssProvider
 * @newin{3,0}
 */
class GTKMM_API StyleProvider : public Glib::Interface
{
  _CLASS_INTERFACE(StyleProvider, GtkStyleProvider, GTK_STYLE_PROVIDER, GtkStyleProviderIface, , , GTKMM_API)

public:
  _WRAP_METHOD(static void add_provider_for_display(const Glib::RefPtr<Gdk::Display>& display, const Glib::RefPtr<StyleProvider>& provider, guint priority), gtk_style_context_add_provider_for_display, newin "4,10")
  _WRAP_METHOD(static void remove_provider_for_display(const Glib::RefPtr<Gdk::Display>& display, const Glib::RefPtr<StyleProvider>& provider), gtk_style_context_remove_provider_for_display, newin "4,10")
};

} // namespace Gtk
