/* Copyright (C) 1998-2002 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, see <https://www.gnu.org/licenses/>.
 */

#include <gtkmm/dialog.h>
#include <gtkmm/filechooser.h>

_DEFS(gtkmm,gtk)
_PINCLUDE(gtkmm/private/dialog_p.h)

namespace Gtk
{

/** Convenient file chooser window.
 *
 * A FileChooserDialog looks like this:
 * @image html filechooserdialog1.png
 *
 * @ingroup Dialogs
 */
class GTKMM_API FileChooserDialog
  : public Dialog,
    public FileChooser
{
  _CLASS_GTKOBJECT(FileChooserDialog, GtkFileChooserDialog, GTK_FILE_CHOOSER_DIALOG, Gtk::Dialog, GtkDialog, , , GTKMM_API)
  _IMPLEMENTS_INTERFACE(FileChooser)
  _UNMANAGEABLE
public:
  _IGNORE(gtk_file_chooser_dialog_new)
  FileChooserDialog(Gtk::Window& parent, const Glib::ustring& title, FileChooserAction action = FILE_CHOOSER_ACTION_OPEN);
  explicit FileChooserDialog(const Glib::ustring& title, FileChooserAction action = FILE_CHOOSER_ACTION_OPEN);

  /** @newin{3,24}
   */
  FileChooserDialog(Gtk::Window& parent, const Glib::ustring& title, FileChooserAction action, DialogFlags flags);
  /** @newin{3,24}
   */
  FileChooserDialog(const Glib::ustring& title, FileChooserAction action, DialogFlags flags);

_DEPRECATE_IFDEF_START
  /// @deprecated Use a constructor without the @a backend parameter.
  FileChooserDialog(Gtk::Window& parent, const Glib::ustring& title, FileChooserAction action, const Glib::ustring& backend);
  /// @deprecated Use a constructor without the @a backend parameter.
  FileChooserDialog(const Glib::ustring& title, FileChooserAction action, const Glib::ustring& backend);
_DEPRECATE_IFDEF_END
};

} // namespace Gtk
