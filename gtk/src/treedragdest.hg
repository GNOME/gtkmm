/* Copyright (C) 1998-2002 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 */

#include <glibmm/interface.h>
#include <glibmm/value.h>
#include <gtkmm/treemodel.h>

_DEFS(gtkmm,gtk)
_PINCLUDE(glibmm/private/interface_p.h)

#m4 _PUSH(SECTION_CC_PRE_INCLUDES)
#undef GTK_DISABLE_DEPRECATED
#define GDK_DISABLE_DEPRECATION_WARNINGS 1
#m4 _POP()

_IS_DEPRECATED // The entire file is deprecated.

#ifndef DOXYGEN_SHOULD_SKIP_THIS
extern "C"
{
typedef struct _GtkTreeDragDestIface GtkTreeDragDestIface;
}
#endif /* DOXYGEN_SHOULD_SKIP_THIS */

namespace Gtk
{

/** Interface for Drag-and-Drop destinations in Gtk::TreeView.
 *
 * @ingroup TreeView
 * @deprecated 4.10: List views use widgets to display their contents.
 *   You can use Gtk::DropTarget to implement a drop destination.
 */
class GTKMM_API TreeDragDest : public Glib::Interface
{
  _CLASS_INTERFACE(TreeDragDest, GtkTreeDragDest, GTK_TREE_DRAG_DEST, GtkTreeDragDestIface, , , GTKMM_API)

public:

  _WRAP_METHOD(bool drag_data_received(const TreeModel::Path& dest, const Glib::ValueBase& value), gtk_tree_drag_dest_drag_data_received)
  _WRAP_METHOD(bool row_drop_possible(const TreeModel::Path& dest_path, const Glib::ValueBase& value) const, gtk_tree_drag_dest_row_drop_possible)

protected:
  _WRAP_VFUNC(bool drag_data_received(const TreeModel::Path& dest, const Glib::ValueBase& value),
              drag_data_received)
  _WRAP_VFUNC(bool row_drop_possible(const TreeModel::Path& dest, const Glib::ValueBase& value) const,
              row_drop_possible)
};

} // namespace Gtk
