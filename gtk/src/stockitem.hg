/* Copyright(C) 1998-2002 The gtkmm Development Team
 *
 * This library is free software, ) you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation, ) either
 * version 2.1 of the License, or(at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY, ) without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library, ) if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 */

#include <gdkmm/types.h>
#include <gtkmm/stockid.h>

_DEFS(gtkmm,gtk)

#m4 _PUSH(SECTION_CC_PRE_INCLUDES)
#undef GTK_DISABLE_DEPRECATED
#define GDK_DISABLE_DEPRECATION_WARNINGS 1
#m4 _POP()

_IS_DEPRECATED // This whole file is deprecated.

#ifndef DOXYGEN_SHOULD_SKIP_THIS
extern "C"
{
  typedef struct _GtkStockItem GtkStockItem;
}
#endif /* DOXYGEN_SHOULD_SKIP_THIS */

namespace Gtk
{

/** @deprecated Use icon names instead of StockItem, StockID and BuiltinStockID.
 *
 * Key values are the codes which are sent whenever a key is pressed or released.
 * The complete list of key values can be found in the
 * <a href="https://gitlab.gnome.org/GNOME/gtk/tree/gtk-3-24/gdk/gdkkeysyms.h">gdk/gdkkeysyms.h</a>
 * header file. They are prefixed with <tt>GDK_KEY_</tt>.
 */
class GTKMM_API StockItem
{
  _CLASS_OPAQUE_COPYABLE(StockItem, GtkStockItem, NONE, gtk_stock_item_copy, gtk_stock_item_free, GTKMM_API)

public:
  StockItem(const Gtk::StockID& stock_id, const Glib::ustring& label,
            Gdk::ModifierType modifier = Gdk::ModifierType(0), unsigned int keyval = 0,
            const Glib::ustring& translation_domain = Glib::ustring());

  _MEMBER_GET(stock_id, stock_id, StockID, char*)
  _MEMBER_GET(label, label, Glib::ustring, char*)
  _MEMBER_GET(modifier, modifier, Gdk::ModifierType, GdkModifierType)
  _MEMBER_GET(keyval, keyval, guint, guint)
  _MEMBER_GET(translation_domain, translation_domain, Glib::ustring, char*)

  static bool lookup(const Gtk::StockID& stock_id, Gtk::StockItem& item);
};

} // namespace Gtk

