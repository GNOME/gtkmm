/* Copyright (C) 2003 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, see <https://www.gnu.org/licenses/>.
 */

#include <gtkmm/toggleaction.h>
#include <gtkmm/radiobuttongroup.h>

_DEFS(gtkmm,gtk)
_PINCLUDE(gtkmm/private/toggleaction_p.h)

#m4 _PUSH(SECTION_CC_PRE_INCLUDES)
#undef GTK_DISABLE_DEPRECATED
#define GDK_DISABLE_DEPRECATION_WARNINGS 1
#m4 _POP()

_IS_DEPRECATED // This whole file is deprecated.

namespace Gtk
{

class GTKMM_API StockID; //Deprecated.

/** A deprecated action of which only one in a group can be active.
 *
 * A Gtk::RadioAction is similar to Gtk::RadioMenuItem. A number of
 * radio actions can be linked together so that only one may be active
 * at any one time.
 *
 * @deprecated Use Gio::Action and Gio::SimpleAction instead, and associate actions
 * with Gtk::Actionable widgets. Use Gio::MenuModel for creating menus with
 * Gtk::Menu(const Glib::RefPtr<Gio::MenuModel>& model).
 * See the Gtk::Action base class for more information about the deprecation.
 */
class GTKMM_API RadioAction : public Gtk::ToggleAction
{
  _CLASS_GOBJECT(RadioAction, GtkRadioAction, GTK_RADIO_ACTION, Gtk::ToggleAction, GtkToggleAction, , , GTKMM_API)
public:
  typedef RadioButtonGroup Group;

protected:
  //TODO: Remove the default constructor, because name may not be NULL.
  _CTOR_DEFAULT

_DEPRECATE_IFDEF_START
  /**
   * Creates a radio action.
   *
   * @param group    The radio group this action belongs to.
   * @param name     A unique name for the action.
   * @param stock_id The stock icon to display in widgets representing the
   *                 action.
   * @param label    The label displayed in menu items and on buttons.
   * @param tooltip  A tooltip for the action.
   *
   * @deprecated There is no corresponding replacement when using Gio::Action.
   */
  explicit RadioAction(Group& group, const Glib::ustring& name, const StockID& stock_id = StockID(), const Glib::ustring& label = Glib::ustring(), const Glib::ustring& tooltip = Glib::ustring());

  /** Creates a radio action with an icon name.
   * The radio action's icon will reflect the specified icon name in the
   * user's icon theme.
   *
   * @param group    The radio group this action belongs to.
   * @param name     A unique name for the action.
   * @param icon_name An IconTheme icon name used for widgets representing the
   *                  action.
   * @param label    The label displayed in menu items and on buttons.
   * @param tooltip  A tooltip for the action.
   * @deprecated Use Gio::Action, which can be created by Gio::ActionMap::add_action_radio_string()
   *   or Gio::ActionMap::add_action_radio_integer().<br>
   *   Use Gio::MenuItem::set_icon() to set an icon on a Gio::MenuItem associated with a Gio::Action,
   *   or Gtk::Container::add() to add a Gtk::Image to a Gtk::RadioButton.<br>
   *   Set a label on a menu item with Gio::MenuItem::set_label().
   *   For Gtk::Actionable widgets, use the widget-specific API to set a label.<br>
   *   Set tooltips on associated Gtk::Actionable widgets with Gtk::Widget::set_tooltip_text().
   */
  explicit RadioAction(Group& group, const Glib::ustring& name, const Glib::ustring& icon_name, const Glib::ustring& label = Glib::ustring(), const Glib::ustring& tooltip = Glib::ustring());
_DEPRECATE_IFDEF_END

public:
  //Note that gtk_recent_action_new() does not allow name to be NULL, which suggests that we should not have a default constructor,
  //but it's OK to set the name later:
  _WRAP_CREATE()

_DEPRECATE_IFDEF_START
  /** Creates a radio action.
   *
   * @param group    The radio group this action belongs to.
   * @param name     A unique name for the action.
   * @param label    The label displayed in menu items and on buttons.
   * @param tooltip  A tooltip for the action.
   *
   * @return A new RadioAction.
   * @deprecated Use Gio::Action, which can be created by Gio::ActionMap::add_action_radio_string()
   *   or Gio::ActionMap::add_action_radio_integer().<br>
   *   Set a label on a menu item with Gio::MenuItem::set_label().
   *   For Gtk::Actionable widgets, use the widget-specific API to set a label.<br>
   *   Set tooltips on associated Gtk::Actionable widgets with Gtk::Widget::set_tooltip_text().
   */
  static Glib::RefPtr<RadioAction> create(Group& group, const Glib::ustring& name, const Glib::ustring& label = Glib::ustring(), const Glib::ustring& tooltip = Glib::ustring());

  /** Creates a radio action with a stock ID.
   * The stock ID is used to set a default icon, text and accelerator for
   * the radio action.
   *
   * @param group    The radio group this action belongs to.
   * @param name     A unique name for the action.
   * @param stock_id The stock icon to display in widgets representing the
   *                 action.
   * @param label    The label displayed in menu items and on buttons.
   * @param tooltip  A tooltip for the action.
   *
   * @return A new RadioAction.
   *
   * @deprecated There is no corresponding replacement when using Gio::Action.
   */
  static Glib::RefPtr<RadioAction> create(Group& group, const Glib::ustring& name, const Gtk::StockID& stock_id, const Glib::ustring& label = Glib::ustring(), const Glib::ustring& tooltip = Glib::ustring());

  /** Creates a radio action with an icon name.
   * The radio action's icon will reflect the specified icon name in the
   * user's icon theme.
   *
   * @param group    The radio group this action belongs to.
   * @param name     A unique name for the action.
   * @param icon_name An IconTheme icon name used for widgets representing the
   *                  action.
   * @param label    The label displayed in menu items and on buttons.
   * @param tooltip  A tooltip for the action.
   *
   * @return A new RadioAction.
   * @deprecated Use Gio::Action, which can be created by Gio::ActionMap::add_action_radio_string()
   *   or Gio::ActionMap::add_action_radio_integer().<br>
   *   Use Gio::MenuItem::set_icon() to set an icon on a Gio::MenuItem associated with a Gio::Action,
   *   or Gtk::Container::add() to add a Gtk::Image to a Gtk::RadioButton.<br>
   *   Set a label on a menu item with Gio::MenuItem::set_label().
   *   For Gtk::Actionable widgets, use the widget-specific API to set a label.<br>
   *   Set tooltips on associated Gtk::Actionable widgets with Gtk::Widget::set_tooltip_text().
   */
  static Glib::RefPtr<RadioAction> create_with_icon_name(Group& group, const Glib::ustring& name, const Glib::ustring& icon_name, const Glib::ustring& label, const Glib::ustring& tooltip);
_DEPRECATE_IFDEF_END

  _WRAP_METHOD(Group get_group(), gtk_radio_action_get_group,
    deprecated "There is no corresponding replacement when using Gio::Action.")
_DEPRECATE_IFDEF_START
  /** @deprecated There is no corresponding replacement when using Gio::Action.
   */
  void set_group(Group& group);
_DEPRECATE_IFDEF_END
  _IGNORE(gtk_radio_action_set_group)

  _WRAP_METHOD(void join_group(const Glib::RefPtr<RadioAction>& group_source), gtk_radio_action_join_group,
    deprecated "There is no corresponding replacement when using Gio::Action.")

  _WRAP_METHOD(int get_current_value() const, gtk_radio_action_get_current_value,
    deprecated "Use Gio::Action::get_state() on a Gio::Action instead.")
  _WRAP_METHOD(void set_current_value(int current_value), gtk_radio_action_set_current_value,
    deprecated "Use Gio::Action::change_state() on a Gio::Action instead.")

  #m4 _CONVERSION(`GtkRadioAction*',`const Glib::RefPtr<RadioAction>&',`Glib::wrap($3, true)')

  _WRAP_SIGNAL(void changed(const Glib::RefPtr<RadioAction>& current), changed,
    deprecated "Use Gio::SimpleAction::signal_activate() or Gio::SimpleAction::signal_change_state() instead.")

  _WRAP_PROPERTY("value", int, deprecated "Use Gio::Action instead, and Gtk::Actionable::property_action_target() on one of the associated actionable widgets.")
  //Probably wouldn't work: _WRAP_PROPERTY("group", Group)
  _IGNORE_PROPERTY(group)
  _WRAP_PROPERTY("current-value", int, deprecated "Use Gio::Action::property_state() and Gio::SimpleAction::property_state() instead.")
};

} // namespace Gtk
